var m=Object.create;var a=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,h=Object.prototype.hasOwnProperty;var b=(r,e)=>{for(var o in e)a(r,o,{get:e[o],enumerable:!0})},n=(r,e,o,i)=>{if(e&&typeof e=="object"||typeof e=="function")for(let t of f(e))!h.call(r,t)&&t!==o&&a(r,t,{get:()=>e[t],enumerable:!(i=d(e,t))||i.enumerable});return r};var p=(r,e,o)=>(o=r!=null?m(g(r)):{},n(e||!r||!r.__esModule?a(o,"default",{value:r,enumerable:!0}):o,r)),k=r=>n(a({},"__esModule",{value:!0}),r);var w={};b(w,{StyledMarkdown:()=>v});module.exports=k(w);var s=require("@redocly/theme"),l=p(require("styled-components"));const v=(0,l.default)(s.Markdown)`
  font-size: ${({isField:r})=>r?"var(--font-size-base)":"var(--font-size-lg)"}; // TODO: refactor parameters
  line-height: ${({isField:r})=>r?"var(--line-height-base)":"var(--line-height-lg)"};
  word-break: break-word;

  p {
    margin-bottom: 0;
  }
`;0&&(module.exports={StyledMarkdown});
