import type { GraphQLField, GraphQLSchema, GraphQLUnionType } from 'graphql';
import type { TypeReference } from './models';
export declare class AppStore {
    private schema;
    private referenceMap;
    constructor(schema: GraphQLSchema);
    getQueryType(): import("graphql/jsutils/Maybe").Maybe<import("graphql").GraphQLObjectType<any, any>>;
    getQueryField(name: string): GraphQLField<any, any, any> | null | undefined;
    getMutationType(): import("graphql/jsutils/Maybe").Maybe<import("graphql").GraphQLObjectType<any, any>>;
    getMutationField(name: string): GraphQLField<any, any, any> | null | undefined;
    getSubscriptionType(): import("graphql/jsutils/Maybe").Maybe<import("graphql").GraphQLObjectType<any, any>>;
    getSubscriptionField(name: string): GraphQLField<any, any, any> | null | undefined;
    getDirective(name: string): import("graphql").GraphQLDirective | undefined;
    getType(name: string): import("graphql").GraphQLInterfaceType | import("graphql").GraphQLInputObjectType | import("graphql").GraphQLScalarType<unknown, unknown> | import("graphql").GraphQLEnumType | import("graphql").GraphQLObjectType<any, any> | GraphQLUnionType | undefined;
    getTypeReferences(name: string): TypeReference[] | undefined;
    private createReferenceMap;
    private setFieldsTypeReferences;
    private setUnionTypeReferences;
    private setReference;
}
