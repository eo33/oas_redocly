"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FEEDBACK_MAX_RATING = void 0;
exports.Rating = Rating;
const React = __importStar(require("react"));
const styled_components_1 = __importDefault(require("styled-components"));
const react_1 = require("react");
const hooks_1 = require("../../core/hooks");
const RadioCheckButtonIcon_1 = require("../../icons/RadioCheckButtonIcon/RadioCheckButtonIcon");
const Comment_1 = require("../../components/Feedback/Comment");
const Reasons_1 = require("../../components/Feedback/Reasons");
const Stars_1 = require("../../components/Feedback/Stars");
const Button_1 = require("../../components/Button/Button");
exports.FEEDBACK_MAX_RATING = 5;
function Rating({ settings, onSubmit, className }) {
    const { label, submitText, comment: commentSettings, reasons: reasonsSettings } = settings || {};
    const [isSubmitted, setIsSubmitted] = React.useState(false);
    const [score, setScore] = React.useState(0);
    const [reasons, setReasons] = React.useState([]);
    const [comment, setComment] = React.useState('');
    const { useTranslate } = (0, hooks_1.useThemeHooks)();
    const { translate } = useTranslate();
    const onSubmitRatingForm = () => {
        onSubmit({
            score,
            comment,
            reasons,
            max: exports.FEEDBACK_MAX_RATING,
        });
        setIsSubmitted(true);
    };
    const onCancelRatingForm = () => {
        setScore(0);
    };
    const displayReasons = !!(score && reasonsSettings && !reasonsSettings.hide);
    const displayComment = !!(score && !(commentSettings === null || commentSettings === void 0 ? void 0 : commentSettings.hide));
    const displaySubmitBnt = !!(score && (displayReasons || displayComment));
    (0, react_1.useEffect)(() => {
        if (score && !displayComment && !displayReasons) {
            onSubmitRatingForm();
        }
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [score, displayComment, displayReasons]);
    if (isSubmitted) {
        return (React.createElement(RatingWrapper, { "data-component-name": "Feedback/Rating" },
            React.createElement(StyledFormMandatoryFields, null,
                React.createElement(Label, { "data-translation-key": "feedback.settings.submitText" }, submitText ||
                    translate('feedback.settings.submitText', 'Thank you for helping improve our documentation!')),
                React.createElement(RadioCheckButtonIcon_1.RadioCheckButtonIcon, null))));
    }
    return (React.createElement(RatingWrapper, { "data-component-name": "Feedback/Rating", className: className },
        React.createElement(StyledForm, null,
            React.createElement(StyledFormMandatoryFields, null,
                React.createElement(Label, { "data-translation-key": "feedback.settings.label" }, label || translate('feedback.settings.label', 'Was this helpful?')),
                React.createElement(StyledMandatoryFieldContainer, null,
                    React.createElement(Stars_1.Stars, { max: exports.FEEDBACK_MAX_RATING, onChange: setScore, value: score }))),
            (displayReasons || displayComment) && (React.createElement(StyledFormOptionalFields, null,
                displayReasons && (React.createElement(Reasons_1.Reasons, { settings: {
                        label: reasonsSettings === null || reasonsSettings === void 0 ? void 0 : reasonsSettings.label,
                        items: (reasonsSettings === null || reasonsSettings === void 0 ? void 0 : reasonsSettings.items) || [],
                        component: reasonsSettings === null || reasonsSettings === void 0 ? void 0 : reasonsSettings.component,
                    }, onChange: setReasons })),
                displayComment && (React.createElement(Comment_1.Comment, { standAlone: false, onSubmit: ({ comment }) => setComment(comment), settings: {
                        label: (commentSettings === null || commentSettings === void 0 ? void 0 : commentSettings.label) ||
                            translate('feedback.settings.comment.label', 'Please share your feedback with us.'),
                    } })))),
            displaySubmitBnt && (React.createElement(ButtonsContainer, null,
                React.createElement(Button_1.Button, { onClick: onCancelRatingForm, variant: "text", size: "small" }, "Cancel"),
                React.createElement(Button_1.Button, { onClick: onSubmitRatingForm, variant: "secondary", size: "small" }, "Submit"))))));
}
const StyledForm = styled_components_1.default.form `
  width: 100%;
  gap: var(--spacing-sm);
  display: flex;
  flex-direction: column;
`;
const StyledFormOptionalFields = styled_components_1.default.div `
  display: flex;
  flex-flow: column;
`;
const StyledFormMandatoryFields = styled_components_1.default.div `
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: var(--spacing-xs);
`;
const StyledMandatoryFieldContainer = styled_components_1.default.div `
  display: flex;
`;
const RatingWrapper = styled_components_1.default.div `
  font-family: var(--font-family-base);
  display: flex;
  justify-content: space-between;
  align-items: center;
`;
const Label = styled_components_1.default.h4 `
  font-family: var(--feedback-font-family);
  font-weight: var(--font-weight-regular);
  font-size: var(--feedback-header-font-size);
  line-height: var(--feedback-header-line-height);
  color: var(--feedback-header-text-color);
  margin: 0;
`;
const ButtonsContainer = styled_components_1.default.div `
  display: flex;
  justify-content: end;
  margin-bottom: var(--spacing-xxs);
  gap: var(--spacing-xxs);
`;
//# sourceMappingURL=Rating.js.map