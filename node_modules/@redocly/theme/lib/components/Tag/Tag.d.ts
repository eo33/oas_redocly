import React from 'react';
type DefaultStatusColor = 'success' | 'processing' | 'error' | 'warning' | 'default';
type ActionStatusColor = 'approved' | 'declined' | 'pending';
type SubjectStatusColor = 'active' | 'draft' | 'deprecated' | 'product';
type HttpColor = 'get' | 'post' | 'put' | 'delete' | 'option' | 'patch' | 'head' | 'hook' | 'link';
type HttpStatusColor = 'http-deprecated';
type StatusColor = DefaultStatusColor | ActionStatusColor | SubjectStatusColor | HttpColor | HttpStatusColor;
type Color = 'red' | 'green' | 'blue' | 'grey' | 'gold' | 'cyan' | 'magenta' | 'purple' | 'lime' | 'geekblue' | 'yellow';
export type TagProps = {
    className?: string;
    children?: React.ReactNode;
    closable?: boolean;
    color?: StatusColor | Color | string;
    borderless?: boolean;
    withStatusDot?: boolean;
    statusDotColor?: string;
    size?: string;
    icon?: React.ReactNode;
    active?: boolean;
    onClick?: (event: React.MouseEvent) => void;
    onClose?: (event: React.MouseEvent) => void;
};
export declare function Tag({ children, color, icon, active, closable, onClick, onClose, size, borderless, withStatusDot, statusDotColor, ...otherProps }: TagProps): JSX.Element;
export {};
