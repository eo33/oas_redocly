"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.VersionPickerSelect = void 0;
exports.VersionPicker = VersionPicker;
const React = __importStar(require("react"));
const styled_components_1 = __importDefault(require("styled-components"));
const hooks_1 = require("../../core/hooks");
const Select_1 = require("../../components/Select/Select");
const SelectInput_1 = require("../../components/Select/SelectInput");
function VersionPicker(props) {
    const themeConfig = (0, hooks_1.useThemeConfig)();
    const { versionPicker } = themeConfig;
    const { useTranslate } = (0, hooks_1.useThemeHooks)();
    const { translate } = useTranslate();
    const { versions = [], onChange } = props;
    const options = versions.map(({ label, version, active }) => ({
        element: label || version,
        value: version,
        active: active,
    }));
    const value = options.find((item) => item.active);
    if (versionPicker === null || versionPicker === void 0 ? void 0 : versionPicker.hide) {
        return null;
    }
    const handleOnChange = (value) => {
        const selectedVersion = versions.find((v) => v.version === value);
        onChange(selectedVersion);
    };
    if (!options.length && !(versionPicker === null || versionPicker === void 0 ? void 0 : versionPicker.showForUnversioned))
        return null;
    return (React.createElement(VersionsPickerWrapper, { "data-component-name": "VersionPicker/VersionPicker" },
        React.createElement(VersionPickerLabel, { "data-translation-key": "versionPicker.label" }, translate('versionPicker.label', 'Version:')),
        React.createElement(exports.VersionPickerSelect, { placeholder: translate('versionPicker.unversioned', 'All versions'), disabled: !options.length, options: options, value: value, onChange: handleOnChange })));
}
const VersionPickerLabel = styled_components_1.default.label `
  font-size: var(--version-picker-label-font-size);
  font-weight: var(--version-picker-label-font-weight);
`;
exports.VersionPickerSelect = (0, styled_components_1.default)(Select_1.Select) `
  --select-list-item-bg-color-active: var(--version-picker-list-item-bg-color-active);
  --select-list-item-bg-color-hover: var(--version-picker-list-item-bg-color-hover);

  flex: 1;

  font-size: var(--version-picker-font-size);
  font-weight: var(--version-picker-font-weight);
  border-radius: var(--version-picker-border-radius);
  line-height: var(--version-picker-line-height);
  color: var(--version-picker-text-color);

  ${SelectInput_1.SelectInputWrapper} {
    border: var(--version-picker-input-border);
    border-radius: var(--version-picker-input-border-radius);
    padding: var(--version-picker-input-padding-vertical)
      var(--version-picker-input-padding-horizontal);
  }
`;
const VersionsPickerWrapper = styled_components_1.default.div `
  display: flex;
  gap: 10px;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  padding: var(--version-picker-padding-vertical) var(--version-picker-padding-horizontal);
  border-bottom: var(--version-picker-border-bottom);
`;
//# sourceMappingURL=VersionPicker.js.map