"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Panel = Panel;
const react_1 = __importStar(require("react"));
const styled_components_1 = __importDefault(require("styled-components"));
const PanelBody_1 = require("../../components/Panel/PanelBody");
const PanelHeader_1 = require("../../components/Panel/PanelHeader");
const PanelHeaderTitle_1 = require("../../components/Panel/PanelHeaderTitle");
const ChevronDownIcon_1 = require("../../icons/ChevronDownIcon/ChevronDownIcon");
const ChevronRightIcon_1 = require("../../icons/ChevronRightIcon/ChevronRightIcon");
function Panel({ expanded = true, isExpandable = true, renderChildrenHidden = false, header, footer, className = 'panel-default', children, onToggle, description, }) {
    const [isExpanded, setExpanded] = (0, react_1.useState)(expanded);
    const [animate, setAnimate] = (0, react_1.useState)(false);
    const toggle = ({ target }) => {
        if (target instanceof HTMLAnchorElement || !isExpandable)
            return;
        setAnimate(true);
        setExpanded(!isExpanded);
        onToggle === null || onToggle === void 0 ? void 0 : onToggle(!isExpanded);
    };
    (0, react_1.useEffect)(() => setExpanded(expanded), [expanded]);
    return (react_1.default.createElement(PanelWrapper, { className: className, "data-testid": typeof header === 'string' ? ('panel-' + header).replace(/ /g, '-').toLowerCase() : null, "data-component-name": "Panel/Panel" },
        header &&
            (typeof header === 'function' ? (header({ expanded: isExpanded, toggle })) : (react_1.default.createElement(PanelHeader_1.PanelHeader, { "data-testid": "panel-header", onClick: toggle, expanded: isExpanded, isExpandable: isExpandable },
                react_1.default.createElement(InlineBox, null,
                    react_1.default.createElement(PanelHeaderTitle_1.PanelHeaderTitle, { "data-testid": "title" }, header),
                    isExpandable &&
                        (isExpanded ? (react_1.default.createElement(ChevronDownIcon_1.ChevronDownIcon, { color: "--panel-chevron-icon-color" })) : (react_1.default.createElement(ChevronRightIcon_1.ChevronRightIcon, { color: "--panel-chevron-icon-color" }))),
                    description)))),
        (isExpanded || renderChildrenHidden) && (react_1.default.createElement(PanelBody_1.PanelBody, { "data-testid": "panel-body", hidden: !isExpanded, animate: animate }, children)),
        footer));
}
const PanelWrapper = styled_components_1.default.div `
  background-color: var(--panel-bg-color);
  color: var(--panel-text-color);
  font-family: var(--panel-font-family-local);
  font-size: var(--panel-font-size-local);
  font-weight: var(--panel-font-weight-local);
  border-radius: var(--panel-border-radius-local);
  border: var(--panel-border-local);

  ${PanelHeader_1.PanelHeader} + ${PanelBody_1.PanelBody} {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
  }

  &:not(:last-child) {
    margin-bottom: var(--panel-gap-vertical);
  }
`;
const InlineBox = styled_components_1.default.div `
  display: inline-flex;
  align-items: center;
`;
//# sourceMappingURL=Panel.js.map