"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Heading = Heading;
const react_1 = __importStar(require("react"));
const utils_1 = require("../../../core/utils");
const LinkIcon_1 = require("../../../icons/LinkIcon/LinkIcon");
/**
 * Class name for all MD tags
 */
const mdClassName = 'md';
function Heading({ level, id, children, 'data-source': dataSource, 'data-hash': dataHash, className, }) {
    const linkEl = (react_1.default.createElement("a", { "aria-label": `link  to ${id}`, href: `#${id}`, className: (0, utils_1.concatClassNames)('anchor', 'before') },
        react_1.default.createElement(LinkIcon_1.LinkIcon, { size: "14px", color: "--heading-anchor-color" })));
    return (0, react_1.createElement)(`h${level}`, {
        id,
        className: (0, utils_1.concatClassNames)('heading-anchor', mdClassName, className),
        'data-component-name': 'Markdoc/Heading/Heading',
        'data-source': dataSource,
        'data-hash': dataHash,
    }, react_1.default.createElement(react_1.default.Fragment, null,
        linkEl,
        children));
}
//# sourceMappingURL=Heading.js.map