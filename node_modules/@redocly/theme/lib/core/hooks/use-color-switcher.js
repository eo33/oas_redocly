"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useColorSwitcher = void 0;
const react_1 = require("react");
const hooks_1 = require("../../core/hooks");
const useColorSwitcher = () => {
    const themeSettings = (0, hooks_1.useThemeConfig)();
    const { useTelemetry } = (0, hooks_1.useThemeHooks)();
    const telemetry = useTelemetry();
    const colorMode = themeSettings.colorMode;
    const modes = (colorMode === null || colorMode === void 0 ? void 0 : colorMode.modes) || ['light', 'dark'];
    const defaultColor = modes[0] || 'light';
    const [activeColorMode, setActiveColorMode] = (0, react_1.useState)(defaultColor);
    const initActiveColorMode = () => {
        const activeMode = Array.from(document.documentElement.classList).find((c) => modes.includes(c));
        setActiveColorMode(activeMode || defaultColor);
    };
    const switchColorMode = () => {
        const activeIndex = modes.indexOf(activeColorMode);
        const mode = activeIndex < modes.length - 1 ? modes[activeIndex + 1] : modes[0];
        localStorage.setItem('colorSchema', mode);
        document.documentElement.className = `${mode} notransition`;
        window.requestAnimationFrame(() => {
            document.documentElement.classList.remove('notransition');
        });
        telemetry.send('color_mode_switched', { from: activeColorMode, to: mode });
        setActiveColorMode(mode);
        return mode;
    };
    return {
        isSwitcherHidden: colorMode === null || colorMode === void 0 ? void 0 : colorMode.hide,
        initActiveColorMode,
        switchColorMode,
        activeColorMode,
    };
};
exports.useColorSwitcher = useColorSwitcher;
//# sourceMappingURL=use-color-switcher.js.map