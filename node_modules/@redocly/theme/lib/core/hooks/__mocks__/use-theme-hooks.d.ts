export declare const useThemeHooks: jest.Mock<{
    useTranslate: jest.Mock<{
        translate: jest.Mock<any, [key: string, defaultValue: string], any>;
    }, [], any>;
    useTelemetry: jest.Mock<{
        send: jest.Mock<any, any, any>;
    }, [], any>;
    useBreadcrumbs: jest.Mock<any, any, any>;
    usePageSharedData: jest.Mock<any, any, any>;
    useCatalog: jest.Mock<{
        groups: never[];
        filters: never[];
        filterTerm: string;
        setFilterTerm: jest.Mock<any, any, any>;
    }, [], any>;
    useL10n: jest.Mock<{
        changeLanguage: jest.Mock<any, any, any>;
    }, [], any>;
    useL10nConfig: jest.Mock<{
        currentLocale: string;
        defaultLocale: string;
        locales: {
            code: string;
            name: string;
        }[];
    }, [], any>;
    usePreloadHistory: jest.Mock<{
        push: jest.Mock<any, any, any>;
    }, [], any>;
    useCurrentProduct: jest.Mock<any, any, any>;
    useProducts: jest.Mock<never[], [], any>;
    useSearch: jest.Mock<{
        query: jest.Mock<any, any, any>;
        setQuery: jest.Mock<any, any, any>;
        items: never[];
        isLoading: boolean;
    }, [], any>;
    useAiSearch: jest.Mock<{
        askQuestion: jest.Mock<any, any, any>;
        references: never[];
    }, [], any>;
    useFacetQuery: jest.Mock<{
        searchFacet: null;
        setSearchFacet: jest.Mock<any, any, any>;
        setSearchFacetQuery: jest.Mock<any, any, any>;
    }, [], any>;
    useMarkdownText: jest.Mock<null, [], any>;
    useUserMenu: jest.Mock<{
        userData: {
            isAuthenticated: boolean;
            name: string;
            email: string;
            picture: string;
        };
        handleLogout: jest.Mock<any, any, any>;
        loginUrl: string;
        hasDeveloperOnboarding: boolean;
    }, [], any>;
    usePageVersions: jest.Mock<any, any, any>;
    useSidebarItems: jest.Mock<any, any, any>;
    useSidebarSiblingsData: jest.Mock<any, any, any>;
    useSubmitFeedback: jest.Mock<{
        submitFeedback: jest.Mock<any, any, any>;
    }, [], any>;
}, [], any>;
