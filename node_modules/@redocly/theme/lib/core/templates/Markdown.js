"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = default_1;
const React = __importStar(require("react"));
const react_router_dom_1 = require("react-router-dom");
const hooks_1 = require("../../core/hooks");
const DocumentationLayout_1 = require("../../layouts/DocumentationLayout");
const Markdown_1 = require("../../components/Markdown/Markdown");
const TableOfContent_1 = require("../../components/TableOfContent/TableOfContent");
const Feedback_1 = require("../../components/Feedback/Feedback");
const utils_1 = require("../../core/utils");
function default_1({ pageProps, children }) {
    var _a;
    const [wrapperElement, setWrapperElement] = React.useState(null);
    const { useSidebarSiblingsData } = (0, hooks_1.useThemeHooks)();
    const { markdown } = (0, hooks_1.useThemeConfig)();
    const { nextPage, prevPage } = useSidebarSiblingsData() || {};
    const { pathname } = (0, react_router_dom_1.useLocation)();
    const wrapperRefCb = React.useCallback((node) => {
        if (!node) {
            return;
        }
        setWrapperElement(node);
    }, 
    // TODO: is this correct?
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [pageProps.headings]);
    const tableOfContent = (React.createElement(TableOfContent_1.TableOfContent, { headings: pageProps.headings, contentWrapper: wrapperElement }));
    const { type, settings, hide } = ((_a = pageProps.frontmatter) === null || _a === void 0 ? void 0 : _a.feedback) || {};
    const feedback = React.createElement(Feedback_1.Feedback, { type: type, hide: hide, settings: settings, path: pathname });
    const documentationLayoutProps = {
        tableOfContent,
        feedback,
        config: markdown,
        editPage: pageProps.editPage,
        lastModified: pageProps.lastModified,
        nextPage,
        prevPage,
    };
    if (utils_1.IS_BROWSER) {
        (0, utils_1.onDocumentReady)(utils_1.extendDetailsBehaviour);
    }
    return (React.createElement(DocumentationLayout_1.DocumentationLayout, Object.assign({}, documentationLayoutProps),
        React.createElement(Markdown_1.Markdown, { ref: wrapperRefCb }, children)));
}
//# sourceMappingURL=Markdown.js.map