import type React from 'react';
export type SelectOption<T> = {
    value: T;
    element?: React.ReactNode | JSX.Element | string;
    label?: string;
};
export type SelectProps<T = any> = {
    value?: SelectOption<T> | SelectOption<T>[] | T | T[];
    options: SelectOption<T>[];
    multiple?: boolean;
    searchable?: boolean;
    clearable?: boolean;
    dataAttributes?: Record<string, string>;
    className?: string;
    withArrow?: boolean;
    triggerEvent?: 'click' | 'hover';
    placement?: 'top' | 'bottom';
    alignment?: 'start' | 'end';
    onlyIcon?: boolean;
    placeholder?: string;
    disabled?: boolean;
    hideCheckmarkIcon?: boolean;
    checkmarkIconPosition?: 'start' | 'end';
    dataTestId?: string;
    icon?: React.ReactNode;
    footer?: React.ReactNode;
    onChange?: (value: T | T[]) => void;
    renderInput?: () => React.ReactElement;
    renderDivider?: () => React.ReactElement;
    onSearch?: (value: T | null) => void;
};
