import type { ItemBadge, REDOCLY_ROUTE_RBAC } from '@redocly/config';
import type { ProductConfig } from '../../config';
export type OperationParameter = {
    name: string | string[];
    description: string | string[];
    place: string;
    path?: string[];
};
export type SearchDocument = {
    id: string;
    url: string;
    title: string | string[];
    text: string | string[];
    path?: string[];
    httpMethod?: string;
    httpPath?: string | string[];
    deprecated?: boolean;
    parameters?: OperationParameter[];
    metadata?: Record<string, any>;
    version?: string;
    versionFolderId?: string;
    isDefaultVersion?: boolean;
    product?: ProductConfig;
    'redocly::teams-rbac'?: {
        [x: string]: string;
    };
    [REDOCLY_ROUTE_RBAC]?: {
        slug?: string;
        fsPath?: string;
    };
    badges?: ItemBadge[];
    facets?: Record<string, string>;
    tags?: string[];
    rbacTeams?: string[];
};
export type ParameterHighlight = {
    name: string;
    description: string;
    place: string;
    path: string[];
};
export type SearchItemData = {
    document: SearchDocument;
    highlight: Record<string, string> & {
        parameters?: ParameterHighlight[];
        path?: string[];
    };
};
export type SearchFacet = {
    name: string;
    field: string;
    type: SearchFacetType;
    values: string[] | SearchFacetCount[];
    isTop?: boolean;
    index?: number;
};
export type SearchFacetCount = {
    value: string;
    count: number;
    isCounterVisible?: boolean;
};
export type SearchFacetQuery = {
    query: string;
    filter: SearchFilterItem[];
    facetQuery: string;
};
export type SearchFacetType = 'input' | 'multi-select' | 'select' | 'switch' | 'radio' | 'tags' | 'checkbox';
export type SearchFilterItem = {
    field: string;
    values: string[];
    isTop?: boolean;
};
