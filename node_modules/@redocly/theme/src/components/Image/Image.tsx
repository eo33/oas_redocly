import React from 'react';
import styled from 'styled-components';

import { parseSrcSet } from '@redocly/theme/core/utils';

export type ImageProps = {
  src?: string;
  srcSet?: string;
  alt?: string;
  className?: string;
};

export function Image(props: ImageProps): JSX.Element {
  const { src, srcSet, alt, className } = props;

  const parsedSourceSetMap = React.useMemo(() => {
    return srcSet ? parseSrcSet(srcSet) : new Map();
  }, [srcSet]);

  return (
    <>
      {src ? (
        <img src={src} alt={alt} className={className} />
      ) : (
        Array.from(parsedSourceSetMap).map(([key, value]) => (
          <ColorModeAwareImage
            key={key}
            colorMode={key}
            src={value}
            alt={alt}
            className={className}
          />
        ))
      )}
    </>
  );
}

const ColorModeAwareImage = styled.img<{ colorMode: string }>`
  html:not(.${(props) => props.colorMode}) && {
    display: none;
  }
`;
