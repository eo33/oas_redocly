import markdoc from '@markdoc/markdoc';

import type { Config, Node } from '@markdoc/markdoc';
import type { MarkdocSchemaWrapper } from '@redocly/theme/markdoc/tags/types';

// This custom tag prevents evaluating any children markdoc tags (no children) so we can
// have markdoc examples in code fences
// approach copied from: https://github.com/markdoc/docs/blob/main/markdoc/tags/markdoc-example.markdoc.js
export const markdocExample: MarkdocSchemaWrapper = {
  schema: {
    attributes: {
      renderDemo: { type: Boolean, default: false },
      withLabels: { type: Boolean, required: false },
      codeLabel: { type: String, required: false },
      resultLabel: { type: String, required: false },
    },
    children: ['fence'],
    transform(node: Node, config: Config) {
      const attributes = node.transformAttributes(config);
      const { content } = node.children[0]?.attributes || {};
      if (!content) return null;

      const language = 'markdoc';

      const annotations = node.children[0].annotations;
      let title = null;
      if (annotations.length > 0) {
        const fenceWithTitle = annotations.find((annotation) => annotation.name === 'title');
        title = fenceWithTitle?.value;
      }

      return new markdoc.Tag(
        'MarkdocExample',
        {
          ...attributes,
          title,
          language,
          demoContent: node.children[0].transformChildren(config),
          rawContent: content,
        },
        [],
      );
    },
  },
  tagName: 'markdoc-example',
};
