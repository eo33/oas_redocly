import { useState } from 'react';

import { useThemeConfig, useThemeHooks } from '@redocly/theme/core/hooks';

export const useColorSwitcher = () => {
  const themeSettings = useThemeConfig();
  const { useTelemetry } = useThemeHooks();
  const telemetry = useTelemetry();
  const colorMode = themeSettings.colorMode;
  const modes = colorMode?.modes || ['light', 'dark'];
  const defaultColor = modes[0] || 'light';
  const [activeColorMode, setActiveColorMode] = useState(defaultColor);

  const initActiveColorMode = (): void => {
    const activeMode = Array.from(document.documentElement.classList).find((c) =>
      modes.includes(c),
    );
    setActiveColorMode(activeMode || defaultColor);
  };

  const switchColorMode = (): string => {
    const activeIndex = modes.indexOf(activeColorMode);
    const mode = activeIndex < modes.length - 1 ? modes[activeIndex + 1] : modes[0];
    localStorage.setItem('colorSchema', mode);
    document.documentElement.className = `${mode} notransition`;

    window.requestAnimationFrame(() => {
      document.documentElement.classList.remove('notransition');
    });
    telemetry.send('color_mode_switched', { from: activeColorMode, to: mode });

    setActiveColorMode(mode);
    return mode;
  };

  return {
    isSwitcherHidden: colorMode?.hide,
    initActiveColorMode,
    switchColorMode,
    activeColorMode,
  };
};
