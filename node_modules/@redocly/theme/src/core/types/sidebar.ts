import type {
  REDOCLY_TEAMS_RBAC,
  REDOCLY_ROUTE_RBAC,
  MenuStyle,
  RbacScopeItems,
  ItemBadge,
} from '@redocly/config';
import type { MenuItemType } from '@redocly/theme/core/constants';
export type { MenuStyle } from '@redocly/config';

export type SidebarNavItem = {
  label?: string;
  labelTranslationKey?: string;
  sublabel?: string;
  subLabelTranslationKey?: string;
  icon?: string;
  link?: string;
  type?: string;
  httpVerb?: string;
  expanded?: string;
  selectFirstItemOnExpand?: boolean;
  pageId?: string;
  redocPrevLink?: string;
  redocPrevLabel?: string;
  redocNextLink?: string;
  redocNextLabel?: string;
  redocFakePage?: boolean;
  redocInfoPageId?: string;
  target?: string;
  external?: boolean;
  items?: SidebarNavItem[];
  [REDOCLY_TEAMS_RBAC]?: RbacScopeItems;
  [REDOCLY_ROUTE_RBAC]?: {
    slug?: string;
    fsPath?: string;
  };
  menuStyle?: MenuStyle;
  separatorLine?: boolean;
  linePosition?: 'top' | 'bottom';
  version?: string;
  variant?: 'primary' | 'secondary';
  badges?: ItemBadge[];
};

export type ItemState = Omit<SidebarNavItem, 'items'> & {
  items: ItemState[];
  active: boolean;
  hasActiveSubItem: boolean;
  menuStyle?: MenuStyle;
  languageInsensitive?: boolean;
  modified?: boolean; //item from openapi-docs sidebar
  deprecated?: boolean; //item from openapi-docs sidebar
};

export type DrilldownMenuItemDetails = {
  previousLink?: string;
  item: ItemState;
};

export type MenuItemProps = {
  item: ItemState;
  activeItem?: ItemState;
  className?: string;
  isMobile?: boolean;
  depth?: number;
  type?: MenuItemType;
  isExpanded?: boolean;
  onClick?: () => void;
};

export type MenuItemsAnimation = 'slideInLeft' | 'slideInRight';
