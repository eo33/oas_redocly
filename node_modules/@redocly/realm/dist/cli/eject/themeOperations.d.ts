import type { Glob } from './glob';
import type { EjectOptions } from './types';
export type FileTree = {
    ['.']?: string[];
} & {
    [key: string]: FileTree;
};
export declare function toFileTree(files: string[], relativeTo?: string): FileTree;
export declare function stripComponentThemePath(componentPath: string, componentThemeFolder: string): string;
export declare function getThemeFiles(pathToThemeFolder: string, options?: {
    ignoreFilePatterns?: Glob;
    onlyFilePatterns?: Glob;
}): string[];
export declare function getEjectedFiles(customThemeFiles: string[], themeFiles: string[]): string[];
export declare function copyThemeComponent(portalCustomThemeDir: string, pathToThemeFolder: string, componentToCopy: string): string;
export declare function copyComponentAndReport(componentToCopy: string, copyFrom: string, copyTo: string, options?: EjectOptions): void;
export declare function copyComponent({ componentToCopy, ejectedFiles, copyFrom, copyTo, options, }: {
    componentToCopy: string;
    ejectedFiles?: string[];
    copyFrom: string;
    copyTo: string;
    options?: EjectOptions;
}): Promise<void>;
export declare function copyComponentsFromList({ componentList, ejectedComponents, pathToThemeFolder, pathToPortalCustomThemeFolder, options, }: {
    componentList: string[];
    ejectedComponents: string[];
    pathToThemeFolder: string;
    pathToPortalCustomThemeFolder: string;
    options?: EjectOptions;
}): Promise<void>;
//# sourceMappingURL=themeOperations.d.ts.map