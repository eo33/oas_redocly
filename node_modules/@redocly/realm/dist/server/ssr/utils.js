import{pathToFileURL as m}from"url";import{withPathPrefix as d}from"@redocly/theme";import{slash as p,addTrailingSlash as u}from"../../shared/utils.js";function M(e){const t=e?.colorMode,{modes:o=["light","dark"],hide:c,ignoreDetection:s}=t||{},i=o&&`'${o[0]}'`,a=o?.[0],l=o?.some(n=>n===a)?`'${a}'`:void 0;return c||!i?"":`
    <script>
    if(window&&document.documentElement)
    {
      const e=window.localStorage.getItem("colorSchema");
      if(e) {
        const modeToSet = [${o.map(n=>`'${n}'`)}].some((mode) => mode === e) ? e : 'light';
        ${r("modeToSet")}
      } else {
        if (window.matchMedia) {
          ${f(s,l,i)}
        } else {
          ${r()}
        }
      }
    }
    </script>`}function f(e,t,o){return e?t?r(t):o?r(o):"return":h(t)}function r(e="'light'"){return`document.documentElement.className = ${e};`}function h(e="'light'"){return`if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      document.documentElement.className = 'dark';
    } else if(window.matchMedia('(prefers-color-scheme: light)').matches) {
      document.documentElement.className = 'light';
    } else {
      ${r(e)}
    }
    `}async function C(e){return process.env.REDOCLY_STATIC_BUNDLE?await import("@portal/server-props"):await import(m(`${p(e)}/server-props-entry.js`)+"?"+new Date)}function D(e){const t=u(e.split("/").map(encodeURIComponent).join("/"));return`<link rel="preload" as="fetch" crossorigin="anonymous" href="${d(`/page-data${t}data.json`)}" />`}export{M as detectColorSchemaScript,D as generatePreloadPageData,C as importServerProps};
