import { createRequire as topLevelCreateRequire } from 'module';
 const require = topLevelCreateRequire(import.meta.url);
import {
  c2 as c,
  nodes_exports
} from "./chunk-RAP5XDZA.js";
import "./chunk-P5LFNF57.js";
import {
  RedoclyOpenAPIDocs,
  i
} from "./chunk-W7SZW2JA.js";
import {
  PageNavigation
} from "./chunk-YLDZHCE2.js";
import "./chunk-LGQQW4UX.js";
import {
  components,
  custom_components_exports
} from "./chunk-TL5RDG3G.js";
import {
  F,
  j,
  n as n2,
  s,
  w2 as w
} from "./chunk-JJ5XY26P.js";
import {
  P3 as P,
  m,
  n,
  t
} from "./chunk-7WVTT2DN.js";
import {
  CatalogInfoBlock,
  ThreePanelLayout,
  ast_default,
  default_exports,
  init_CatalogInfoBlock,
  init_ThreePanelLayout,
  init_default,
  init_dist,
  tags
} from "./chunk-EAFIJ2VV.js";
import {
  Breadcrumbs,
  init_Breadcrumbs
} from "./chunk-AB7LF64Z.js";
import "./chunk-Q6LZZN6W.js";
import "./chunk-WLDWULA7.js";
import "./chunk-GHSOG4VG.js";
import "./chunk-D237NEF2.js";
import "./chunk-2J7OHCSZ.js";
import "./chunk-XQXU7C5Q.js";
import "./chunk-SX3NFZJN.js";
import {
  init_styled_components_esm,
  styled_components_esm_default
} from "./chunk-WNBJGIID.js";
import {
  LayoutVariant,
  init_lib_esm
} from "./chunk-R4PATEVC.js";
import "./chunk-35AYGKFE.js";

// node_modules/@redocly/realm/dist/server/plugins/openapi-docs/template/OpenAPIDocs.js
init_styled_components_esm();
import * as o from "react";
init_lib_esm();
init_ThreePanelLayout();
init_CatalogInfoBlock();

// node_modules/@redocly/realm/dist/server/plugins/openapi-docs/template/helpers.js
import { useMemo as p } from "react";
init_dist();
init_default();
init_Breadcrumbs();
function i2(o2) {
  return ({ operationHttpVerb: t2, operationPath: e, lang: r, action: n3, state: m2, serverUrl: s2 }) => s.send("openapi_docs", { event_type: o2, operationHttpVerb: t2, operationPath: e, lang: r, action: n3, state: m2, serverUrl: s2 });
}
function R(o2) {
  if (o2)
    return Object.entries(o2).reduce((t2, [e, r]) => (t2[e] = ast_default.fromJSON(JSON.stringify(r)), t2), {});
}
function F2(o2, { markdown: t2, baseSlug: e }) {
  return p(() => {
    const n3 = j();
    return o2.options.oAuth2RedirectURI = n3 ? `${window.location.origin}${P(t.REPLAY_OAUTH2_CALLBACK)}` : null, o2.options.routingBasePath = e, o2.options.mockServer = i(o2.options.mockServer, e), o2.options.scrollYOffset = n3 ? parseInt(m("--navbar-height"), 10) : 0, o2.options.markdocOptions = { tags: { ...c, ...tags }, nodes: { ...nodes_exports }, components: { ...custom_components_exports, ...default_exports, ...components, ...globalThis.__LOADER.markdocComponents }, ...t2, partials: R(t2?.partials) }, o2.options.unstable_hooks = { ...o2.options.unstable_hooks, MiddlePanelFooter: () => {
      const { templateId: m2 } = F() || {}, { nextPage: s2, prevPage: a } = w() || {};
      return m2 === n ? null : PageNavigation({ nextPage: s2, prevPage: a });
    }, MiddlePanelHeader: () => Breadcrumbs({}) }, o2.options.events = { codeSamplesLanguageSwitch: i2("samples_language_switch"), codeSamplesCopy: i2("code_samples_copy"), panelToggle: i2("panel_toggle"), targetServerSwitch: i2("target_server_switch") }, o2;
  }, [o2, t2, e]);
}

// node_modules/@redocly/realm/dist/server/plugins/openapi-docs/template/OpenAPIDocs.js
function f({
  pageProps: t2
}) {
  const a = n2("openAPIDocsStore"), n3 = o.useMemo(() => ({
    layout: t2.openapiOptions?.layout
  }), [t2.openapiOptions?.layout]), e = F2(a, t2);
  if (!a)
    return "Something went wrong";
  const i3 = t2.openapiOptions?.layout;
  return o.createElement(h, null, o.createElement(u, {
    layout: i3
  }, o.createElement(CatalogInfoBlock, {
    metadata: t2.metadata
  })), o.createElement(RedoclyOpenAPIDocs, {
    store: {
      options: e.options,
      definition: e.definition,
      withState: n3
    }
  }));
}
var u = styled_components_esm_default(ThreePanelLayout).withConfig({
  displayName: "OpenAPIDocs__u",
  componentId: "sc-ip0bor-0"
})(["&&{padding-right:", ";}"], ({
  layout: t2
}) => t2 === LayoutVariant.THREE_PANEL ? "calc(var(--panel-gap-horizontal) * 2)" : "var(--panel-gap-horizontal)");
var h = styled_components_esm_default.div.withConfig({
  displayName: "OpenAPIDocs__h",
  componentId: "sc-ip0bor-1"
})(["div[id]{scroll-margin-top:calc(var(--navbar-height) - var(--panel-gap-vertical));}a[id]{scroll-margin-top:calc(var(--navbar-height) + var(--panel-gap-vertical));}--sidebar-width:0px;"]);
export {
  f as default
};
