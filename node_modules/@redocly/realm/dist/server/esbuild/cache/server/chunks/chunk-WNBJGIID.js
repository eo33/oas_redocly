import { createRequire as topLevelCreateRequire } from 'module';
 const require = topLevelCreateRequire(import.meta.url);
import {
  init_lib_esm
} from "./chunk-R4PATEVC.js";
import {
  __commonJS,
  __esm,
  __export,
  __require,
  __toESM
} from "./chunk-35AYGKFE.js";

// node_modules/react-is/cjs/react-is.development.js
var require_react_is_development = __commonJS({
  "node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    (function() {
      function typeOf(object) {
        if ("object" === typeof object && null !== object) {
          var $$typeof = object.$$typeof;
          switch ($$typeof) {
            case REACT_ELEMENT_TYPE:
              switch (object = object.type, object) {
                case REACT_FRAGMENT_TYPE:
                case REACT_PROFILER_TYPE:
                case REACT_STRICT_MODE_TYPE:
                case REACT_SUSPENSE_TYPE:
                case REACT_SUSPENSE_LIST_TYPE:
                  return object;
                default:
                  switch (object = object && object.$$typeof, object) {
                    case REACT_CONTEXT_TYPE:
                    case REACT_FORWARD_REF_TYPE:
                    case REACT_LAZY_TYPE:
                    case REACT_MEMO_TYPE:
                      return object;
                    case REACT_CONSUMER_TYPE:
                      return object;
                    default:
                      return $$typeof;
                  }
              }
            case REACT_PORTAL_TYPE:
              return $$typeof;
          }
        }
      }
      var REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element"), REACT_PORTAL_TYPE = Symbol.for("react.portal"), REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"), REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"), REACT_PROFILER_TYPE = Symbol.for("react.profiler");
      Symbol.for("react.provider");
      var REACT_CONSUMER_TYPE = Symbol.for("react.consumer"), REACT_CONTEXT_TYPE = Symbol.for("react.context"), REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"), REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"), REACT_MEMO_TYPE = Symbol.for("react.memo"), REACT_LAZY_TYPE = Symbol.for("react.lazy"), REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen"), REACT_CLIENT_REFERENCE = Symbol.for("react.client.reference");
      exports.ContextConsumer = REACT_CONSUMER_TYPE;
      exports.ContextProvider = REACT_CONTEXT_TYPE;
      exports.Element = REACT_ELEMENT_TYPE;
      exports.ForwardRef = REACT_FORWARD_REF_TYPE;
      exports.Fragment = REACT_FRAGMENT_TYPE;
      exports.Lazy = REACT_LAZY_TYPE;
      exports.Memo = REACT_MEMO_TYPE;
      exports.Portal = REACT_PORTAL_TYPE;
      exports.Profiler = REACT_PROFILER_TYPE;
      exports.StrictMode = REACT_STRICT_MODE_TYPE;
      exports.Suspense = REACT_SUSPENSE_TYPE;
      exports.SuspenseList = REACT_SUSPENSE_LIST_TYPE;
      exports.isContextConsumer = function(object) {
        return typeOf(object) === REACT_CONSUMER_TYPE;
      };
      exports.isContextProvider = function(object) {
        return typeOf(object) === REACT_CONTEXT_TYPE;
      };
      exports.isElement = function(object) {
        return "object" === typeof object && null !== object && object.$$typeof === REACT_ELEMENT_TYPE;
      };
      exports.isForwardRef = function(object) {
        return typeOf(object) === REACT_FORWARD_REF_TYPE;
      };
      exports.isFragment = function(object) {
        return typeOf(object) === REACT_FRAGMENT_TYPE;
      };
      exports.isLazy = function(object) {
        return typeOf(object) === REACT_LAZY_TYPE;
      };
      exports.isMemo = function(object) {
        return typeOf(object) === REACT_MEMO_TYPE;
      };
      exports.isPortal = function(object) {
        return typeOf(object) === REACT_PORTAL_TYPE;
      };
      exports.isProfiler = function(object) {
        return typeOf(object) === REACT_PROFILER_TYPE;
      };
      exports.isStrictMode = function(object) {
        return typeOf(object) === REACT_STRICT_MODE_TYPE;
      };
      exports.isSuspense = function(object) {
        return typeOf(object) === REACT_SUSPENSE_TYPE;
      };
      exports.isSuspenseList = function(object) {
        return typeOf(object) === REACT_SUSPENSE_LIST_TYPE;
      };
      exports.isValidElementType = function(type) {
        return "string" === typeof type || "function" === typeof type || type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_OFFSCREEN_TYPE || "object" === typeof type && null !== type && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_CONSUMER_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_CLIENT_REFERENCE || void 0 !== type.getModuleId) ? true : false;
      };
      exports.typeOf = typeOf;
    })();
  }
});

// node_modules/react-is/index.js
var require_react_is = __commonJS({
  "node_modules/react-is/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development();
    }
  }
});

// node_modules/shallowequal/index.js
var require_shallowequal = __commonJS({
  "node_modules/shallowequal/index.js"(exports, module) {
    module.exports = function shallowEqual(objA, objB, compare, compareContext) {
      var ret = compare ? compare.call(compareContext, objA, objB) : void 0;
      if (ret !== void 0) {
        return !!ret;
      }
      if (objA === objB) {
        return true;
      }
      if (typeof objA !== "object" || !objA || typeof objB !== "object" || !objB) {
        return false;
      }
      var keysA = Object.keys(objA);
      var keysB = Object.keys(objB);
      if (keysA.length !== keysB.length) {
        return false;
      }
      var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);
      for (var idx = 0; idx < keysA.length; idx++) {
        var key = keysA[idx];
        if (!bHasOwnProperty(key)) {
          return false;
        }
        var valueA = objA[key];
        var valueB = objB[key];
        ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;
        if (ret === false || ret === void 0 && valueA !== valueB) {
          return false;
        }
      }
      return true;
    };
  }
});

// node_modules/@emotion/stylis/dist/stylis.esm.js
function stylis_min(W2) {
  function M2(d, c2, e2, h, a2) {
    for (var m2 = 0, b2 = 0, v2 = 0, n2 = 0, q2, g2, x2 = 0, K2 = 0, k2, u2 = k2 = q2 = 0, l2 = 0, r2 = 0, I2 = 0, t2 = 0, B3 = e2.length, J2 = B3 - 1, y2, f2 = "", p = "", F3 = "", G3 = "", C2; l2 < B3; ) {
      g2 = e2.charCodeAt(l2);
      l2 === J2 && 0 !== b2 + n2 + v2 + m2 && (0 !== b2 && (g2 = 47 === b2 ? 10 : 47), n2 = v2 = m2 = 0, B3++, J2++);
      if (0 === b2 + n2 + v2 + m2) {
        if (l2 === J2 && (0 < r2 && (f2 = f2.replace(N2, "")), 0 < f2.trim().length)) {
          switch (g2) {
            case 32:
            case 9:
            case 59:
            case 13:
            case 10:
              break;
            default:
              f2 += e2.charAt(l2);
          }
          g2 = 59;
        }
        switch (g2) {
          case 123:
            f2 = f2.trim();
            q2 = f2.charCodeAt(0);
            k2 = 1;
            for (t2 = ++l2; l2 < B3; ) {
              switch (g2 = e2.charCodeAt(l2)) {
                case 123:
                  k2++;
                  break;
                case 125:
                  k2--;
                  break;
                case 47:
                  switch (g2 = e2.charCodeAt(l2 + 1)) {
                    case 42:
                    case 47:
                      a: {
                        for (u2 = l2 + 1; u2 < J2; ++u2) {
                          switch (e2.charCodeAt(u2)) {
                            case 47:
                              if (42 === g2 && 42 === e2.charCodeAt(u2 - 1) && l2 + 2 !== u2) {
                                l2 = u2 + 1;
                                break a;
                              }
                              break;
                            case 10:
                              if (47 === g2) {
                                l2 = u2 + 1;
                                break a;
                              }
                          }
                        }
                        l2 = u2;
                      }
                  }
                  break;
                case 91:
                  g2++;
                case 40:
                  g2++;
                case 34:
                case 39:
                  for (; l2++ < J2 && e2.charCodeAt(l2) !== g2; ) {
                  }
              }
              if (0 === k2)
                break;
              l2++;
            }
            k2 = e2.substring(t2, l2);
            0 === q2 && (q2 = (f2 = f2.replace(ca, "").trim()).charCodeAt(0));
            switch (q2) {
              case 64:
                0 < r2 && (f2 = f2.replace(N2, ""));
                g2 = f2.charCodeAt(1);
                switch (g2) {
                  case 100:
                  case 109:
                  case 115:
                  case 45:
                    r2 = c2;
                    break;
                  default:
                    r2 = O2;
                }
                k2 = M2(c2, r2, k2, g2, a2 + 1);
                t2 = k2.length;
                0 < A2 && (r2 = X2(O2, f2, I2), C2 = H2(3, k2, r2, c2, D2, z2, t2, g2, a2, h), f2 = r2.join(""), void 0 !== C2 && 0 === (t2 = (k2 = C2.trim()).length) && (g2 = 0, k2 = ""));
                if (0 < t2)
                  switch (g2) {
                    case 115:
                      f2 = f2.replace(da, ea);
                    case 100:
                    case 109:
                    case 45:
                      k2 = f2 + "{" + k2 + "}";
                      break;
                    case 107:
                      f2 = f2.replace(fa, "$1 $2");
                      k2 = f2 + "{" + k2 + "}";
                      k2 = 1 === w2 || 2 === w2 && L2("@" + k2, 3) ? "@-webkit-" + k2 + "@" + k2 : "@" + k2;
                      break;
                    default:
                      k2 = f2 + k2, 112 === h && (k2 = (p += k2, ""));
                  }
                else
                  k2 = "";
                break;
              default:
                k2 = M2(c2, X2(c2, f2, I2), k2, h, a2 + 1);
            }
            F3 += k2;
            k2 = I2 = r2 = u2 = q2 = 0;
            f2 = "";
            g2 = e2.charCodeAt(++l2);
            break;
          case 125:
          case 59:
            f2 = (0 < r2 ? f2.replace(N2, "") : f2).trim();
            if (1 < (t2 = f2.length))
              switch (0 === u2 && (q2 = f2.charCodeAt(0), 45 === q2 || 96 < q2 && 123 > q2) && (t2 = (f2 = f2.replace(" ", ":")).length), 0 < A2 && void 0 !== (C2 = H2(1, f2, c2, d, D2, z2, p.length, h, a2, h)) && 0 === (t2 = (f2 = C2.trim()).length) && (f2 = "\0\0"), q2 = f2.charCodeAt(0), g2 = f2.charCodeAt(1), q2) {
                case 0:
                  break;
                case 64:
                  if (105 === g2 || 99 === g2) {
                    G3 += f2 + e2.charAt(l2);
                    break;
                  }
                default:
                  58 !== f2.charCodeAt(t2 - 1) && (p += P2(f2, q2, g2, f2.charCodeAt(2)));
              }
            I2 = r2 = u2 = q2 = 0;
            f2 = "";
            g2 = e2.charCodeAt(++l2);
        }
      }
      switch (g2) {
        case 13:
        case 10:
          47 === b2 ? b2 = 0 : 0 === 1 + q2 && 107 !== h && 0 < f2.length && (r2 = 1, f2 += "\0");
          0 < A2 * Y2 && H2(0, f2, c2, d, D2, z2, p.length, h, a2, h);
          z2 = 1;
          D2++;
          break;
        case 59:
        case 125:
          if (0 === b2 + n2 + v2 + m2) {
            z2++;
            break;
          }
        default:
          z2++;
          y2 = e2.charAt(l2);
          switch (g2) {
            case 9:
            case 32:
              if (0 === n2 + m2 + b2)
                switch (x2) {
                  case 44:
                  case 58:
                  case 9:
                  case 32:
                    y2 = "";
                    break;
                  default:
                    32 !== g2 && (y2 = " ");
                }
              break;
            case 0:
              y2 = "\\0";
              break;
            case 12:
              y2 = "\\f";
              break;
            case 11:
              y2 = "\\v";
              break;
            case 38:
              0 === n2 + b2 + m2 && (r2 = I2 = 1, y2 = "\f" + y2);
              break;
            case 108:
              if (0 === n2 + b2 + m2 + E2 && 0 < u2)
                switch (l2 - u2) {
                  case 2:
                    112 === x2 && 58 === e2.charCodeAt(l2 - 3) && (E2 = x2);
                  case 8:
                    111 === K2 && (E2 = K2);
                }
              break;
            case 58:
              0 === n2 + b2 + m2 && (u2 = l2);
              break;
            case 44:
              0 === b2 + v2 + n2 + m2 && (r2 = 1, y2 += "\r");
              break;
            case 34:
            case 39:
              0 === b2 && (n2 = n2 === g2 ? 0 : 0 === n2 ? g2 : n2);
              break;
            case 91:
              0 === n2 + b2 + v2 && m2++;
              break;
            case 93:
              0 === n2 + b2 + v2 && m2--;
              break;
            case 41:
              0 === n2 + b2 + m2 && v2--;
              break;
            case 40:
              if (0 === n2 + b2 + m2) {
                if (0 === q2)
                  switch (2 * x2 + 3 * K2) {
                    case 533:
                      break;
                    default:
                      q2 = 1;
                  }
                v2++;
              }
              break;
            case 64:
              0 === b2 + v2 + n2 + m2 + u2 + k2 && (k2 = 1);
              break;
            case 42:
            case 47:
              if (!(0 < n2 + m2 + v2))
                switch (b2) {
                  case 0:
                    switch (2 * g2 + 3 * e2.charCodeAt(l2 + 1)) {
                      case 235:
                        b2 = 47;
                        break;
                      case 220:
                        t2 = l2, b2 = 42;
                    }
                    break;
                  case 42:
                    47 === g2 && 42 === x2 && t2 + 2 !== l2 && (33 === e2.charCodeAt(t2 + 2) && (p += e2.substring(t2, l2 + 1)), y2 = "", b2 = 0);
                }
          }
          0 === b2 && (f2 += y2);
      }
      K2 = x2;
      x2 = g2;
      l2++;
    }
    t2 = p.length;
    if (0 < t2) {
      r2 = c2;
      if (0 < A2 && (C2 = H2(2, p, r2, d, D2, z2, t2, h, a2, h), void 0 !== C2 && 0 === (p = C2).length))
        return G3 + p + F3;
      p = r2.join(",") + "{" + p + "}";
      if (0 !== w2 * E2) {
        2 !== w2 || L2(p, 2) || (E2 = 0);
        switch (E2) {
          case 111:
            p = p.replace(ha, ":-moz-$1") + p;
            break;
          case 112:
            p = p.replace(Q2, "::-webkit-input-$1") + p.replace(Q2, "::-moz-$1") + p.replace(Q2, ":-ms-input-$1") + p;
        }
        E2 = 0;
      }
    }
    return G3 + p + F3;
  }
  function X2(d, c2, e2) {
    var h = c2.trim().split(ia);
    c2 = h;
    var a2 = h.length, m2 = d.length;
    switch (m2) {
      case 0:
      case 1:
        var b2 = 0;
        for (d = 0 === m2 ? "" : d[0] + " "; b2 < a2; ++b2) {
          c2[b2] = Z2(d, c2[b2], e2).trim();
        }
        break;
      default:
        var v2 = b2 = 0;
        for (c2 = []; b2 < a2; ++b2) {
          for (var n2 = 0; n2 < m2; ++n2) {
            c2[v2++] = Z2(d[n2] + " ", h[b2], e2).trim();
          }
        }
    }
    return c2;
  }
  function Z2(d, c2, e2) {
    var h = c2.charCodeAt(0);
    33 > h && (h = (c2 = c2.trim()).charCodeAt(0));
    switch (h) {
      case 38:
        return c2.replace(F2, "$1" + d.trim());
      case 58:
        return d.trim() + c2.replace(F2, "$1" + d.trim());
      default:
        if (0 < 1 * e2 && 0 < c2.indexOf("\f"))
          return c2.replace(F2, (58 === d.charCodeAt(0) ? "" : "$1") + d.trim());
    }
    return d + c2;
  }
  function P2(d, c2, e2, h) {
    var a2 = d + ";", m2 = 2 * c2 + 3 * e2 + 4 * h;
    if (944 === m2) {
      d = a2.indexOf(":", 9) + 1;
      var b2 = a2.substring(d, a2.length - 1).trim();
      b2 = a2.substring(0, d).trim() + b2 + ";";
      return 1 === w2 || 2 === w2 && L2(b2, 1) ? "-webkit-" + b2 + b2 : b2;
    }
    if (0 === w2 || 2 === w2 && !L2(a2, 1))
      return a2;
    switch (m2) {
      case 1015:
        return 97 === a2.charCodeAt(10) ? "-webkit-" + a2 + a2 : a2;
      case 951:
        return 116 === a2.charCodeAt(3) ? "-webkit-" + a2 + a2 : a2;
      case 963:
        return 110 === a2.charCodeAt(5) ? "-webkit-" + a2 + a2 : a2;
      case 1009:
        if (100 !== a2.charCodeAt(4))
          break;
      case 969:
      case 942:
        return "-webkit-" + a2 + a2;
      case 978:
        return "-webkit-" + a2 + "-moz-" + a2 + a2;
      case 1019:
      case 983:
        return "-webkit-" + a2 + "-moz-" + a2 + "-ms-" + a2 + a2;
      case 883:
        if (45 === a2.charCodeAt(8))
          return "-webkit-" + a2 + a2;
        if (0 < a2.indexOf("image-set(", 11))
          return a2.replace(ja, "$1-webkit-$2") + a2;
        break;
      case 932:
        if (45 === a2.charCodeAt(4))
          switch (a2.charCodeAt(5)) {
            case 103:
              return "-webkit-box-" + a2.replace("-grow", "") + "-webkit-" + a2 + "-ms-" + a2.replace("grow", "positive") + a2;
            case 115:
              return "-webkit-" + a2 + "-ms-" + a2.replace("shrink", "negative") + a2;
            case 98:
              return "-webkit-" + a2 + "-ms-" + a2.replace("basis", "preferred-size") + a2;
          }
        return "-webkit-" + a2 + "-ms-" + a2 + a2;
      case 964:
        return "-webkit-" + a2 + "-ms-flex-" + a2 + a2;
      case 1023:
        if (99 !== a2.charCodeAt(8))
          break;
        b2 = a2.substring(a2.indexOf(":", 15)).replace("flex-", "").replace("space-between", "justify");
        return "-webkit-box-pack" + b2 + "-webkit-" + a2 + "-ms-flex-pack" + b2 + a2;
      case 1005:
        return ka.test(a2) ? a2.replace(aa, ":-webkit-") + a2.replace(aa, ":-moz-") + a2 : a2;
      case 1e3:
        b2 = a2.substring(13).trim();
        c2 = b2.indexOf("-") + 1;
        switch (b2.charCodeAt(0) + b2.charCodeAt(c2)) {
          case 226:
            b2 = a2.replace(G2, "tb");
            break;
          case 232:
            b2 = a2.replace(G2, "tb-rl");
            break;
          case 220:
            b2 = a2.replace(G2, "lr");
            break;
          default:
            return a2;
        }
        return "-webkit-" + a2 + "-ms-" + b2 + a2;
      case 1017:
        if (-1 === a2.indexOf("sticky", 9))
          break;
      case 975:
        c2 = (a2 = d).length - 10;
        b2 = (33 === a2.charCodeAt(c2) ? a2.substring(0, c2) : a2).substring(d.indexOf(":", 7) + 1).trim();
        switch (m2 = b2.charCodeAt(0) + (b2.charCodeAt(7) | 0)) {
          case 203:
            if (111 > b2.charCodeAt(8))
              break;
          case 115:
            a2 = a2.replace(b2, "-webkit-" + b2) + ";" + a2;
            break;
          case 207:
          case 102:
            a2 = a2.replace(b2, "-webkit-" + (102 < m2 ? "inline-" : "") + "box") + ";" + a2.replace(b2, "-webkit-" + b2) + ";" + a2.replace(b2, "-ms-" + b2 + "box") + ";" + a2;
        }
        return a2 + ";";
      case 938:
        if (45 === a2.charCodeAt(5))
          switch (a2.charCodeAt(6)) {
            case 105:
              return b2 = a2.replace("-items", ""), "-webkit-" + a2 + "-webkit-box-" + b2 + "-ms-flex-" + b2 + a2;
            case 115:
              return "-webkit-" + a2 + "-ms-flex-item-" + a2.replace(ba, "") + a2;
            default:
              return "-webkit-" + a2 + "-ms-flex-line-pack" + a2.replace("align-content", "").replace(ba, "") + a2;
          }
        break;
      case 973:
      case 989:
        if (45 !== a2.charCodeAt(3) || 122 === a2.charCodeAt(4))
          break;
      case 931:
      case 953:
        if (true === la.test(d))
          return 115 === (b2 = d.substring(d.indexOf(":") + 1)).charCodeAt(0) ? P2(d.replace("stretch", "fill-available"), c2, e2, h).replace(":fill-available", ":stretch") : a2.replace(b2, "-webkit-" + b2) + a2.replace(b2, "-moz-" + b2.replace("fill-", "")) + a2;
        break;
      case 962:
        if (a2 = "-webkit-" + a2 + (102 === a2.charCodeAt(5) ? "-ms-" + a2 : "") + a2, 211 === e2 + h && 105 === a2.charCodeAt(13) && 0 < a2.indexOf("transform", 10))
          return a2.substring(0, a2.indexOf(";", 27) + 1).replace(ma, "$1-webkit-$2") + a2;
    }
    return a2;
  }
  function L2(d, c2) {
    var e2 = d.indexOf(1 === c2 ? ":" : "{"), h = d.substring(0, 3 !== c2 ? e2 : 10);
    e2 = d.substring(e2 + 1, d.length - 1);
    return R2(2 !== c2 ? h : h.replace(na, "$1"), e2, c2);
  }
  function ea(d, c2) {
    var e2 = P2(c2, c2.charCodeAt(0), c2.charCodeAt(1), c2.charCodeAt(2));
    return e2 !== c2 + ";" ? e2.replace(oa, " or ($1)").substring(4) : "(" + c2 + ")";
  }
  function H2(d, c2, e2, h, a2, m2, b2, v2, n2, q2) {
    for (var g2 = 0, x2 = c2, w3; g2 < A2; ++g2) {
      switch (w3 = S2[g2].call(B2, d, x2, e2, h, a2, m2, b2, v2, n2, q2)) {
        case void 0:
        case false:
        case true:
        case null:
          break;
        default:
          x2 = w3;
      }
    }
    if (x2 !== c2)
      return x2;
  }
  function T2(d) {
    switch (d) {
      case void 0:
      case null:
        A2 = S2.length = 0;
        break;
      default:
        if ("function" === typeof d)
          S2[A2++] = d;
        else if ("object" === typeof d)
          for (var c2 = 0, e2 = d.length; c2 < e2; ++c2) {
            T2(d[c2]);
          }
        else
          Y2 = !!d | 0;
    }
    return T2;
  }
  function U2(d) {
    d = d.prefix;
    void 0 !== d && (R2 = null, d ? "function" !== typeof d ? w2 = 1 : (w2 = 2, R2 = d) : w2 = 0);
    return U2;
  }
  function B2(d, c2) {
    var e2 = d;
    33 > e2.charCodeAt(0) && (e2 = e2.trim());
    V2 = e2;
    e2 = [V2];
    if (0 < A2) {
      var h = H2(-1, c2, e2, e2, D2, z2, 0, 0, 0, 0);
      void 0 !== h && "string" === typeof h && (c2 = h);
    }
    var a2 = M2(O2, e2, c2, 0, 0);
    0 < A2 && (h = H2(-2, a2, e2, e2, D2, z2, a2.length, 0, 0, 0), void 0 !== h && (a2 = h));
    V2 = "";
    E2 = 0;
    z2 = D2 = 1;
    return a2;
  }
  var ca = /^\0+/g, N2 = /[\0\r\f]/g, aa = /: */g, ka = /zoo|gra/, ma = /([,: ])(transform)/g, ia = /,\r+?/g, F2 = /([\t\r\n ])*\f?&/g, fa = /@(k\w+)\s*(\S*)\s*/, Q2 = /::(place)/g, ha = /:(read-only)/g, G2 = /[svh]\w+-[tblr]{2}/, da = /\(\s*(.*)\s*\)/g, oa = /([\s\S]*?);/g, ba = /-self|flex-/g, na = /[^]*?(:[rp][el]a[\w-]+)[^]*/, la = /stretch|:\s*\w+\-(?:conte|avail)/, ja = /([^-])(image-set\()/, z2 = 1, D2 = 1, E2 = 0, w2 = 1, O2 = [], S2 = [], A2 = 0, R2 = null, Y2 = 0, V2 = "";
  B2.use = T2;
  B2.set = U2;
  void 0 !== W2 && U2(W2);
  return B2;
}
var stylis_esm_default;
var init_stylis_esm = __esm({
  "node_modules/@emotion/stylis/dist/stylis.esm.js"() {
    stylis_esm_default = stylis_min;
  }
});

// node_modules/styled-components/node_modules/@emotion/unitless/dist/unitless.esm.js
var unitlessKeys, unitless_esm_default;
var init_unitless_esm = __esm({
  "node_modules/styled-components/node_modules/@emotion/unitless/dist/unitless.esm.js"() {
    unitlessKeys = {
      animationIterationCount: 1,
      borderImageOutset: 1,
      borderImageSlice: 1,
      borderImageWidth: 1,
      boxFlex: 1,
      boxFlexGroup: 1,
      boxOrdinalGroup: 1,
      columnCount: 1,
      columns: 1,
      flex: 1,
      flexGrow: 1,
      flexPositive: 1,
      flexShrink: 1,
      flexNegative: 1,
      flexOrder: 1,
      gridRow: 1,
      gridRowEnd: 1,
      gridRowSpan: 1,
      gridRowStart: 1,
      gridColumn: 1,
      gridColumnEnd: 1,
      gridColumnSpan: 1,
      gridColumnStart: 1,
      msGridRow: 1,
      msGridRowSpan: 1,
      msGridColumn: 1,
      msGridColumnSpan: 1,
      fontWeight: 1,
      lineHeight: 1,
      opacity: 1,
      order: 1,
      orphans: 1,
      tabSize: 1,
      widows: 1,
      zIndex: 1,
      zoom: 1,
      WebkitLineClamp: 1,
      // SVG-related properties
      fillOpacity: 1,
      floodOpacity: 1,
      stopOpacity: 1,
      strokeDasharray: 1,
      strokeDashoffset: 1,
      strokeMiterlimit: 1,
      strokeOpacity: 1,
      strokeWidth: 1
    };
    unitless_esm_default = unitlessKeys;
  }
});

// node_modules/@emotion/memoize/dist/emotion-memoize.esm.js
function memoize(fn) {
  var cache = /* @__PURE__ */ Object.create(null);
  return function(arg) {
    if (cache[arg] === void 0)
      cache[arg] = fn(arg);
    return cache[arg];
  };
}
var init_emotion_memoize_esm = __esm({
  "node_modules/@emotion/memoize/dist/emotion-memoize.esm.js"() {
  }
});

// node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.esm.js
var reactPropsRegex, isPropValid;
var init_emotion_is_prop_valid_esm = __esm({
  "node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.esm.js"() {
    init_emotion_memoize_esm();
    reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|disableRemotePlayback|download|draggable|encType|enterKeyHint|fetchpriority|fetchPriority|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;
    isPropValid = /* @__PURE__ */ memoize(
      function(prop) {
        return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111 && prop.charCodeAt(1) === 110 && prop.charCodeAt(2) < 91;
      }
      /* Z+1 */
    );
  }
});

// node_modules/hoist-non-react-statics/node_modules/react-is/cjs/react-is.development.js
var require_react_is_development2 = __commonJS({
  "node_modules/hoist-non-react-statics/node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var hasSymbol = typeof Symbol === "function" && Symbol.for;
        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 60103;
        var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 60106;
        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 60107;
        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 60108;
        var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 60114;
        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 60109;
        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 60110;
        var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 60111;
        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 60111;
        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 60112;
        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 60113;
        var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 60120;
        var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 60115;
        var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 60116;
        var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 60121;
        var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 60117;
        var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 60118;
        var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 60119;
        function isValidElementType(type) {
          return typeof type === "string" || typeof type === "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
          type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
        }
        function typeOf(object) {
          if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;
                switch (type) {
                  case REACT_ASYNC_MODE_TYPE:
                  case REACT_CONCURRENT_MODE_TYPE:
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var AsyncMode = REACT_ASYNC_MODE_TYPE;
        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
            }
          }
          return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
        }
        function isConcurrentMode(object) {
          return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
        }
        function isContextConsumer(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        exports.AsyncMode = AsyncMode;
        exports.ConcurrentMode = ConcurrentMode;
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element;
        exports.ForwardRef = ForwardRef;
        exports.Fragment = Fragment;
        exports.Lazy = Lazy;
        exports.Memo = Memo;
        exports.Portal = Portal;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement;
        exports.isForwardRef = isForwardRef;
        exports.isFragment = isFragment;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isValidElementType = isValidElementType;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// node_modules/hoist-non-react-statics/node_modules/react-is/index.js
var require_react_is2 = __commonJS({
  "node_modules/hoist-non-react-statics/node_modules/react-is/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development2();
    }
  }
});

// node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js
var require_hoist_non_react_statics_cjs = __commonJS({
  "node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js"(exports, module) {
    "use strict";
    var reactIs = require_react_is2();
    var REACT_STATICS = {
      childContextTypes: true,
      contextType: true,
      contextTypes: true,
      defaultProps: true,
      displayName: true,
      getDefaultProps: true,
      getDerivedStateFromError: true,
      getDerivedStateFromProps: true,
      mixins: true,
      propTypes: true,
      type: true
    };
    var KNOWN_STATICS = {
      name: true,
      length: true,
      prototype: true,
      caller: true,
      callee: true,
      arguments: true,
      arity: true
    };
    var FORWARD_REF_STATICS = {
      "$$typeof": true,
      render: true,
      defaultProps: true,
      displayName: true,
      propTypes: true
    };
    var MEMO_STATICS = {
      "$$typeof": true,
      compare: true,
      defaultProps: true,
      displayName: true,
      propTypes: true,
      type: true
    };
    var TYPE_STATICS = {};
    TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
    TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;
    function getStatics(component) {
      if (reactIs.isMemo(component)) {
        return MEMO_STATICS;
      }
      return TYPE_STATICS[component["$$typeof"]] || REACT_STATICS;
    }
    var defineProperty = Object.defineProperty;
    var getOwnPropertyNames = Object.getOwnPropertyNames;
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
    var getPrototypeOf = Object.getPrototypeOf;
    var objectPrototype = Object.prototype;
    function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
      if (typeof sourceComponent !== "string") {
        if (objectPrototype) {
          var inheritedComponent = getPrototypeOf(sourceComponent);
          if (inheritedComponent && inheritedComponent !== objectPrototype) {
            hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
          }
        }
        var keys = getOwnPropertyNames(sourceComponent);
        if (getOwnPropertySymbols) {
          keys = keys.concat(getOwnPropertySymbols(sourceComponent));
        }
        var targetStatics = getStatics(targetComponent);
        var sourceStatics = getStatics(sourceComponent);
        for (var i2 = 0; i2 < keys.length; ++i2) {
          var key = keys[i2];
          if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
            var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
            try {
              defineProperty(targetComponent, key, descriptor);
            } catch (e2) {
            }
          }
        }
      }
      return targetComponent;
    }
    module.exports = hoistNonReactStatics;
  }
});

// node_modules/styled-components/dist/styled-components.esm.js
var styled_components_esm_exports = {};
__export(styled_components_esm_exports, {
  ServerStyleSheet: () => Ue,
  StyleSheetConsumer: () => ce,
  StyleSheetContext: () => ae,
  StyleSheetManager: () => fe,
  ThemeConsumer: () => Me,
  ThemeContext: () => Be,
  ThemeProvider: () => Ge,
  __PRIVATE__: () => Ze,
  createGlobalStyle: () => He,
  css: () => Ne,
  default: () => styled_components_esm_default,
  isStyledComponent: () => b,
  keyframes: () => $e,
  useTheme: () => Xe,
  version: () => N,
  withTheme: () => Je
});
import r, { useState as o, useContext as s, useMemo as i, useEffect as a, useRef as c, createElement as u } from "react";
function m() {
  return (m = Object.assign || function(e2) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var n2 = arguments[t2];
      for (var r2 in n2)
        Object.prototype.hasOwnProperty.call(n2, r2) && (e2[r2] = n2[r2]);
    }
    return e2;
  }).apply(this, arguments);
}
function w(e2) {
  return "function" == typeof e2;
}
function E(e2) {
  return "string" == typeof e2 && e2 || e2.displayName || e2.name || "Component";
}
function b(e2) {
  return e2 && "string" == typeof e2.styledComponentId;
}
function O() {
  for (var e2 = arguments.length <= 0 ? void 0 : arguments[0], t2 = [], n2 = 1, r2 = arguments.length; n2 < r2; n2 += 1)
    t2.push(n2 < 0 || arguments.length <= n2 ? void 0 : arguments[n2]);
  return t2.forEach(function(t3) {
    e2 = e2.replace(/%[a-z]/, t3);
  }), e2;
}
function R(e2) {
  for (var t2 = arguments.length, n2 = new Array(t2 > 1 ? t2 - 1 : 0), r2 = 1; r2 < t2; r2++)
    n2[r2 - 1] = arguments[r2];
  throw false ? new Error("An error occurred. See https://git.io/JUIaE#" + e2 + " for more information." + (n2.length > 0 ? " Args: " + n2.join(", ") : "")) : new Error(O.apply(void 0, [P[e2]].concat(n2)).trim());
}
function K(e2) {
  var t2, n2 = "";
  for (t2 = Math.abs(e2); t2 > 52; t2 = t2 / 52 | 0)
    n2 = Z(t2 % 52) + n2;
  return (Z(t2 % 52) + n2).replace(X, "$1-$2");
}
function te(e2) {
  for (var t2 = 0; t2 < e2.length; t2 += 1) {
    var n2 = e2[t2];
    if (w(n2) && !b(n2))
      return false;
  }
  return true;
}
function ie(e2) {
  var t2, n2, r2, o2, s2 = void 0 === e2 ? S : e2, i2 = s2.options, a2 = void 0 === i2 ? S : i2, c2 = s2.plugins, u2 = void 0 === c2 ? g : c2, l2 = new stylis_esm_default(a2), h = [], p = function(e3) {
    function t3(t4) {
      if (t4)
        try {
          e3(t4 + "}");
        } catch (e4) {
        }
    }
    return function(n3, r3, o3, s3, i3, a3, c3, u3, l3, d) {
      switch (n3) {
        case 1:
          if (0 === l3 && 64 === r3.charCodeAt(0))
            return e3(r3 + ";"), "";
          break;
        case 2:
          if (0 === u3)
            return r3 + "/*|*/";
          break;
        case 3:
          switch (u3) {
            case 102:
            case 112:
              return e3(o3[0] + r3), "";
            default:
              return r3 + (0 === d ? "/*|*/" : "");
          }
        case -2:
          r3.split("/*|*/}").forEach(t3);
      }
    };
  }(function(e3) {
    h.push(e3);
  }), f2 = function(e3, r3, s3) {
    return 0 === r3 && -1 !== se.indexOf(s3[n2.length]) || s3.match(o2) ? e3 : "." + t2;
  };
  function m2(e3, s3, i3, a3) {
    void 0 === a3 && (a3 = "&");
    var c3 = e3.replace(oe, ""), u3 = s3 && i3 ? i3 + " " + s3 + " { " + c3 + " }" : c3;
    return t2 = a3, n2 = s3, r2 = new RegExp("\\" + n2 + "\\b", "g"), o2 = new RegExp("(\\" + n2 + "\\b){2,}"), l2(i3 || !s3 ? "" : s3, u3);
  }
  return l2.use([].concat(u2, [function(e3, t3, o3) {
    2 === e3 && o3.length && o3[0].lastIndexOf(n2) > 0 && (o3[0] = o3[0].replace(r2, f2));
  }, p, function(e3) {
    if (-2 === e3) {
      var t3 = h;
      return h = [], t3;
    }
  }])), m2.hash = u2.length ? u2.reduce(function(e3, t3) {
    return t3.name || R(15), Q(e3, t3.name);
  }, 5381).toString() : "", m2;
}
function he() {
  return s(ae) || le;
}
function pe() {
  return s(ue) || de;
}
function fe(e2) {
  var t2 = o(e2.stylisPlugins), n2 = t2[0], s2 = t2[1], c2 = he(), u2 = i(function() {
    var t3 = c2;
    return e2.sheet ? t3 = e2.sheet : e2.target && (t3 = t3.reconstructWithOptions({
      target: e2.target
    }, false)), e2.disableCSSOMInjection && (t3 = t3.reconstructWithOptions({
      useCSSOMInjection: false
    })), t3;
  }, [e2.disableCSSOMInjection, e2.sheet, e2.target]), d = i(function() {
    return ie({
      options: {
        prefix: !e2.disableVendorPrefixes
      },
      plugins: n2
    });
  }, [e2.disableVendorPrefixes, n2]);
  return a(function() {
    (0, import_shallowequal.default)(n2, e2.stylisPlugins) || s2(e2.stylisPlugins);
  }, [e2.stylisPlugins]), r.createElement(ae.Provider, {
    value: u2
  }, r.createElement(ue.Provider, {
    value: d
  }, true ? r.Children.only(e2.children) : e2.children));
}
function we(e2) {
  return ye.test(e2) ? e2.replace(ve, Se).replace(ge, "-ms-") : e2;
}
function be(e2, n2, r2, o2) {
  if (Array.isArray(e2)) {
    for (var s2, i2 = [], a2 = 0, c2 = e2.length; a2 < c2; a2 += 1)
      "" !== (s2 = be(e2[a2], n2, r2, o2)) && (Array.isArray(s2) ? i2.push.apply(i2, s2) : i2.push(s2));
    return i2;
  }
  if (Ee(e2))
    return "";
  if (b(e2))
    return "." + e2.styledComponentId;
  if (w(e2)) {
    if ("function" != typeof (l2 = e2) || l2.prototype && l2.prototype.isReactComponent || !n2)
      return e2;
    var u2 = e2(n2);
    return (0, import_react_is.isElement)(u2) && console.warn(E(e2) + " is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details."), be(u2, n2, r2, o2);
  }
  var l2;
  return e2 instanceof me ? r2 ? (e2.inject(r2, o2), e2.getName(o2)) : e2 : v(e2) ? function e3(t2, n3) {
    var r3, o3, s3 = [];
    for (var i3 in t2)
      t2.hasOwnProperty(i3) && !Ee(t2[i3]) && (Array.isArray(t2[i3]) && t2[i3].isCss || w(t2[i3]) ? s3.push(we(i3) + ":", t2[i3], ";") : v(t2[i3]) ? s3.push.apply(s3, e3(t2[i3], i3)) : s3.push(we(i3) + ": " + (r3 = i3, null == (o3 = t2[i3]) || "boolean" == typeof o3 || "" === o3 ? "" : "number" != typeof o3 || 0 === o3 || r3 in unitless_esm_default || r3.startsWith("--") ? String(o3).trim() : o3 + "px") + ";"));
    return n3 ? [n3 + " {"].concat(s3, ["}"]) : s3;
  }(e2) : e2.toString();
}
function Ne(e2) {
  for (var t2 = arguments.length, n2 = new Array(t2 > 1 ? t2 - 1 : 0), r2 = 1; r2 < t2; r2++)
    n2[r2 - 1] = arguments[r2];
  return w(e2) || v(e2) ? _e(be(y(g, [e2].concat(n2)))) : 0 === n2.length && 1 === e2.length && "string" == typeof e2[0] ? e2 : _e(be(y(e2, n2)));
}
function De(e2) {
  return e2.replace(Oe, "-").replace(Re, "");
}
function Te(e2) {
  return "string" == typeof e2 && e2.charAt(0) === e2.charAt(0).toLowerCase();
}
function Ve(e2, t2, n2) {
  var r2 = e2[n2];
  xe(t2) && xe(r2) ? ze(r2, t2) : e2[n2] = t2;
}
function ze(e2) {
  for (var t2 = arguments.length, n2 = new Array(t2 > 1 ? t2 - 1 : 0), r2 = 1; r2 < t2; r2++)
    n2[r2 - 1] = arguments[r2];
  for (var o2 = 0, s2 = n2; o2 < s2.length; o2++) {
    var i2 = s2[o2];
    if (xe(i2))
      for (var a2 in i2)
        ke(a2) && Ve(e2, i2[a2], a2);
  }
  return e2;
}
function Ge(e2) {
  var t2 = s(Be), n2 = i(function() {
    return function(e3, t3) {
      if (!e3)
        return R(14);
      if (w(e3)) {
        var n3 = e3(t3);
        return null !== n3 && !Array.isArray(n3) && "object" == typeof n3 ? n3 : R(7);
      }
      return Array.isArray(e3) || "object" != typeof e3 ? R(8) : t3 ? m({}, t3, {}, e3) : e3;
    }(e2.theme, t2);
  }, [e2.theme, t2]);
  return e2.children ? r.createElement(Be.Provider, {
    value: n2
  }, e2.children) : null;
}
function Fe(e2, t2, n2) {
  var o2 = b(e2), i2 = !Te(e2), a2 = t2.attrs, c2 = void 0 === a2 ? g : a2, l2 = t2.componentId, d = void 0 === l2 ? function(e3, t3) {
    var n3 = "string" != typeof e3 ? "sc" : De(e3);
    Le[n3] = (Le[n3] || 0) + 1;
    var r2 = n3 + "-" + je("5.3.11" + n3 + Le[n3]);
    return t3 ? t3 + "-" + r2 : r2;
  }(t2.displayName, t2.parentComponentId) : l2, h = t2.displayName, y2 = void 0 === h ? function(e3) {
    return Te(e3) ? "styled." + e3 : "Styled(" + E(e3) + ")";
  }(e2) : h, v2 = t2.displayName && t2.componentId ? De(t2.displayName) + "-" + t2.componentId : t2.componentId || d, _2 = o2 && e2.attrs ? Array.prototype.concat(e2.attrs, c2).filter(Boolean) : c2, N2 = t2.shouldForwardProp;
  o2 && e2.shouldForwardProp && (N2 = t2.shouldForwardProp ? function(n3, r2, o3) {
    return e2.shouldForwardProp(n3, r2, o3) && t2.shouldForwardProp(n3, r2, o3);
  } : e2.shouldForwardProp);
  var A2, C2 = new re(n2, v2, o2 ? e2.componentStyle : void 0), I2 = C2.isStatic && 0 === c2.length, P2 = function(e3, t3) {
    return function(e4, t4, n3, r2) {
      var o3 = e4.attrs, i3 = e4.componentStyle, a3 = e4.defaultProps, c3 = e4.foldedComponentIds, l3 = e4.shouldForwardProp, d2 = e4.styledComponentId, h2 = e4.target, f2 = function(e5, t5, n4) {
        void 0 === e5 && (e5 = S);
        var r3 = m({}, t5, {
          theme: e5
        }), o4 = {};
        return n4.forEach(function(e6) {
          var t6, n5, s2, i4 = e6;
          for (t6 in w(i4) && (i4 = i4(r3)), i4)
            r3[t6] = o4[t6] = "className" === t6 ? (n5 = o4[t6], s2 = i4[t6], n5 && s2 ? n5 + " " + s2 : n5 || s2) : i4[t6];
        }), [r3, o4];
      }(Pe(t4, s(Be), a3) || S, t4, o3), y3 = f2[0], v3 = f2[1], g2 = function(e5, t5, n4, r3) {
        var o4 = he(), s2 = pe(), i4 = t5 ? e5.generateAndInjectStyles(S, o4, s2) : e5.generateAndInjectStyles(n4, o4, s2);
        return !t5 && r3 && r3(i4), i4;
      }(i3, r2, y3, true ? e4.warnTooManyClasses : void 0), E2 = n3, b2 = v3.$as || t4.$as || v3.as || t4.as || h2, _3 = Te(b2), N3 = v3 !== t4 ? m({}, t4, {}, v3) : t4, A3 = {};
      for (var C3 in N3)
        "$" !== C3[0] && "as" !== C3 && ("forwardedAs" === C3 ? A3.as = N3[C3] : (l3 ? l3(C3, isPropValid, b2) : !_3 || isPropValid(C3)) && (A3[C3] = N3[C3]));
      return t4.style && v3.style !== t4.style && (A3.style = m({}, t4.style, {}, v3.style)), A3.className = Array.prototype.concat(c3, d2, g2 !== d2 ? g2 : null, t4.className, v3.className).filter(Boolean).join(" "), A3.ref = E2, u(b2, A3);
    }(A2, e3, t3, I2);
  };
  return P2.displayName = y2, (A2 = r.forwardRef(P2)).attrs = _2, A2.componentStyle = C2, A2.displayName = y2, A2.shouldForwardProp = N2, A2.foldedComponentIds = o2 ? Array.prototype.concat(e2.foldedComponentIds, e2.styledComponentId) : g, A2.styledComponentId = v2, A2.target = o2 ? e2.target : e2, A2.withComponent = function(e3) {
    var r2 = t2.componentId, o3 = function(e4, t3) {
      if (null == e4)
        return {};
      var n3, r3, o4 = {}, s3 = Object.keys(e4);
      for (r3 = 0; r3 < s3.length; r3++)
        n3 = s3[r3], t3.indexOf(n3) >= 0 || (o4[n3] = e4[n3]);
      return o4;
    }(t2, ["componentId"]), s2 = r2 && r2 + "-" + (Te(e3) ? e3 : De(E(e3)));
    return Fe(e3, m({}, o3, {
      attrs: _2,
      componentId: s2
    }), n2);
  }, Object.defineProperty(A2, "defaultProps", {
    get: function() {
      return this._foldedDefaultProps;
    },
    set: function(t3) {
      this._foldedDefaultProps = o2 ? ze({}, e2.defaultProps, t3) : t3;
    }
  }), Ie(y2, v2), A2.warnTooManyClasses = function(e3, t3) {
    var n3 = {}, r2 = false;
    return function(o3) {
      if (!r2 && (n3[o3] = true, Object.keys(n3).length >= 200)) {
        var s2 = t3 ? ' with the id of "' + t3 + '"' : "";
        console.warn("Over 200 classes were generated for component " + e3 + s2 + ".\nConsider using the attrs method, together with a style object for frequently changed styles.\nExample:\n  const Component = styled.div.attrs(props => ({\n    style: {\n      background: props.background,\n    },\n  }))`width: 100%;`\n\n  <Component />"), r2 = true, n3 = {};
      }
    };
  }(y2, v2), Object.defineProperty(A2, "toString", {
    value: function() {
      return "." + A2.styledComponentId;
    }
  }), i2 && (0, import_hoist_non_react_statics.default)(A2, e2, {
    attrs: true,
    componentStyle: true,
    displayName: true,
    foldedComponentIds: true,
    shouldForwardProp: true,
    styledComponentId: true,
    target: true,
    withComponent: true
  }), A2;
}
function He(e2) {
  for (var t2 = arguments.length, n2 = new Array(t2 > 1 ? t2 - 1 : 0), o2 = 1; o2 < t2; o2++)
    n2[o2 - 1] = arguments[o2];
  var i2 = Ne.apply(void 0, [e2].concat(n2)), a2 = "sc-global-" + je(JSON.stringify(i2)), u2 = new qe(i2, a2);
  function l2(e3) {
    var t3 = he(), n3 = pe(), o3 = s(Be), u3 = c(t3.allocateGSInstance(a2)).current;
    return r.Children.count(e3.children) && console.warn("The global style component " + a2 + " was given child JSX. createGlobalStyle does not render children."), i2.some(function(e4) {
      return "string" == typeof e4 && -1 !== e4.indexOf("@import");
    }) && console.warn("Please do not use @import CSS syntax in createGlobalStyle at this time, as the CSSOM APIs we use in production do not handle it well. Instead, we recommend using a library such as react-helmet to inject a typical <link> meta tag to the stylesheet, or simply embedding it manually in your index.html <head> section for a simpler app."), t3.server && d(u3, e3, t3, o3, n3), null;
  }
  function d(e3, t3, n3, r2, o3) {
    if (u2.isStatic)
      u2.renderStyles(e3, I, n3, o3);
    else {
      var s2 = m({}, t3, {
        theme: Pe(t3, r2, l2.defaultProps)
      });
      u2.renderStyles(e3, s2, n3, o3);
    }
  }
  return Ie(a2), r.memo(l2);
}
function $e(e2) {
  "undefined" != typeof navigator && "ReactNative" === navigator.product && console.warn("`keyframes` cannot be used on ReactNative, only on the web. To do animation in ReactNative please use Animated.");
  for (var t2 = arguments.length, n2 = new Array(t2 > 1 ? t2 - 1 : 0), r2 = 1; r2 < t2; r2++)
    n2[r2 - 1] = arguments[r2];
  var o2 = Ne.apply(void 0, [e2].concat(n2)).join(""), s2 = je(o2);
  return new me(s2, o2);
}
var import_react_is, import_shallowequal, import_hoist_non_react_statics, y, v, g, S, _, N, A, C, I, P, D, j, T, x, k, V, z, B, M, G, L, F, Y, q, H, $, W, U, J, X, Z, Q, ee, ne, re, oe, se, ae, ce, ue, le, de, me, ye, ve, ge, Se, Ee, _e, Ae, Ce, Ie, Pe, Oe, Re, je, xe, ke, Be, Me, Le, Ye, qe, We, Ue, Je, Xe, Ze, styled_components_esm_default;
var init_styled_components_esm = __esm({
  "node_modules/styled-components/dist/styled-components.esm.js"() {
    import_react_is = __toESM(require_react_is());
    import_shallowequal = __toESM(require_shallowequal());
    init_stylis_esm();
    init_unitless_esm();
    init_emotion_is_prop_valid_esm();
    import_hoist_non_react_statics = __toESM(require_hoist_non_react_statics_cjs());
    y = function(e2, t2) {
      for (var n2 = [e2[0]], r2 = 0, o2 = t2.length; r2 < o2; r2 += 1)
        n2.push(t2[r2], e2[r2 + 1]);
      return n2;
    };
    v = function(t2) {
      return null !== t2 && "object" == typeof t2 && "[object Object]" === (t2.toString ? t2.toString() : Object.prototype.toString.call(t2)) && !(0, import_react_is.typeOf)(t2);
    };
    g = Object.freeze([]);
    S = Object.freeze({});
    _ = "undefined" != typeof process && void 0 !== process.env && (process.env.REACT_APP_SC_ATTR || process.env.SC_ATTR) || "data-styled";
    N = "5.3.11";
    A = "undefined" != typeof window && "HTMLElement" in window;
    C = Boolean("boolean" == typeof SC_DISABLE_SPEEDY ? SC_DISABLE_SPEEDY : "undefined" != typeof process && void 0 !== process.env && (void 0 !== process.env.REACT_APP_SC_DISABLE_SPEEDY && "" !== process.env.REACT_APP_SC_DISABLE_SPEEDY ? "false" !== process.env.REACT_APP_SC_DISABLE_SPEEDY && process.env.REACT_APP_SC_DISABLE_SPEEDY : void 0 !== process.env.SC_DISABLE_SPEEDY && "" !== process.env.SC_DISABLE_SPEEDY ? "false" !== process.env.SC_DISABLE_SPEEDY && process.env.SC_DISABLE_SPEEDY : true));
    I = {};
    P = true ? {
      1: "Cannot create styled-component for component: %s.\n\n",
      2: "Can't collect styles once you've consumed a `ServerStyleSheet`'s styles! `ServerStyleSheet` is a one off instance for each server-side render cycle.\n\n- Are you trying to reuse it across renders?\n- Are you accidentally calling collectStyles twice?\n\n",
      3: "Streaming SSR is only supported in a Node.js environment; Please do not try to call this method in the browser.\n\n",
      4: "The `StyleSheetManager` expects a valid target or sheet prop!\n\n- Does this error occur on the client and is your target falsy?\n- Does this error occur on the server and is the sheet falsy?\n\n",
      5: "The clone method cannot be used on the client!\n\n- Are you running in a client-like environment on the server?\n- Are you trying to run SSR on the client?\n\n",
      6: "Trying to insert a new style tag, but the given Node is unmounted!\n\n- Are you using a custom target that isn't mounted?\n- Does your document not have a valid head element?\n- Have you accidentally removed a style tag manually?\n\n",
      7: 'ThemeProvider: Please return an object from your "theme" prop function, e.g.\n\n```js\ntheme={() => ({})}\n```\n\n',
      8: 'ThemeProvider: Please make your "theme" prop an object.\n\n',
      9: "Missing document `<head>`\n\n",
      10: "Cannot find a StyleSheet instance. Usually this happens if there are multiple copies of styled-components loaded at once. Check out this issue for how to troubleshoot and fix the common cases where this situation can happen: https://github.com/styled-components/styled-components/issues/1941#issuecomment-417862021\n\n",
      11: "_This error was replaced with a dev-time warning, it will be deleted for v4 final._ [createGlobalStyle] received children which will not be rendered. Please use the component without passing children elements.\n\n",
      12: "It seems you are interpolating a keyframe declaration (%s) into an untagged string. This was supported in styled-components v3, but is not longer supported in v4 as keyframes are now injected on-demand. Please wrap your string in the css\\`\\` helper which ensures the styles are injected correctly. See https://www.styled-components.com/docs/api#css\n\n",
      13: "%s is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details.\n\n",
      14: 'ThemeProvider: "theme" prop is required.\n\n',
      15: "A stylis plugin has been supplied that is not named. We need a name for each plugin to be able to prevent styling collisions between different stylis configurations within the same app. Before you pass your plugin to `<StyleSheetManager stylisPlugins={[]}>`, please make sure each plugin is uniquely-named, e.g.\n\n```js\nObject.defineProperty(importedPlugin, 'name', { value: 'some-unique-name' });\n```\n\n",
      16: "Reached the limit of how many styled components may be created at group %s.\nYou may only create up to 1,073,741,824 components. If you're creating components dynamically,\nas for instance in your render method then you may be running into this limitation.\n\n",
      17: "CSSStyleSheet could not be found on HTMLStyleElement.\nHas styled-components' style tag been unmounted or altered by another script?\n"
    } : {};
    D = function() {
      function e2(e3) {
        this.groupSizes = new Uint32Array(512), this.length = 512, this.tag = e3;
      }
      var t2 = e2.prototype;
      return t2.indexOfGroup = function(e3) {
        for (var t3 = 0, n2 = 0; n2 < e3; n2++)
          t3 += this.groupSizes[n2];
        return t3;
      }, t2.insertRules = function(e3, t3) {
        if (e3 >= this.groupSizes.length) {
          for (var n2 = this.groupSizes, r2 = n2.length, o2 = r2; e3 >= o2; )
            (o2 <<= 1) < 0 && R(16, "" + e3);
          this.groupSizes = new Uint32Array(o2), this.groupSizes.set(n2), this.length = o2;
          for (var s2 = r2; s2 < o2; s2++)
            this.groupSizes[s2] = 0;
        }
        for (var i2 = this.indexOfGroup(e3 + 1), a2 = 0, c2 = t3.length; a2 < c2; a2++)
          this.tag.insertRule(i2, t3[a2]) && (this.groupSizes[e3]++, i2++);
      }, t2.clearGroup = function(e3) {
        if (e3 < this.length) {
          var t3 = this.groupSizes[e3], n2 = this.indexOfGroup(e3), r2 = n2 + t3;
          this.groupSizes[e3] = 0;
          for (var o2 = n2; o2 < r2; o2++)
            this.tag.deleteRule(n2);
        }
      }, t2.getGroup = function(e3) {
        var t3 = "";
        if (e3 >= this.length || 0 === this.groupSizes[e3])
          return t3;
        for (var n2 = this.groupSizes[e3], r2 = this.indexOfGroup(e3), o2 = r2 + n2, s2 = r2; s2 < o2; s2++)
          t3 += this.tag.getRule(s2) + "/*!sc*/\n";
        return t3;
      }, e2;
    }();
    j = /* @__PURE__ */ new Map();
    T = /* @__PURE__ */ new Map();
    x = 1;
    k = function(e2) {
      if (j.has(e2))
        return j.get(e2);
      for (; T.has(x); )
        x++;
      var t2 = x++;
      return ((0 | t2) < 0 || t2 > 1 << 30) && R(16, "" + t2), j.set(e2, t2), T.set(t2, e2), t2;
    };
    V = function(e2) {
      return T.get(e2);
    };
    z = function(e2, t2) {
      t2 >= x && (x = t2 + 1), j.set(e2, t2), T.set(t2, e2);
    };
    B = "style[" + _ + '][data-styled-version="5.3.11"]';
    M = new RegExp("^" + _ + '\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)');
    G = function(e2, t2, n2) {
      for (var r2, o2 = n2.split(","), s2 = 0, i2 = o2.length; s2 < i2; s2++)
        (r2 = o2[s2]) && e2.registerName(t2, r2);
    };
    L = function(e2, t2) {
      for (var n2 = (t2.textContent || "").split("/*!sc*/\n"), r2 = [], o2 = 0, s2 = n2.length; o2 < s2; o2++) {
        var i2 = n2[o2].trim();
        if (i2) {
          var a2 = i2.match(M);
          if (a2) {
            var c2 = 0 | parseInt(a2[1], 10), u2 = a2[2];
            0 !== c2 && (z(u2, c2), G(e2, u2, a2[3]), e2.getTag().insertRules(c2, r2)), r2.length = 0;
          } else
            r2.push(i2);
        }
      }
    };
    F = function() {
      return "undefined" != typeof __webpack_nonce__ ? __webpack_nonce__ : null;
    };
    Y = function(e2) {
      var t2 = document.head, n2 = e2 || t2, r2 = document.createElement("style"), o2 = function(e3) {
        for (var t3 = e3.childNodes, n3 = t3.length; n3 >= 0; n3--) {
          var r3 = t3[n3];
          if (r3 && 1 === r3.nodeType && r3.hasAttribute(_))
            return r3;
        }
      }(n2), s2 = void 0 !== o2 ? o2.nextSibling : null;
      r2.setAttribute(_, "active"), r2.setAttribute("data-styled-version", "5.3.11");
      var i2 = F();
      return i2 && r2.setAttribute("nonce", i2), n2.insertBefore(r2, s2), r2;
    };
    q = function() {
      function e2(e3) {
        var t3 = this.element = Y(e3);
        t3.appendChild(document.createTextNode("")), this.sheet = function(e4) {
          if (e4.sheet)
            return e4.sheet;
          for (var t4 = document.styleSheets, n2 = 0, r2 = t4.length; n2 < r2; n2++) {
            var o2 = t4[n2];
            if (o2.ownerNode === e4)
              return o2;
          }
          R(17);
        }(t3), this.length = 0;
      }
      var t2 = e2.prototype;
      return t2.insertRule = function(e3, t3) {
        try {
          return this.sheet.insertRule(t3, e3), this.length++, true;
        } catch (e4) {
          return false;
        }
      }, t2.deleteRule = function(e3) {
        this.sheet.deleteRule(e3), this.length--;
      }, t2.getRule = function(e3) {
        var t3 = this.sheet.cssRules[e3];
        return void 0 !== t3 && "string" == typeof t3.cssText ? t3.cssText : "";
      }, e2;
    }();
    H = function() {
      function e2(e3) {
        var t3 = this.element = Y(e3);
        this.nodes = t3.childNodes, this.length = 0;
      }
      var t2 = e2.prototype;
      return t2.insertRule = function(e3, t3) {
        if (e3 <= this.length && e3 >= 0) {
          var n2 = document.createTextNode(t3), r2 = this.nodes[e3];
          return this.element.insertBefore(n2, r2 || null), this.length++, true;
        }
        return false;
      }, t2.deleteRule = function(e3) {
        this.element.removeChild(this.nodes[e3]), this.length--;
      }, t2.getRule = function(e3) {
        return e3 < this.length ? this.nodes[e3].textContent : "";
      }, e2;
    }();
    $ = function() {
      function e2(e3) {
        this.rules = [], this.length = 0;
      }
      var t2 = e2.prototype;
      return t2.insertRule = function(e3, t3) {
        return e3 <= this.length && (this.rules.splice(e3, 0, t3), this.length++, true);
      }, t2.deleteRule = function(e3) {
        this.rules.splice(e3, 1), this.length--;
      }, t2.getRule = function(e3) {
        return e3 < this.length ? this.rules[e3] : "";
      }, e2;
    }();
    W = A;
    U = {
      isServer: !A,
      useCSSOMInjection: !C
    };
    J = function() {
      function e2(e3, t3, n2) {
        void 0 === e3 && (e3 = S), void 0 === t3 && (t3 = {}), this.options = m({}, U, {}, e3), this.gs = t3, this.names = new Map(n2), this.server = !!e3.isServer, !this.server && A && W && (W = false, function(e4) {
          for (var t4 = document.querySelectorAll(B), n3 = 0, r2 = t4.length; n3 < r2; n3++) {
            var o2 = t4[n3];
            o2 && "active" !== o2.getAttribute(_) && (L(e4, o2), o2.parentNode && o2.parentNode.removeChild(o2));
          }
        }(this));
      }
      e2.registerId = function(e3) {
        return k(e3);
      };
      var t2 = e2.prototype;
      return t2.reconstructWithOptions = function(t3, n2) {
        return void 0 === n2 && (n2 = true), new e2(m({}, this.options, {}, t3), this.gs, n2 && this.names || void 0);
      }, t2.allocateGSInstance = function(e3) {
        return this.gs[e3] = (this.gs[e3] || 0) + 1;
      }, t2.getTag = function() {
        return this.tag || (this.tag = (n2 = (t3 = this.options).isServer, r2 = t3.useCSSOMInjection, o2 = t3.target, e3 = n2 ? new $(o2) : r2 ? new q(o2) : new H(o2), new D(e3)));
        var e3, t3, n2, r2, o2;
      }, t2.hasNameForId = function(e3, t3) {
        return this.names.has(e3) && this.names.get(e3).has(t3);
      }, t2.registerName = function(e3, t3) {
        if (k(e3), this.names.has(e3))
          this.names.get(e3).add(t3);
        else {
          var n2 = /* @__PURE__ */ new Set();
          n2.add(t3), this.names.set(e3, n2);
        }
      }, t2.insertRules = function(e3, t3, n2) {
        this.registerName(e3, t3), this.getTag().insertRules(k(e3), n2);
      }, t2.clearNames = function(e3) {
        this.names.has(e3) && this.names.get(e3).clear();
      }, t2.clearRules = function(e3) {
        this.getTag().clearGroup(k(e3)), this.clearNames(e3);
      }, t2.clearTag = function() {
        this.tag = void 0;
      }, t2.toString = function() {
        return function(e3) {
          for (var t3 = e3.getTag(), n2 = t3.length, r2 = "", o2 = 0; o2 < n2; o2++) {
            var s2 = V(o2);
            if (void 0 !== s2) {
              var i2 = e3.names.get(s2), a2 = t3.getGroup(o2);
              if (i2 && a2 && i2.size) {
                var c2 = _ + ".g" + o2 + '[id="' + s2 + '"]', u2 = "";
                void 0 !== i2 && i2.forEach(function(e4) {
                  e4.length > 0 && (u2 += e4 + ",");
                }), r2 += "" + a2 + c2 + '{content:"' + u2 + '"}/*!sc*/\n';
              }
            }
          }
          return r2;
        }(this);
      }, e2;
    }();
    X = /(a)(d)/gi;
    Z = function(e2) {
      return String.fromCharCode(e2 + (e2 > 25 ? 39 : 97));
    };
    Q = function(e2, t2) {
      for (var n2 = t2.length; n2; )
        e2 = 33 * e2 ^ t2.charCodeAt(--n2);
      return e2;
    };
    ee = function(e2) {
      return Q(5381, e2);
    };
    ne = ee("5.3.11");
    re = function() {
      function e2(e3, t2, n2) {
        this.rules = e3, this.staticRulesId = "", this.isStatic = false, this.componentId = t2, this.baseHash = Q(ne, t2), this.baseStyle = n2, J.registerId(t2);
      }
      return e2.prototype.generateAndInjectStyles = function(e3, t2, n2) {
        var r2 = this.componentId, o2 = [];
        if (this.baseStyle && o2.push(this.baseStyle.generateAndInjectStyles(e3, t2, n2)), this.isStatic && !n2.hash) {
          if (this.staticRulesId && t2.hasNameForId(r2, this.staticRulesId))
            o2.push(this.staticRulesId);
          else {
            var s2 = be(this.rules, e3, t2, n2).join(""), i2 = K(Q(this.baseHash, s2) >>> 0);
            if (!t2.hasNameForId(r2, i2)) {
              var a2 = n2(s2, "." + i2, void 0, r2);
              t2.insertRules(r2, i2, a2);
            }
            o2.push(i2), this.staticRulesId = i2;
          }
        } else {
          for (var c2 = this.rules.length, u2 = Q(this.baseHash, n2.hash), l2 = "", d = 0; d < c2; d++) {
            var h = this.rules[d];
            if ("string" == typeof h)
              l2 += h, u2 = Q(u2, h + d);
            else if (h) {
              var p = be(h, e3, t2, n2), f2 = Array.isArray(p) ? p.join("") : p;
              u2 = Q(u2, f2 + d), l2 += f2;
            }
          }
          if (l2) {
            var m2 = K(u2 >>> 0);
            if (!t2.hasNameForId(r2, m2)) {
              var y2 = n2(l2, "." + m2, void 0, r2);
              t2.insertRules(r2, m2, y2);
            }
            o2.push(m2);
          }
        }
        return o2.join(" ");
      }, e2;
    }();
    oe = /^\s*\/\/.*$/gm;
    se = [":", "[", ".", "#"];
    ae = r.createContext();
    ce = ae.Consumer;
    ue = r.createContext();
    le = (ue.Consumer, new J());
    de = ie();
    me = function() {
      function e2(e3, t2) {
        var n2 = this;
        this.inject = function(e4, t3) {
          void 0 === t3 && (t3 = de);
          var r2 = n2.name + t3.hash;
          e4.hasNameForId(n2.id, r2) || e4.insertRules(n2.id, r2, t3(n2.rules, r2, "@keyframes"));
        }, this.toString = function() {
          return R(12, String(n2.name));
        }, this.name = e3, this.id = "sc-keyframes-" + e3, this.rules = t2;
      }
      return e2.prototype.getName = function(e3) {
        return void 0 === e3 && (e3 = de), this.name + e3.hash;
      }, e2;
    }();
    ye = /([A-Z])/;
    ve = /([A-Z])/g;
    ge = /^ms-/;
    Se = function(e2) {
      return "-" + e2.toLowerCase();
    };
    Ee = function(e2) {
      return null == e2 || false === e2 || "" === e2;
    };
    _e = function(e2) {
      return Array.isArray(e2) && (e2.isCss = true), e2;
    };
    Ae = /invalid hook call/i;
    Ce = /* @__PURE__ */ new Set();
    Ie = function(e2, t2) {
      if (true) {
        var n2 = "The component " + e2 + (t2 ? ' with the id of "' + t2 + '"' : "") + " has been created dynamically.\nYou may see this warning because you've called styled inside another component.\nTo resolve this only create new StyledComponents outside of any render method and function component.", r2 = console.error;
        try {
          var o2 = true;
          console.error = function(e3) {
            if (Ae.test(e3))
              o2 = false, Ce.delete(n2);
            else {
              for (var t3 = arguments.length, s2 = new Array(t3 > 1 ? t3 - 1 : 0), i2 = 1; i2 < t3; i2++)
                s2[i2 - 1] = arguments[i2];
              r2.apply(void 0, [e3].concat(s2));
            }
          }, c(), o2 && !Ce.has(n2) && (console.warn(n2), Ce.add(n2));
        } catch (e3) {
          Ae.test(e3.message) && Ce.delete(n2);
        } finally {
          console.error = r2;
        }
      }
    };
    Pe = function(e2, t2, n2) {
      return void 0 === n2 && (n2 = S), e2.theme !== n2.theme && e2.theme || t2 || n2.theme;
    };
    Oe = /[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g;
    Re = /(^-|-$)/g;
    je = function(e2) {
      return K(ee(e2) >>> 0);
    };
    xe = function(e2) {
      return "function" == typeof e2 || "object" == typeof e2 && null !== e2 && !Array.isArray(e2);
    };
    ke = function(e2) {
      return "__proto__" !== e2 && "constructor" !== e2 && "prototype" !== e2;
    };
    Be = r.createContext();
    Me = Be.Consumer;
    Le = {};
    Ye = function(e2) {
      return function e3(t2, r2, o2) {
        if (void 0 === o2 && (o2 = S), !(0, import_react_is.isValidElementType)(r2))
          return R(1, String(r2));
        var s2 = function() {
          return t2(r2, o2, Ne.apply(void 0, arguments));
        };
        return s2.withConfig = function(n2) {
          return e3(t2, r2, m({}, o2, {}, n2));
        }, s2.attrs = function(n2) {
          return e3(t2, r2, m({}, o2, {
            attrs: Array.prototype.concat(o2.attrs, n2).filter(Boolean)
          }));
        }, s2;
      }(Fe, e2);
    };
    ["a", "abbr", "address", "area", "article", "aside", "audio", "b", "base", "bdi", "bdo", "big", "blockquote", "body", "br", "button", "canvas", "caption", "cite", "code", "col", "colgroup", "data", "datalist", "dd", "del", "details", "dfn", "dialog", "div", "dl", "dt", "em", "embed", "fieldset", "figcaption", "figure", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "iframe", "img", "input", "ins", "kbd", "keygen", "label", "legend", "li", "link", "main", "map", "mark", "marquee", "menu", "menuitem", "meta", "meter", "nav", "noscript", "object", "ol", "optgroup", "option", "output", "p", "param", "picture", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "script", "section", "select", "small", "source", "span", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "textarea", "tfoot", "th", "thead", "time", "title", "tr", "track", "u", "ul", "var", "video", "wbr", "circle", "clipPath", "defs", "ellipse", "foreignObject", "g", "image", "line", "linearGradient", "marker", "mask", "path", "pattern", "polygon", "polyline", "radialGradient", "rect", "stop", "svg", "text", "textPath", "tspan"].forEach(function(e2) {
      Ye[e2] = Ye(e2);
    });
    qe = function() {
      function e2(e3, t3) {
        this.rules = e3, this.componentId = t3, this.isStatic = te(e3), J.registerId(this.componentId + 1);
      }
      var t2 = e2.prototype;
      return t2.createStyles = function(e3, t3, n2, r2) {
        var o2 = r2(be(this.rules, t3, n2, r2).join(""), ""), s2 = this.componentId + e3;
        n2.insertRules(s2, s2, o2);
      }, t2.removeStyles = function(e3, t3) {
        t3.clearRules(this.componentId + e3);
      }, t2.renderStyles = function(e3, t3, n2, r2) {
        e3 > 2 && J.registerId(this.componentId + e3), this.removeStyles(e3, n2), this.createStyles(e3, t3, n2, r2);
      }, e2;
    }();
    We = /^\s*<\/[a-z]/i;
    Ue = function() {
      function e2() {
        var e3 = this;
        this._emitSheetCSS = function() {
          var t3 = e3.instance.toString();
          if (!t3)
            return "";
          var n2 = F();
          return "<style " + [n2 && 'nonce="' + n2 + '"', _ + '="true"', 'data-styled-version="5.3.11"'].filter(Boolean).join(" ") + ">" + t3 + "</style>";
        }, this.getStyleTags = function() {
          return e3.sealed ? R(2) : e3._emitSheetCSS();
        }, this.getStyleElement = function() {
          var t3;
          if (e3.sealed)
            return R(2);
          var n2 = ((t3 = {})[_] = "", t3["data-styled-version"] = "5.3.11", t3.dangerouslySetInnerHTML = {
            __html: e3.instance.toString()
          }, t3), o2 = F();
          return o2 && (n2.nonce = o2), [r.createElement("style", m({}, n2, {
            key: "sc-0-0"
          }))];
        }, this.seal = function() {
          e3.sealed = true;
        }, this.instance = new J({
          isServer: true
        }), this.sealed = false;
      }
      var t2 = e2.prototype;
      return t2.collectStyles = function(e3) {
        return this.sealed ? R(2) : r.createElement(fe, {
          sheet: this.instance
        }, e3);
      }, t2.interleaveWithNodeStream = function(e3) {
        if (A)
          return R(3);
        if (this.sealed)
          return R(2);
        this.seal();
        var t3 = __require("stream"), n2 = (t3.Readable, t3.Transform), r2 = e3, o2 = this.instance, s2 = this._emitSheetCSS, i2 = new n2({
          transform: function(e4, t4, n3) {
            var r3 = e4.toString(), i3 = s2();
            if (o2.clearTag(), We.test(r3)) {
              var a2 = r3.indexOf(">") + 1, c2 = r3.slice(0, a2), u2 = r3.slice(a2);
              this.push(c2 + i3 + u2);
            } else
              this.push(i3 + r3);
            n3();
          }
        });
        return r2.on("error", function(e4) {
          i2.emit("error", e4);
        }), r2.pipe(i2);
      }, e2;
    }();
    Je = function(e2) {
      var t2 = r.forwardRef(function(t3, n2) {
        var o2 = s(Be), i2 = e2.defaultProps, a2 = Pe(t3, o2, i2);
        return void 0 === a2 && console.warn('[withTheme] You are not using a ThemeProvider nor passing a theme prop or a theme in defaultProps in component class "' + E(e2) + '"'), r.createElement(e2, m({}, t3, {
          theme: a2,
          ref: n2
        }));
      });
      return (0, import_hoist_non_react_statics.default)(t2, e2), t2.displayName = "WithTheme(" + E(e2) + ")", t2;
    };
    Xe = function() {
      return s(Be);
    };
    Ze = {
      StyleSheet: J,
      masterSheet: le
    };
    "undefined" != typeof navigator && "ReactNative" === navigator.product && console.warn("It looks like you've imported 'styled-components' on React Native.\nPerhaps you're looking to import 'styled-components/native'?\nRead more about this at https://www.styled-components.com/docs/basics#react-native"), "undefined" != typeof window && (window["__styled-components-init__"] = window["__styled-components-init__"] || 0, 1 === window["__styled-components-init__"] && console.warn("It looks like there are several instances of 'styled-components' initialized in this application. This may cause dynamic styles to not render properly, errors during the rehydration process, a missing theme prop, and makes your application bigger without good reason.\n\nSee https://s-c.sh/2BAXzed for more info."), window["__styled-components-init__"] += 1);
    styled_components_esm_default = Ye;
  }
});

// node_modules/@redocly/theme/src/core/utils/media-css.ts
var breakpoints;
var init_media_css = __esm({
  "node_modules/@redocly/theme/src/core/utils/media-css.ts"() {
    breakpoints = {
      small: "672px",
      medium: "960px",
      large: "1280px",
      max: "1504px"
    };
  }
});

// node_modules/@redocly/theme/src/core/utils/dom.ts
function onDocumentReady(fn) {
  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", fn);
  } else {
    fn();
  }
}
var IS_BROWSER;
var init_dom = __esm({
  "node_modules/@redocly/theme/src/core/utils/dom.ts"() {
    IS_BROWSER = typeof window !== "undefined" && "HTMLElement" in window;
  }
});

// node_modules/@redocly/theme/src/core/utils/type-guards.ts
function isUndefined(value) {
  return value === void 0;
}
function isNull(value) {
  return value === null;
}
function isString(value) {
  return typeof value === "string";
}
function isNotNull(value) {
  return !isNull(value);
}
var isObject, isNavLinkItem, isFromToSelectedOptions;
var init_type_guards = __esm({
  "node_modules/@redocly/theme/src/core/utils/type-guards.ts"() {
    isObject = (item) => {
      return isNotNull(item) && typeof item === "object";
    };
    isNavLinkItem = (item) => {
      return item.link !== void 0;
    };
    isFromToSelectedOptions = (options) => {
      return isObject(options) && "from" in options && "to" in options;
    };
  }
});

// node_modules/@redocly/theme/src/core/utils/get-scorecard-color-variable.ts
var getScorecardColorVariable;
var init_get_scorecard_color_variable = __esm({
  "node_modules/@redocly/theme/src/core/utils/get-scorecard-color-variable.ts"() {
    getScorecardColorVariable = (levelIndex, scorecardLevelsLength) => {
      let colorLevels = scorecardLevelsLength;
      if (colorLevels > 5) {
        colorLevels = 5;
      }
      if (colorLevels < 2) {
        colorLevels = 2;
      }
      return `--scorecard-level-color-${colorLevels}-${levelIndex + 1 > colorLevels ? colorLevels : levelIndex + 1}`;
    };
  }
});

// node_modules/@redocly/theme/src/core/utils/details.ts
function extendDetailsBehaviour() {
  enhanceDetails();
  openDetailsFromHash();
  window.addEventListener("hashchange", openDetailsFromHash);
}
function openDetailsAndScroll(detailsElement) {
  detailsElement.setAttribute("open", "");
  setTimeout(() => {
    detailsElement.scrollIntoView({
      block: "center",
      behavior: "smooth"
    });
  }, 0);
}
function enhanceDetails() {
  const existingIds = [];
  Array.from(document.getElementsByTagName("details")).forEach((detailsElement, index) => {
    if (detailsElement.id) {
      return;
    }
    const generatedId = detailsElement.querySelector("summary")?.textContent?.replace(/\s+/g, "-").toLowerCase() || `details-${index}`;
    detailsElement.id = existingIds.includes(generatedId) ? `${generatedId}-${index}` : generatedId;
    existingIds.push(detailsElement.id);
  });
}
function openDetailsFromHash() {
  const hash = window.location.hash;
  if (!hash)
    return;
  const detailsElement = document.getElementById(hash.substring(1));
  if (detailsElement?.tagName === "DETAILS") {
    openDetailsAndScroll(detailsElement);
  }
}
var init_details = __esm({
  "node_modules/@redocly/theme/src/core/utils/details.ts"() {
  }
});

// node_modules/toggle-selection/index.js
var require_toggle_selection = __commonJS({
  "node_modules/toggle-selection/index.js"(exports, module) {
    module.exports = function() {
      var selection = document.getSelection();
      if (!selection.rangeCount) {
        return function() {
        };
      }
      var active = document.activeElement;
      var ranges = [];
      for (var i2 = 0; i2 < selection.rangeCount; i2++) {
        ranges.push(selection.getRangeAt(i2));
      }
      switch (active.tagName.toUpperCase()) {
        case "INPUT":
        case "TEXTAREA":
          active.blur();
          break;
        default:
          active = null;
          break;
      }
      selection.removeAllRanges();
      return function() {
        selection.type === "Caret" && selection.removeAllRanges();
        if (!selection.rangeCount) {
          ranges.forEach(function(range) {
            selection.addRange(range);
          });
        }
        active && active.focus();
      };
    };
  }
});

// node_modules/copy-to-clipboard/index.js
var require_copy_to_clipboard = __commonJS({
  "node_modules/copy-to-clipboard/index.js"(exports, module) {
    "use strict";
    var deselectCurrent = require_toggle_selection();
    var clipboardToIE11Formatting = {
      "text/plain": "Text",
      "text/html": "Url",
      "default": "Text"
    };
    var defaultMessage = "Copy to clipboard: #{key}, Enter";
    function format(message) {
      var copyKey = (/mac os x/i.test(navigator.userAgent) ? "\u2318" : "Ctrl") + "+C";
      return message.replace(/#{\s*key\s*}/g, copyKey);
    }
    function copy2(text, options) {
      var debug, message, reselectPrevious, range, selection, mark, success = false;
      if (!options) {
        options = {};
      }
      debug = options.debug || false;
      try {
        reselectPrevious = deselectCurrent();
        range = document.createRange();
        selection = document.getSelection();
        mark = document.createElement("span");
        mark.textContent = text;
        mark.ariaHidden = "true";
        mark.style.all = "unset";
        mark.style.position = "fixed";
        mark.style.top = 0;
        mark.style.clip = "rect(0, 0, 0, 0)";
        mark.style.whiteSpace = "pre";
        mark.style.webkitUserSelect = "text";
        mark.style.MozUserSelect = "text";
        mark.style.msUserSelect = "text";
        mark.style.userSelect = "text";
        mark.addEventListener("copy", function(e2) {
          e2.stopPropagation();
          if (options.format) {
            e2.preventDefault();
            if (typeof e2.clipboardData === "undefined") {
              debug && console.warn("unable to use e.clipboardData");
              debug && console.warn("trying IE specific stuff");
              window.clipboardData.clearData();
              var format2 = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting["default"];
              window.clipboardData.setData(format2, text);
            } else {
              e2.clipboardData.clearData();
              e2.clipboardData.setData(options.format, text);
            }
          }
          if (options.onCopy) {
            e2.preventDefault();
            options.onCopy(e2.clipboardData);
          }
        });
        document.body.appendChild(mark);
        range.selectNodeContents(mark);
        selection.addRange(range);
        var successful = document.execCommand("copy");
        if (!successful) {
          throw new Error("copy command was unsuccessful");
        }
        success = true;
      } catch (err) {
        debug && console.error("unable to copy using execCommand: ", err);
        debug && console.warn("trying IE specific stuff");
        try {
          window.clipboardData.setData(options.format || "text", text);
          options.onCopy && options.onCopy(window.clipboardData);
          success = true;
        } catch (err2) {
          debug && console.error("unable to copy using clipboardData: ", err2);
          debug && console.error("falling back to prompt");
          message = format("message" in options ? options.message : defaultMessage);
          window.prompt(message, text);
        }
      } finally {
        if (selection) {
          if (typeof selection.removeRange == "function") {
            selection.removeRange(range);
          } else {
            selection.removeAllRanges();
          }
        }
        if (mark) {
          document.body.removeChild(mark);
        }
        reselectPrevious();
      }
      return success;
    }
    module.exports = copy2;
  }
});

// node_modules/@redocly/theme/src/core/utils/clipboard-service.ts
var import_copy_to_clipboard, ClipboardService;
var init_clipboard_service = __esm({
  "node_modules/@redocly/theme/src/core/utils/clipboard-service.ts"() {
    import_copy_to_clipboard = __toESM(require_copy_to_clipboard());
    ClipboardService = class {
      static copyCustom(text) {
        return (0, import_copy_to_clipboard.default)(text);
      }
      static selectElement(element) {
        if (!element) {
          return;
        }
        let range;
        let selection;
        if (document.body.createTextRange) {
          range = document.body.createTextRange();
          range.moveToElementText(element);
          range.select();
        } else if (document.createRange && window.getSelection) {
          selection = window.getSelection();
          range = document.createRange();
          range.selectNodeContents(element);
          selection?.removeAllRanges();
          selection?.addRange(range);
        }
      }
    };
  }
});

// node_modules/@redocly/theme/src/core/utils/css-variables.ts
var getCssColorVariable;
var init_css_variables = __esm({
  "node_modules/@redocly/theme/src/core/utils/css-variables.ts"() {
    getCssColorVariable = (color, defaultValue = "currentColor") => color?.startsWith("--") ? `var(${color})` : color || defaultValue;
  }
});

// node_modules/@redocly/theme/src/core/utils/add-line-numbers.ts
function addLineNumbers(highlightedCode, start = 1) {
  const codeLines = highlightedCode.split(NEW_LINE_EXP);
  return codeLines.map((line, i2) => {
    return `<span class='line' data-line-number='${start + i2}'>${line}</span>`;
  }).join("\n");
}
var NEW_LINE_EXP;
var init_add_line_numbers = __esm({
  "node_modules/@redocly/theme/src/core/utils/add-line-numbers.ts"() {
    NEW_LINE_EXP = /\n(?!$)/g;
  }
});

// node_modules/@redocly/theme/src/core/utils/theme-helpers.ts
function getTypographyCssRulesByComponentName(componentName, fallbackName) {
  const result = {};
  for (const [styledPropertyName, cssPropertyName] of typographyProperties) {
    const cssVariable = `--${componentName}-${cssPropertyName}`;
    const fallbackVariable = fallbackName ? `,var(--${fallbackName}-${cssPropertyName})` : "";
    result[styledPropertyName] = `var(${cssVariable}${fallbackVariable})`;
  }
  return result;
}
function typography(componentName, fallbackName) {
  return Ne(["", ""], getTypographyCssRulesByComponentName(componentName, fallbackName));
}
function generateCodeBlockTokens() {
  let res = "";
  for (const token of Object.values(Token)) {
    const cssTokenColorVariableName = `--code-block-tokens-${token}-color`;
    res += `.token.${token} { color: var(${cssTokenColorVariableName})}; }
`;
  }
  return Ne(["pre&{color:var(--code-block-tokens-default-color);}", ""], res);
}
var Token, typographyProperties;
var init_theme_helpers = __esm({
  "node_modules/@redocly/theme/src/core/utils/theme-helpers.ts"() {
    init_styled_components_esm();
    Token = /* @__PURE__ */ ((Token2) => {
      Token2["Comment"] = "comment";
      Token2["Prolog"] = "prolog";
      Token2["Doctype"] = "doctype";
      Token2["Cdata"] = "cdata";
      Token2["Punctuation"] = "punctuation";
      Token2["Property"] = "property";
      Token2["Tag"] = "tag";
      Token2["Number"] = "number";
      Token2["Constant"] = "constant";
      Token2["Symbol"] = "symbol";
      Token2["Boolean"] = "boolean";
      Token2["Selector"] = "selector";
      Token2["String"] = "string";
      Token2["Char"] = "char";
      Token2["Builtin"] = "builtin";
      Token2["Inserted"] = "inserted";
      Token2["Operator"] = "operator";
      Token2["Entity"] = "entity";
      Token2["Url"] = "url";
      Token2["Variable"] = "variable";
      Token2["Atrule"] = "atrule";
      Token2["AttrValue"] = "attr-value";
      Token2["AttrName"] = "attr-name";
      Token2["Keyword"] = "keyword";
      Token2["Regex"] = "regex";
      Token2["Important"] = "important";
      Token2["Bold"] = "bold";
      Token2["Italic"] = "italic";
      Token2["Deleted"] = "deleted";
      Token2["ClassName"] = "class-name";
      Token2["Function"] = "function";
      return Token2;
    })(Token || {});
    typographyProperties = Object.entries({
      fontSize: "font-size",
      fontWeight: "font-weight",
      fontFamily: "font-family",
      lineHeight: "line-height",
      color: "text-color",
      textTransform: "text-transform"
    });
  }
});

// node_modules/@redocly/theme/src/core/utils/class-names.ts
function concatClassNames(...args) {
  return args.map((className) => className ? className.trim() : className).filter(Boolean).join(SPACE_DELIMITER);
}
var SPACE_DELIMITER;
var init_class_names = __esm({
  "node_modules/@redocly/theme/src/core/utils/class-names.ts"() {
    SPACE_DELIMITER = " ";
  }
});

// node_modules/@redocly/theme/src/core/utils/args-typecheck.ts
function isEmptyArray(items) {
  return Array.isArray(items) && !items?.length;
}
function isPrimitive(arg) {
  return ["string", "boolean", "number", "undefined"].includes(typeof arg);
}
var init_args_typecheck = __esm({
  "node_modules/@redocly/theme/src/core/utils/args-typecheck.ts"() {
  }
});

// node_modules/@redocly/theme/src/core/utils/color.ts
function stringToHslColor(value) {
  const s2 = 30;
  const l2 = 80;
  let hash = 0;
  for (let i2 = 0; i2 < value.length; i2++) {
    hash = value.charCodeAt(i2) + ((hash << 5) - hash);
  }
  const h = hash % 360;
  return `hsl(${h}, ${s2}%, ${l2}%)`;
}
var init_color = __esm({
  "node_modules/@redocly/theme/src/core/utils/color.ts"() {
  }
});

// node_modules/@redocly/theme/src/core/constants/common.ts
var DEFAULT_LOCALE_PLACEHOLDER, FEEDBACK_TYPES, DEFAULT_FEEDBACK_TYPE, MenuItemType, MobileMenuType;
var init_common = __esm({
  "node_modules/@redocly/theme/src/core/constants/common.ts"() {
    init_lib_esm();
    DEFAULT_LOCALE_PLACEHOLDER = "default_locale";
    FEEDBACK_TYPES = /* @__PURE__ */ ((FEEDBACK_TYPES2) => {
      FEEDBACK_TYPES2["RATING"] = "rating";
      FEEDBACK_TYPES2["SENTIMENT"] = "sentiment";
      FEEDBACK_TYPES2["COMMENT"] = "comment";
      FEEDBACK_TYPES2["MOOD"] = "mood";
      FEEDBACK_TYPES2["PROBLEM"] = "problem";
      FEEDBACK_TYPES2["SCALE"] = "scale";
      return FEEDBACK_TYPES2;
    })(FEEDBACK_TYPES || {});
    DEFAULT_FEEDBACK_TYPE = "sentiment" /* SENTIMENT */;
    MenuItemType = /* @__PURE__ */ ((MenuItemType2) => {
      MenuItemType2["Separator"] = "separator";
      MenuItemType2["DrillDown"] = "drilldown";
      MenuItemType2["Group"] = "group";
      MenuItemType2["Operation"] = "operation";
      MenuItemType2["Default"] = "default";
      return MenuItemType2;
    })(MenuItemType || {});
    MobileMenuType = /* @__PURE__ */ ((MobileMenuType2) => {
      MobileMenuType2["MAIN_MENU"] = "MAIN_MENU";
      MobileMenuType2["PRODUCT"] = "PRODUCT";
      MobileMenuType2["PAGE"] = "PAGE";
      return MobileMenuType2;
    })(MobileMenuType || {});
  }
});

// node_modules/@redocly/theme/src/core/constants/environments.ts
var SecurityVariablesEnvSuffix;
var init_environments = __esm({
  "node_modules/@redocly/theme/src/core/constants/environments.ts"() {
    SecurityVariablesEnvSuffix = /* @__PURE__ */ ((SecurityVariablesEnvSuffix2) => {
      SecurityVariablesEnvSuffix2["Username"] = "_username";
      SecurityVariablesEnvSuffix2["Password"] = "_password";
      SecurityVariablesEnvSuffix2["JWTToken"] = "_token";
      SecurityVariablesEnvSuffix2["APIKey"] = "";
      SecurityVariablesEnvSuffix2["Token"] = "_token";
      SecurityVariablesEnvSuffix2["ClientId"] = "_client_id";
      SecurityVariablesEnvSuffix2["ClientSecret"] = "_client_secret";
      SecurityVariablesEnvSuffix2["ClientAssertion"] = "_client_assertion";
      return SecurityVariablesEnvSuffix2;
    })(SecurityVariablesEnvSuffix || {});
  }
});

// node_modules/@redocly/theme/src/core/constants/index.ts
var init_constants = __esm({
  "node_modules/@redocly/theme/src/core/constants/index.ts"() {
    init_common();
    init_environments();
  }
});

// node_modules/@redocly/theme/src/core/utils/urls.ts
function combineUrls(baseURL, ...relativeURLs) {
  let res = baseURL;
  for (let relativeURL of relativeURLs) {
    res = relativeURL ? res.replace(/[\/\\]+$/, "") + "/" + relativeURL.replace(/^[\/\\]+/, "") : res;
  }
  return res;
}
function withPathPrefix(url) {
  return combineUrls(getPathPrefix(), url);
}
function withoutPathPrefix(pathname) {
  const pathPrefix = getPathPrefix();
  return pathPrefix && pathname.startsWith(pathPrefix) ? pathname.slice(pathPrefix.length) : pathname;
}
function withoutHash(url) {
  if (url == null)
    return void 0;
  return url.split("#")[0];
}
function getPathPrefix() {
  if (process.env.REDOCLY_PREFIX_PATHS) {
    return normalizePathPrefix(process.env.REDOCLY_PREFIX_PATHS);
  }
  return "";
}
function normalizePathPrefix(prefix) {
  const withoutTrailing = removeTrailingSlash(prefix);
  return addLeadingSlash(withoutTrailing === "." ? "" : withoutTrailing);
}
function addLeadingSlash(url) {
  return url.startsWith("/") ? url : `/${url}`;
}
function removeTrailingSlash(url) {
  return url.endsWith("/") ? url.substring(0, url.length - 1) : url;
}
function removeLeadingSlash(url) {
  return url.startsWith("/") ? url.substring(1) : url;
}
function isPathInFolder(child, parent) {
  parent = removeTrailingSlash(removeLeadingSlash(slash(parent)));
  child = removeTrailingSlash(removeLeadingSlash(slash(child)));
  return child === parent || child.startsWith(parent + "/");
}
function slash(path) {
  const isExtendedLengthPath = /^\\\\\?\\/.test(path);
  if (isExtendedLengthPath) {
    return path;
  }
  return path.replace(/\\/g, `/`);
}
function addTrailingSlash(url) {
  return url.endsWith("/") ? url : `${url}/`;
}
function getPathnameForLocale(originalPathname, defaultLocale, newLocale, allLocales) {
  const pathnameWithoutPrefix = withoutPathPrefix(originalPathname);
  const currentLocale = getLocaleFromPathname(originalPathname, defaultLocale, allLocales);
  if (currentLocale === newLocale) {
    return pathnameWithoutPrefix;
  }
  const pathnameWithoutLocale = currentLocale === defaultLocale ? pathnameWithoutPrefix : pathnameWithoutPrefix.slice(currentLocale.length + 1);
  const newLocalePrefix = newLocale === defaultLocale ? "" : "/" + newLocale;
  return `${newLocalePrefix.toLowerCase()}${pathnameWithoutLocale}`;
}
function getLocaleFromPathname(pathname, defaultLocale = DEFAULT_LOCALE_PLACEHOLDER, allLocales = []) {
  const maybeLocale = withoutPathPrefix(pathname)?.split("/")[1];
  const locale = allLocales.find((locale2) => locale2.code.toLowerCase() === maybeLocale);
  return locale?.code || defaultLocale;
}
var init_urls = __esm({
  "node_modules/@redocly/theme/src/core/utils/urls.ts"() {
    init_constants();
  }
});

// node_modules/@redocly/theme/src/core/utils/js-utils.ts
function findDeepFirst(list, cb) {
  for (const item of list) {
    if (cb(item) === true) {
      return item;
    }
    if (item.items) {
      const nestedRes = findDeepFirst(item.items, cb);
      if (nestedRes !== void 0)
        return nestedRes;
    }
  }
}
function toStringIfDefined(value) {
  return value == void 0 ? void 0 : String(value);
}
function isBrowser() {
  return typeof window !== "undefined" && "HTMLElement" in window;
}
var init_js_utils = __esm({
  "node_modules/@redocly/theme/src/core/utils/js-utils.ts"() {
  }
});

// node_modules/@redocly/theme/src/core/utils/tags-parser.ts
var slug;
var init_tags_parser = __esm({
  "node_modules/@redocly/theme/src/core/utils/tags-parser.ts"() {
    slug = (value) => {
      const matches = value.match(/[a-zA-Z0-9_-]*/g);
      const result = matches?.filter((value2) => value2 !== "").join("-").toLowerCase();
      return result ?? value;
    };
  }
});

// node_modules/@redocly/theme/src/core/utils/text-transform.ts
function capitalize(input) {
  return input.charAt(0).toUpperCase() + input.slice(1);
}
var init_text_transform = __esm({
  "node_modules/@redocly/theme/src/core/utils/text-transform.ts"() {
  }
});

// node_modules/@redocly/theme/src/core/utils/markdoc.ts
function isTag(value) {
  return !!(value?.$$mdtype === "Tag");
}
var init_markdoc = __esm({
  "node_modules/@redocly/theme/src/core/utils/markdoc.ts"() {
  }
});

// node_modules/@redocly/theme/src/core/utils/attribute-parser.ts
function parseSrcSet(srcSet) {
  const result = /* @__PURE__ */ new Map();
  const parts = srcSet.split(", ");
  for (const part of parts) {
    const [url, theme] = part.split(" ");
    result.set(theme, url);
  }
  return result;
}
var init_attribute_parser = __esm({
  "node_modules/@redocly/theme/src/core/utils/attribute-parser.ts"() {
  }
});

// node_modules/@redocly/theme/src/core/utils/toc.ts
function getDisplayedHeadings(headings, tocDepth) {
  if (!headings) {
    return [];
  }
  return headings.filter((heading, idx) => {
    if (!heading) {
      return false;
    }
    if (idx === 0 && heading.depth === 1) {
      return false;
    }
    return !(heading.depth && heading.depth > tocDepth);
  });
}
function getDisplayedHeadingsIds(headings) {
  if (!headings) {
    return [];
  }
  return headings.map((header) => header?.id);
}
function getLeastDepth(headings) {
  if (!headings || headings.length === 0) {
    return 1;
  }
  let depth = null;
  for (const heading of headings) {
    if (!heading)
      continue;
    if (depth === null || depth > heading.depth) {
      depth = heading.depth;
    }
  }
  return depth ?? 1;
}
var init_toc = __esm({
  "node_modules/@redocly/theme/src/core/utils/toc.ts"() {
  }
});

// node_modules/@redocly/theme/src/core/utils/menu.ts
function getMenuItemType(item) {
  if (item.type === "separator" /* Separator */) {
    return "separator" /* Separator */;
  } else if (item.menuStyle === "drilldown") {
    return "drilldown" /* DrillDown */;
  } else if (item.items?.length || item.type === "group" /* Group */ && item.items?.length) {
    return "group" /* Group */;
  } else if (item.httpVerb) {
    return "operation" /* Operation */;
  } else
    return "default" /* Default */;
}
var TRANSLATION_KEYS, mapNavbarItems, isItemActive, buildLanguagesGroup, buildVersionSection;
var init_menu = __esm({
  "node_modules/@redocly/theme/src/core/utils/menu.ts"() {
    init_urls();
    init_utils();
    init_constants();
    TRANSLATION_KEYS = {
      version: "mobileMenu.version"
    };
    mapNavbarItems = (items, defaultLocale, currentLocale, locales, location2) => {
      return items.map(
        (navItem) => ({
          ...navItem,
          ...navItem.items && {
            items: mapNavbarItems(navItem.items, defaultLocale, currentLocale, locales, location2)
          },
          ..."link" in navItem && { link: navItem.link || "/" },
          active: "link" in navItem && isItemActive(navItem, defaultLocale, currentLocale, locales, location2),
          hasActiveSubItem: !!navItem.items?.find(
            (item) => isItemActive(item, defaultLocale, currentLocale, locales, location2)
          )
        })
      );
    };
    isItemActive = (item, defaultLocale, currentLocale, locales, location2) => {
      const pathHash = location2.pathname + location2.hash;
      const link = item.languageInsensitive ? item.link || "" : getPathnameForLocale(item.link || "/", defaultLocale, currentLocale, locales);
      return pathHash === withPathPrefix(link);
    };
    buildLanguagesGroup = (locales, defaultLocale, currentLocale) => {
      if (locales.length < 2) {
        return;
      }
      const locale = locales.find((l2) => l2.code === currentLocale);
      return {
        type: "group",
        label: locale?.name || locale?.code,
        items: locales.filter((locale2) => locale2.code !== currentLocale).map((locale2) => {
          const newLangPathname = withPathPrefix(
            getPathnameForLocale(location.pathname, defaultLocale, locale2.code, locales)
          );
          const newUrlWithLanguage = `${newLangPathname}${location.search}${location.hash}`;
          return {
            type: "link",
            label: locale2.name || locale2.code || "",
            link: newUrlWithLanguage,
            active: false,
            hasActiveSubItem: false,
            languageInsensitive: true
          };
        })
      };
    };
    buildVersionSection = (translate, versions, activeVersion) => {
      return [
        {
          type: "separator",
          label: translate(TRANSLATION_KEYS.version, "Version")
        },
        {
          type: "group",
          label: activeVersion?.label,
          items: versions.filter((version) => !version.active).map((version) => {
            return {
              type: "link",
              label: version.label,
              link: version.link,
              active: false,
              hasActiveSubItem: false
            };
          })
        }
      ];
    };
  }
});

// node_modules/@redocly/theme/src/core/utils/load-and-navigate.ts
async function loadAndNavigate(navigate, to, origin = "browser", options) {
  lastNavigatedPath = to;
  const { pathname, hash, search } = new URL(to, window.location.origin + window.location.pathname);
  const loader = window["__LOADER"];
  const result = await withLoadProgress(loader.tryLoad(pathname));
  if (result?.redirectTo) {
    return loadAndNavigate(navigate, result.redirectTo, origin, options);
  }
  if (result && lastNavigatedPath === to) {
    if (pathname !== window.location.pathname || search !== window.location.search) {
      navigate(
        { pathname, search, hash },
        { ...options, state: { origin }, unstable_flushSync: true }
      );
    }
    if (result.props?.disableAutoScroll)
      return;
    if (hash) {
      const el = document.getElementById(hash.slice(1));
      if (el) {
        el.scrollIntoView();
      }
    } else {
      window.scrollTo(0, 0);
    }
  }
}
var lastNavigatedPath;
var init_load_and_navigate = __esm({
  "node_modules/@redocly/theme/src/core/utils/load-and-navigate.ts"() {
    init_utils();
  }
});

// node_modules/@redocly/theme/src/core/utils/change-text-casing.ts
function changeTextCasing(str, casing = "original") {
  if (casing === "original" || !str)
    return str;
  if (casing === "lowercase") {
    return str.toLowerCase();
  }
  if (casing === "uppercase") {
    return str.toUpperCase();
  }
  if (casing === "sentence") {
    const words = str?.split(/[\s-_]+/);
    return words.map((word) => word[0].toUpperCase() + word.slice(1).toLowerCase()).join(" ");
  }
}
var init_change_text_casing = __esm({
  "node_modules/@redocly/theme/src/core/utils/change-text-casing.ts"() {
  }
});

// node_modules/@redocly/theme/src/core/utils/format-date-without-timezone.ts
function formatDateWithoutTimeZone(date) {
  if (!date)
    return date;
  return `${date.getFullYear()}-${padZero(date.getMonth() + 1)}-${padZero(date.getDate())}`;
}
function padZero(num) {
  return num < 10 ? "0" + num : num;
}
var init_format_date_without_timezone = __esm({
  "node_modules/@redocly/theme/src/core/utils/format-date-without-timezone.ts"() {
  }
});

// node_modules/@redocly/theme/src/core/utils/get-navbar-element.ts
function getNavbarElement() {
  const navElements = typeof document !== "undefined" && document.querySelectorAll("nav") || [];
  for (let i2 = 0; i2 < navElements.length; i2++) {
    if (navElements[i2].getBoundingClientRect().height > 1) {
      return navElements[i2];
    }
  }
  return navElements[0] || null;
}
var init_get_navbar_element = __esm({
  "node_modules/@redocly/theme/src/core/utils/get-navbar-element.ts"() {
  }
});

// node_modules/nprogress/nprogress.js
var require_nprogress = __commonJS({
  "node_modules/nprogress/nprogress.js"(exports, module) {
    (function(root, factory) {
      if (typeof define === "function" && define.amd) {
        define(factory);
      } else if (typeof exports === "object") {
        module.exports = factory();
      } else {
        root.NProgress = factory();
      }
    })(exports, function() {
      var NProgress = {};
      NProgress.version = "0.2.0";
      var Settings = NProgress.settings = {
        minimum: 0.08,
        easing: "ease",
        positionUsing: "",
        speed: 200,
        trickle: true,
        trickleRate: 0.02,
        trickleSpeed: 800,
        showSpinner: true,
        barSelector: '[role="bar"]',
        spinnerSelector: '[role="spinner"]',
        parent: "body",
        template: '<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'
      };
      NProgress.configure = function(options) {
        var key, value;
        for (key in options) {
          value = options[key];
          if (value !== void 0 && options.hasOwnProperty(key))
            Settings[key] = value;
        }
        return this;
      };
      NProgress.status = null;
      NProgress.set = function(n2) {
        var started = NProgress.isStarted();
        n2 = clamp(n2, Settings.minimum, 1);
        NProgress.status = n2 === 1 ? null : n2;
        var progress = NProgress.render(!started), bar = progress.querySelector(Settings.barSelector), speed = Settings.speed, ease = Settings.easing;
        progress.offsetWidth;
        queue(function(next) {
          if (Settings.positionUsing === "")
            Settings.positionUsing = NProgress.getPositioningCSS();
          css(bar, barPositionCSS(n2, speed, ease));
          if (n2 === 1) {
            css(progress, {
              transition: "none",
              opacity: 1
            });
            progress.offsetWidth;
            setTimeout(function() {
              css(progress, {
                transition: "all " + speed + "ms linear",
                opacity: 0
              });
              setTimeout(function() {
                NProgress.remove();
                next();
              }, speed);
            }, speed);
          } else {
            setTimeout(next, speed);
          }
        });
        return this;
      };
      NProgress.isStarted = function() {
        return typeof NProgress.status === "number";
      };
      NProgress.start = function() {
        if (!NProgress.status)
          NProgress.set(0);
        var work = function() {
          setTimeout(function() {
            if (!NProgress.status)
              return;
            NProgress.trickle();
            work();
          }, Settings.trickleSpeed);
        };
        if (Settings.trickle)
          work();
        return this;
      };
      NProgress.done = function(force) {
        if (!force && !NProgress.status)
          return this;
        return NProgress.inc(0.3 + 0.5 * Math.random()).set(1);
      };
      NProgress.inc = function(amount) {
        var n2 = NProgress.status;
        if (!n2) {
          return NProgress.start();
        } else {
          if (typeof amount !== "number") {
            amount = (1 - n2) * clamp(Math.random() * n2, 0.1, 0.95);
          }
          n2 = clamp(n2 + amount, 0, 0.994);
          return NProgress.set(n2);
        }
      };
      NProgress.trickle = function() {
        return NProgress.inc(Math.random() * Settings.trickleRate);
      };
      (function() {
        var initial = 0, current = 0;
        NProgress.promise = function($promise) {
          if (!$promise || $promise.state() === "resolved") {
            return this;
          }
          if (current === 0) {
            NProgress.start();
          }
          initial++;
          current++;
          $promise.always(function() {
            current--;
            if (current === 0) {
              initial = 0;
              NProgress.done();
            } else {
              NProgress.set((initial - current) / initial);
            }
          });
          return this;
        };
      })();
      NProgress.render = function(fromStart) {
        if (NProgress.isRendered())
          return document.getElementById("nprogress");
        addClass(document.documentElement, "nprogress-busy");
        var progress = document.createElement("div");
        progress.id = "nprogress";
        progress.innerHTML = Settings.template;
        var bar = progress.querySelector(Settings.barSelector), perc = fromStart ? "-100" : toBarPerc(NProgress.status || 0), parent = document.querySelector(Settings.parent), spinner;
        css(bar, {
          transition: "all 0 linear",
          transform: "translate3d(" + perc + "%,0,0)"
        });
        if (!Settings.showSpinner) {
          spinner = progress.querySelector(Settings.spinnerSelector);
          spinner && removeElement(spinner);
        }
        if (parent != document.body) {
          addClass(parent, "nprogress-custom-parent");
        }
        parent.appendChild(progress);
        return progress;
      };
      NProgress.remove = function() {
        removeClass(document.documentElement, "nprogress-busy");
        removeClass(document.querySelector(Settings.parent), "nprogress-custom-parent");
        var progress = document.getElementById("nprogress");
        progress && removeElement(progress);
      };
      NProgress.isRendered = function() {
        return !!document.getElementById("nprogress");
      };
      NProgress.getPositioningCSS = function() {
        var bodyStyle = document.body.style;
        var vendorPrefix = "WebkitTransform" in bodyStyle ? "Webkit" : "MozTransform" in bodyStyle ? "Moz" : "msTransform" in bodyStyle ? "ms" : "OTransform" in bodyStyle ? "O" : "";
        if (vendorPrefix + "Perspective" in bodyStyle) {
          return "translate3d";
        } else if (vendorPrefix + "Transform" in bodyStyle) {
          return "translate";
        } else {
          return "margin";
        }
      };
      function clamp(n2, min, max) {
        if (n2 < min)
          return min;
        if (n2 > max)
          return max;
        return n2;
      }
      function toBarPerc(n2) {
        return (-1 + n2) * 100;
      }
      function barPositionCSS(n2, speed, ease) {
        var barCSS;
        if (Settings.positionUsing === "translate3d") {
          barCSS = { transform: "translate3d(" + toBarPerc(n2) + "%,0,0)" };
        } else if (Settings.positionUsing === "translate") {
          barCSS = { transform: "translate(" + toBarPerc(n2) + "%,0)" };
        } else {
          barCSS = { "margin-left": toBarPerc(n2) + "%" };
        }
        barCSS.transition = "all " + speed + "ms " + ease;
        return barCSS;
      }
      var queue = function() {
        var pending = [];
        function next() {
          var fn = pending.shift();
          if (fn) {
            fn(next);
          }
        }
        return function(fn) {
          pending.push(fn);
          if (pending.length == 1)
            next();
        };
      }();
      var css = function() {
        var cssPrefixes = ["Webkit", "O", "Moz", "ms"], cssProps = {};
        function camelCase(string) {
          return string.replace(/^-ms-/, "ms-").replace(/-([\da-z])/gi, function(match, letter) {
            return letter.toUpperCase();
          });
        }
        function getVendorProp(name) {
          var style = document.body.style;
          if (name in style)
            return name;
          var i2 = cssPrefixes.length, capName = name.charAt(0).toUpperCase() + name.slice(1), vendorName;
          while (i2--) {
            vendorName = cssPrefixes[i2] + capName;
            if (vendorName in style)
              return vendorName;
          }
          return name;
        }
        function getStyleProp(name) {
          name = camelCase(name);
          return cssProps[name] || (cssProps[name] = getVendorProp(name));
        }
        function applyCss(element, prop, value) {
          prop = getStyleProp(prop);
          element.style[prop] = value;
        }
        return function(element, properties) {
          var args = arguments, prop, value;
          if (args.length == 2) {
            for (prop in properties) {
              value = properties[prop];
              if (value !== void 0 && properties.hasOwnProperty(prop))
                applyCss(element, prop, value);
            }
          } else {
            applyCss(element, args[1], args[2]);
          }
        };
      }();
      function hasClass(element, name) {
        var list = typeof element == "string" ? element : classList(element);
        return list.indexOf(" " + name + " ") >= 0;
      }
      function addClass(element, name) {
        var oldList = classList(element), newList = oldList + name;
        if (hasClass(oldList, name))
          return;
        element.className = newList.substring(1);
      }
      function removeClass(element, name) {
        var oldList = classList(element), newList;
        if (!hasClass(element, name))
          return;
        newList = oldList.replace(" " + name + " ", " ");
        element.className = newList.substring(1, newList.length - 1);
      }
      function classList(element) {
        return (" " + (element.className || "") + " ").replace(/\s+/gi, " ");
      }
      function removeElement(element) {
        element && element.parentNode && element.parentNode.removeChild(element);
      }
      return NProgress;
    });
  }
});

// node_modules/@redocly/theme/src/core/utils/with-load-progress.ts
async function withLoadProgress(loadTarget) {
  const callIdentifier = Symbol();
  lastCalledBy = callIdentifier;
  import_nprogress.default.done();
  import_nprogress.default.start();
  return loadTarget.finally(() => {
    if (lastCalledBy === callIdentifier) {
      import_nprogress.default.done();
      import_nprogress.default.remove();
    }
  });
}
var import_nprogress, lastCalledBy;
var init_with_load_progress = __esm({
  "node_modules/@redocly/theme/src/core/utils/with-load-progress.ts"() {
    import_nprogress = __toESM(require_nprogress());
    import_nprogress.default.configure({
      trickleSpeed: 100,
      template: '<div class="bar" role="bar"><div class="peg"></div></div>'
    });
  }
});

// node_modules/@redocly/theme/src/core/utils/text-trimmer.ts
function trimText(text, maxLength = 150) {
  if (typeof text === "string") {
    if (text.length <= maxLength) {
      return text;
    } else
      return `${text.slice(0, maxLength)}...`;
  } else
    return text;
}
var init_text_trimmer = __esm({
  "node_modules/@redocly/theme/src/core/utils/text-trimmer.ts"() {
  }
});

// node_modules/@redocly/theme/src/core/utils/index.ts
var init_utils = __esm({
  "node_modules/@redocly/theme/src/core/utils/index.ts"() {
    init_clipboard_service();
    init_css_variables();
    init_add_line_numbers();
    init_media_css();
    init_theme_helpers();
    init_class_names();
    init_args_typecheck();
    init_color();
    init_urls();
    init_js_utils();
    init_tags_parser();
    init_text_transform();
    init_dom();
    init_markdoc();
    init_attribute_parser();
    init_type_guards();
    init_dom();
    init_toc();
    init_menu();
    init_load_and_navigate();
    init_get_scorecard_color_variable();
    init_change_text_casing();
    init_format_date_without_timezone();
    init_details();
    init_get_navbar_element();
    init_with_load_progress();
    init_text_trimmer();
  }
});

// node_modules/@redocly/theme/src/core/contexts/ThemeDataContext.tsx
import { createContext } from "react";
var ThemeDataContext;
var init_ThemeDataContext = __esm({
  "node_modules/@redocly/theme/src/core/contexts/ThemeDataContext.tsx"() {
    ThemeDataContext = createContext(null);
  }
});

// node_modules/@redocly/theme/src/core/contexts/index.ts
var init_contexts = __esm({
  "node_modules/@redocly/theme/src/core/contexts/index.ts"() {
    init_ThemeDataContext();
  }
});

// node_modules/@redocly/theme/src/core/hooks/use-theme-config.ts
import { useContext } from "react";
function useThemeConfig(useProductConfig = true) {
  const context = useContext(ThemeDataContext);
  if (!context?.config) {
    return {};
  }
  const { config, hooks } = context;
  const { useCurrentProduct } = hooks;
  const currentProduct = useCurrentProduct();
  const mergedConfig = useProductConfig && currentProduct?.configOverride ? {
    ...config,
    ...currentProduct.configOverride,
    // Do not override analytics config from product
    analytics: config.analytics
  } : config;
  return mergedConfig;
}
var init_use_theme_config = __esm({
  "node_modules/@redocly/theme/src/core/hooks/use-theme-config.ts"() {
    init_contexts();
  }
});

// node_modules/@redocly/theme/src/core/hooks/use-mount.ts
import { useEffect } from "react";
var useMount;
var init_use_mount = __esm({
  "node_modules/@redocly/theme/src/core/hooks/use-mount.ts"() {
    useMount = (callback) => {
      useEffect(() => {
        callback();
      }, []);
    };
  }
});

// node_modules/@redocly/theme/src/core/hooks/use-outside-click.ts
import { useEffect as useEffect2 } from "react";
function useOutsideClick(ref, handler) {
  useEffect2(() => {
    const listener = (event) => {
      if (!handler || !ref.current || ref.current.contains(event.target)) {
        return;
      }
      handler(event);
    };
    document.addEventListener("mousedown", listener);
    document.addEventListener("touchstart", listener);
    return () => {
      document.removeEventListener("mousedown", listener);
      document.removeEventListener("touchstart", listener);
    };
  }, [ref, handler]);
}
var init_use_outside_click = __esm({
  "node_modules/@redocly/theme/src/core/hooks/use-outside-click.ts"() {
  }
});

// node_modules/@redocly/theme/src/core/hooks/use-theme-hooks.ts
import { useContext as useContext2 } from "react";
var fallbacks, useThemeHooks;
var init_use_theme_hooks = __esm({
  "node_modules/@redocly/theme/src/core/hooks/use-theme-hooks.ts"() {
    init_contexts();
    fallbacks = {
      useTranslate: () => ({
        translate: (value, options) => (typeof options === "string" ? options : options?.defaultValue) || value || ""
      }),
      useSubmitFeedback: () => ({ submitFeedback: () => {
      } }),
      useTelemetry: () => ({ telemetry: () => {
      } }),
      useBreadcrumbs: () => [],
      useCodeHighlight: () => ({ highlight: (rawContent) => rawContent })
    };
    useThemeHooks = () => {
      const context = useContext2(ThemeDataContext);
      return new Proxy({}, {
        get(_2, prop) {
          if (context && prop in context.hooks) {
            return context.hooks[prop];
          } else if (prop in fallbacks) {
            return fallbacks[prop];
          } else {
            throw new Error(`Unknown hook ${prop.toString()}`);
          }
        }
      });
    };
  }
});

// node_modules/@redocly/theme/src/core/hooks/use-modal-scroll-lock.ts
import { useEffect as useEffect3 } from "react";
function useModalScrollLock(isOpen) {
  useEffect3(() => {
    const originalOverflow = document.body.style.overflow;
    const scrollbarWidth = window.innerWidth - document.documentElement.clientWidth;
    if (isOpen) {
      document.body.style.overflow = "hidden";
      document.body.style.marginRight = `${scrollbarWidth}px`;
    } else {
      document.body.style.overflow = originalOverflow;
      document.body.style.marginRight = "";
    }
    return () => {
      document.body.style.overflow = originalOverflow;
      document.body.style.marginRight = "";
    };
  }, [isOpen]);
}
var init_use_modal_scroll_lock = __esm({
  "node_modules/@redocly/theme/src/core/hooks/use-modal-scroll-lock.ts"() {
  }
});

// node_modules/@redocly/theme/src/core/hooks/use-focus-trap.ts
import { useEffect as useEffect4 } from "react";
function useFocusTrap(containerRef) {
  useEffect4(() => {
    const trapElement = containerRef.current;
    if (!trapElement)
      return;
    const focusableElements = trapElement.querySelectorAll(
      'button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])'
    );
    const firstElement = focusableElements[0];
    const handleKeyDown = (event) => {
      if (event.key === "Tab") {
        const lastElement = focusableElements[focusableElements.length - 1];
        if (event.shiftKey && document.activeElement === firstElement) {
          lastElement?.focus();
          event.preventDefault();
        } else if (!event.shiftKey && document.activeElement === lastElement) {
          firstElement?.focus();
          event.preventDefault();
        }
      }
    };
    trapElement.addEventListener("keydown", handleKeyDown);
    if (firstElement) {
      firstElement.focus();
    }
    return () => {
      trapElement.removeEventListener("keydown", handleKeyDown);
    };
  }, [containerRef]);
}
var init_use_focus_trap = __esm({
  "node_modules/@redocly/theme/src/core/hooks/use-focus-trap.ts"() {
  }
});

// node_modules/@redocly/theme/src/core/hooks/use-control.ts
import { useState, useCallback } from "react";
var useControl;
var init_use_control = __esm({
  "node_modules/@redocly/theme/src/core/hooks/use-control.ts"() {
    useControl = (initialVal = false) => {
      const [isOpened, setIsOpened] = useState(initialVal);
      const handleOpen = useCallback(() => setIsOpened(true), []);
      const handleClose = useCallback(() => setIsOpened(false), []);
      return {
        isOpened,
        handleOpen,
        handleClose
      };
    };
  }
});

// node_modules/@redocly/theme/src/core/hooks/use-unmount.ts
import { useEffect as useEffect5 } from "react";
var useUnmount;
var init_use_unmount = __esm({
  "node_modules/@redocly/theme/src/core/hooks/use-unmount.ts"() {
    useUnmount = (callback) => {
      useEffect5(() => {
        return () => {
          callback();
        };
      }, []);
    };
  }
});

// node_modules/@redocly/theme/src/core/hooks/use-active-heading.ts
import { useState as useState2, useEffect as useEffect6, useRef, useCallback as useCallback2 } from "react";
import { useLocation } from "react-router-dom";
function useActiveHeading(contentElement, displayedHeaders) {
  const [heading, setHeading] = useState2(
    displayedHeaders.length > 1 ? displayedHeaders[0] : void 0
  );
  const [headingElements, setHeadingElements] = useState2([]);
  const headingElementsRef = useRef({});
  const location2 = useLocation();
  const getVisibleHeadings = () => {
    const visibleHeadings = [];
    for (const key in headingElementsRef.current) {
      const headingElement = headingElementsRef.current[key];
      if (headingElement.isIntersecting) {
        visibleHeadings.push(headingElement);
      }
    }
    return visibleHeadings;
  };
  const getIndexFromId = useCallback2(
    (id) => {
      return headingElements.findIndex((item) => item.id === id);
    },
    [headingElements]
  );
  const findHeaders = (allContent) => {
    const allHeaders = allContent.querySelectorAll(".heading-anchor");
    return Array.from(allHeaders);
  };
  const intersectionCallback = useCallback2(
    (headings) => {
      headingElementsRef.current = headings.reduce(
        (map, headingElement) => {
          map[headingElement.target.id] = headingElement;
          return map;
        },
        headingElementsRef.current
      );
      const totalHeight = window.scrollY + window.innerHeight;
      if (totalHeight >= document.body.scrollHeight) {
        const newHeading = headingElements[headingElements?.length - 1]?.id || void 0;
        setHeading(newHeading);
        return;
      }
      const visibleHeadings = getVisibleHeadings();
      if (!visibleHeadings.length) {
        return;
      }
      if (visibleHeadings.length === 1) {
        setHeading(visibleHeadings[0].target.id);
        return;
      }
      visibleHeadings.sort((a2, b2) => {
        return getIndexFromId(a2.target.id) - getIndexFromId(b2.target.id);
      });
      setHeading(visibleHeadings[0].target.id);
    },
    [getIndexFromId, headingElements]
  );
  useEffect6(() => {
    if (!contentElement) {
      return;
    }
    setHeadingElements(findHeaders(contentElement));
  }, [contentElement, location2]);
  useEffect6(() => {
    if (!headingElements?.length) {
      return;
    }
    headingElementsRef.current = {};
    const observer = new IntersectionObserver(intersectionCallback, {
      rootMargin: "0px 0px -30% 0px",
      threshold: 1
    });
    headingElements?.forEach((element) => {
      if (displayedHeaders.includes(element.id)) {
        observer.observe(element);
      }
    });
    return () => observer.disconnect();
  }, [headingElements, displayedHeaders, intersectionCallback]);
  return heading;
}
var init_use_active_heading = __esm({
  "node_modules/@redocly/theme/src/core/hooks/use-active-heading.ts"() {
  }
});

// node_modules/lodash.throttle/index.js
var require_lodash = __commonJS({
  "node_modules/lodash.throttle/index.js"(exports, module) {
    var FUNC_ERROR_TEXT = "Expected a function";
    var NAN = 0 / 0;
    var symbolTag = "[object Symbol]";
    var reTrim = /^\s+|\s+$/g;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsOctal = /^0o[0-7]+$/i;
    var freeParseInt = parseInt;
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function("return this")();
    var objectProto = Object.prototype;
    var objectToString = objectProto.toString;
    var nativeMax = Math.max;
    var nativeMin = Math.min;
    var now = function() {
      return root.Date.now();
    };
    function debounce(func, wait, options) {
      var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
      if (typeof func != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject2(options)) {
        leading = !!options.leading;
        maxing = "maxWait" in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = "trailing" in options ? !!options.trailing : trailing;
      }
      function invokeFunc(time) {
        var args = lastArgs, thisArg = lastThis;
        lastArgs = lastThis = void 0;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }
      function leadingEdge(time) {
        lastInvokeTime = time;
        timerId = setTimeout(timerExpired, wait);
        return leading ? invokeFunc(time) : result;
      }
      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, result2 = wait - timeSinceLastCall;
        return maxing ? nativeMin(result2, maxWait - timeSinceLastInvoke) : result2;
      }
      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
        return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
      }
      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        timerId = setTimeout(timerExpired, remainingWait(time));
      }
      function trailingEdge(time) {
        timerId = void 0;
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = void 0;
        return result;
      }
      function cancel() {
        if (timerId !== void 0) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = void 0;
      }
      function flush() {
        return timerId === void 0 ? result : trailingEdge(now());
      }
      function debounced() {
        var time = now(), isInvoking = shouldInvoke(time);
        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;
        if (isInvoking) {
          if (timerId === void 0) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === void 0) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }
    function throttle3(func, wait, options) {
      var leading = true, trailing = true;
      if (typeof func != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject2(options)) {
        leading = "leading" in options ? !!options.leading : leading;
        trailing = "trailing" in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        "leading": leading,
        "maxWait": wait,
        "trailing": trailing
      });
    }
    function isObject2(value) {
      var type = typeof value;
      return !!value && (type == "object" || type == "function");
    }
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
    }
    function toNumber(value) {
      if (typeof value == "number") {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject2(value)) {
        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
        value = isObject2(other) ? other + "" : other;
      }
      if (typeof value != "string") {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, "");
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }
    module.exports = throttle3;
  }
});

// node_modules/@redocly/theme/src/core/hooks/use-active-section-id.ts
import { useEffect as useEffect7, useState as useState3, useMemo } from "react";
function useActiveSectionId(location2, hasOverviewPage = false, withNavbar = true) {
  const [itemId, setItemId] = useState3("");
  const navbarHeight = useNavbarHeight(location2);
  const heightOffset = (withNavbar ? navbarHeight : 0) + 150;
  const scrollListener = useMemo(
    () => (0, import_lodash.default)(() => {
      const sections = document.querySelectorAll("[data-section-id]");
      if (sections.length < 2) {
        setItemId("");
        return;
      }
      for (let i2 = 0; i2 < sections.length; i2++) {
        const section = sections[i2];
        const rect = section.getBoundingClientRect();
        if (rect.y < heightOffset && rect.bottom > heightOffset) {
          setItemId(section.getAttribute("data-section-id") || "");
          return;
        }
      }
      if (hasOverviewPage) {
        setItemId("");
      }
    }, 150),
    [heightOffset, hasOverviewPage]
  );
  useEffect7(() => {
    window.addEventListener("scroll", scrollListener, { capture: false });
    setTimeout(() => {
      scrollListener();
    }, 10);
    return () => {
      window.removeEventListener("scroll", scrollListener);
    };
  }, [location2, heightOffset, scrollListener]);
  return itemId;
}
var import_lodash;
var init_use_active_section_id = __esm({
  "node_modules/@redocly/theme/src/core/hooks/use-active-section-id.ts"() {
    import_lodash = __toESM(require_lodash());
    init_hooks();
  }
});

// node_modules/@redocly/theme/src/core/hooks/use-dialog-hotkeys.ts
import { useEffect as useEffect8, useRef as useRef2 } from "react";
function useDialogHotKeys(ref, onClose) {
  const firstFocusableRef = useRef2();
  const lastFocusableRef = useRef2();
  const onKeyDownHandler = (event) => {
    if (event.key === "Escape") {
      onClose();
    } else if (event.key === "Tab") {
      if (!event.shiftKey && document.activeElement === lastFocusableRef.current) {
        event.preventDefault();
        firstFocusableRef.current?.focus();
      } else if (event.shiftKey && document.activeElement === firstFocusableRef.current) {
        event.preventDefault();
        lastFocusableRef.current?.focus();
      }
    }
  };
  const onFocusableElementsHandler = () => {
    const focusableElements = ref.current?.querySelectorAll(
      'input, [href], [tabindex]:not([tabindex="-1"])'
    );
    if (focusableElements && focusableElements.length > 0) {
      firstFocusableRef.current = focusableElements[0];
      lastFocusableRef.current = focusableElements[focusableElements.length - 1];
      firstFocusableRef.current?.focus();
    }
  };
  useEffect8(() => {
    document.addEventListener("keydown", onKeyDownHandler);
    return () => {
      document.removeEventListener("keydown", onKeyDownHandler);
    };
  }, []);
  useEffect8(() => {
    onFocusableElementsHandler();
  });
}
var init_use_dialog_hotkeys = __esm({
  "node_modules/@redocly/theme/src/core/hooks/use-dialog-hotkeys.ts"() {
  }
});

// node_modules/@redocly/theme/src/core/hooks/use-full-height.ts
import { useCallback as useCallback3, useEffect as useEffect9, useMemo as useMemo2 } from "react";
function useFullHeight(element) {
  const handler = useCallback3(() => {
    if (!element.current) {
      return;
    }
    const footer = document.querySelector("footer");
    if (!footer) {
      return;
    }
    const elementTop = element.current.getBoundingClientRect().top;
    const footerOffset = footer.offsetTop - window.scrollY - elementTop;
    if (footerOffset > window.innerHeight) {
      element.current.style.maxHeight = `${window.innerHeight - elementTop}px`;
    } else {
      element.current.style.maxHeight = `${footerOffset}px`;
    }
  }, [element]);
  const throttledHandler = useMemo2(() => (0, import_lodash2.default)(handler, 150), [handler]);
  useEffect9(() => {
    if (typeof window === "undefined" || !element.current) {
      return () => {
      };
    }
    window.addEventListener("scroll", throttledHandler, {
      capture: false
    });
    window.addEventListener("resize", throttledHandler, {
      capture: false
    });
    handler();
    return () => {
      window.removeEventListener("scroll", throttledHandler);
      window.removeEventListener("resize", throttledHandler);
    };
  }, [throttledHandler, element, handler]);
}
var import_lodash2;
var init_use_full_height = __esm({
  "node_modules/@redocly/theme/src/core/hooks/use-full-height.ts"() {
    import_lodash2 = __toESM(require_lodash());
  }
});

// node_modules/@redocly/theme/src/core/hooks/use-navbar-height.ts
import { useEffect as useEffect10, useState as useState4 } from "react";
function useNavbarHeight(location2) {
  const [height, setHeight] = useState4(0);
  useEffect10(() => {
    const navbar = getNavbarElement();
    setHeight(navbar && navbar.clientHeight || 0);
  }, [location2.pathname]);
  useEffect10(() => {
    window.requestAnimationFrame(() => {
      const navbar = getNavbarElement();
      setHeight(navbar && navbar.clientHeight || 0);
    });
  }, []);
  return height;
}
var init_use_navbar_height = __esm({
  "node_modules/@redocly/theme/src/core/hooks/use-navbar-height.ts"() {
    init_utils();
  }
});

// node_modules/@redocly/theme/src/core/hooks/use-mobile-menu.ts
import { useEffect as useEffect11, useState as useState5 } from "react";
import { useLocation as useLocation2 } from "react-router-dom";
function useMobileMenu(initialState = false) {
  const location2 = useLocation2();
  const [isOpen, setIsOpen] = useState5(initialState);
  useEffect11(() => setIsOpen(false), [location2.pathname, location2.hash]);
  useModalScrollLock(isOpen);
  const openMobileMenu = () => setIsOpen(true);
  const closeMobileMenu = () => setIsOpen(false);
  return { isOpen, openMobileMenu, closeMobileMenu };
}
var init_use_mobile_menu = __esm({
  "node_modules/@redocly/theme/src/core/hooks/use-mobile-menu.ts"() {
    init_hooks();
  }
});

// node_modules/@redocly/theme/src/core/hooks/use-color-switcher.ts
import { useState as useState6 } from "react";
var useColorSwitcher;
var init_use_color_switcher = __esm({
  "node_modules/@redocly/theme/src/core/hooks/use-color-switcher.ts"() {
    init_hooks();
    useColorSwitcher = () => {
      const themeSettings = useThemeConfig();
      const { useTelemetry } = useThemeHooks();
      const telemetry = useTelemetry();
      const colorMode = themeSettings.colorMode;
      const modes = colorMode?.modes || ["light", "dark"];
      const defaultColor = modes[0] || "light";
      const [activeColorMode, setActiveColorMode] = useState6(defaultColor);
      const initActiveColorMode = () => {
        const activeMode = Array.from(document.documentElement.classList).find(
          (c2) => modes.includes(c2)
        );
        setActiveColorMode(activeMode || defaultColor);
      };
      const switchColorMode = () => {
        const activeIndex = modes.indexOf(activeColorMode);
        const mode = activeIndex < modes.length - 1 ? modes[activeIndex + 1] : modes[0];
        localStorage.setItem("colorSchema", mode);
        document.documentElement.className = `${mode} notransition`;
        window.requestAnimationFrame(() => {
          document.documentElement.classList.remove("notransition");
        });
        telemetry.send("color_mode_switched", { from: activeColorMode, to: mode });
        setActiveColorMode(mode);
        return mode;
      };
      return {
        isSwitcherHidden: colorMode?.hide,
        initActiveColorMode,
        switchColorMode,
        activeColorMode
      };
    };
  }
});

// node_modules/@redocly/theme/src/core/hooks/search/use-recent-searches.ts
import { useCallback as useCallback4, useState as useState7 } from "react";
function getRecentSearches() {
  if (!isBrowser())
    return [];
  const recentSearchesStr = window.localStorage.getItem(RECENT_SEARCHES_KEY);
  if (!recentSearchesStr)
    return [];
  return JSON.parse(recentSearchesStr);
}
function updateRecentSearches(value, isAdd) {
  if (!isBrowser())
    return [];
  const recentSearches = getRecentSearches();
  if (value === "")
    return recentSearches;
  const valueIndex = recentSearches.indexOf(value);
  if (valueIndex !== -1)
    recentSearches.splice(valueIndex, 1);
  if (isAdd)
    recentSearches.unshift(value);
  localStorage?.setItem(
    RECENT_SEARCHES_KEY,
    JSON.stringify(recentSearches.slice(0, RECENT_SEARCHES_LIMIT))
  );
  return recentSearches;
}
var RECENT_SEARCHES_KEY, RECENT_SEARCHES_LIMIT, useRecentSearches;
var init_use_recent_searches = __esm({
  "node_modules/@redocly/theme/src/core/hooks/search/use-recent-searches.ts"() {
    init_utils();
    RECENT_SEARCHES_KEY = "recentSearches";
    RECENT_SEARCHES_LIMIT = 5;
    useRecentSearches = () => {
      const [items, setItems] = useState7(getRecentSearches());
      const addSearchHistoryItem = useCallback4((value) => {
        setItems(updateRecentSearches(value, true));
      }, []);
      const removeSearchHistoryItem = useCallback4((value) => {
        setItems(updateRecentSearches(value, false));
      }, []);
      return { items, addSearchHistoryItem, removeSearchHistoryItem };
    };
  }
});

// node_modules/@redocly/theme/src/core/hooks/search/use-suggested-pages.ts
var useSuggestedPages;
var init_use_suggested_pages = __esm({
  "node_modules/@redocly/theme/src/core/hooks/search/use-suggested-pages.ts"() {
    init_hooks();
    useSuggestedPages = () => {
      const themeSettings = useThemeConfig();
      const suggestedPages = themeSettings.search?.suggestedPages;
      return suggestedPages || [];
    };
  }
});

// node_modules/@redocly/theme/src/core/hooks/menu/use-nested-menu.ts
import { useNavigate, useLocation as useLocation3 } from "react-router-dom";
import { useCallback as useCallback5, useEffect as useEffect12, useState as useState8 } from "react";
function useNestedMenu({ item, labelRef, nestedMenuRef }) {
  const [isExpanded, setIsExpanded] = useMenuItemExpanded(item);
  const [canUnmount, setCanUnmount] = useState8(!isExpanded);
  const navigate = useNavigate();
  const location2 = useLocation3();
  const { style } = useCollapse({
    isExpanded,
    collapseElRef: nestedMenuRef || { current: null },
    onTransitionStateChange: (state) => {
      if (state === "collapseEnd") {
        setCanUnmount(true);
      }
      if (state === "expandStart") {
        setCanUnmount(false);
      }
    }
  });
  function scrollIfNeeded(el, centerIfNeeded = false) {
    if (typeof el.scrollIntoViewIfNeeded === "function") {
      el.scrollIntoViewIfNeeded(centerIfNeeded);
    }
  }
  useEffect12(() => {
    if (item.active && labelRef && labelRef.current) {
      scrollIfNeeded(labelRef.current, true);
    }
  }, [labelRef, item.active]);
  useEffect12(() => {
    if (item.active && isExpanded && labelRef && labelRef.current) {
      scrollIfNeeded(labelRef.current);
    }
  }, [labelRef, isExpanded, item.active]);
  const handleExpand = useCallback5(async () => {
    if (item.expanded === "always" || item.link && item.hasActiveSubItem && item.link !== location2.pathname) {
      return;
    }
    const [firstChild] = item.items;
    if (!isExpanded && item.selectFirstItemOnExpand && firstChild.link) {
      await loadAndNavigate(navigate, firstChild.link);
    }
    setIsExpanded(!isExpanded);
  }, [item, isExpanded, navigate, location2.pathname, setIsExpanded]);
  return {
    isExpanded,
    canUnmount,
    style,
    handleExpand
  };
}
var init_use_nested_menu = __esm({
  "node_modules/@redocly/theme/src/core/hooks/menu/use-nested-menu.ts"() {
    init_hooks();
    init_utils();
  }
});

// node_modules/@redocly/theme/src/core/hooks/menu/use-menu-item-expanded.ts
import { useEffect as useEffect13, useState as useState9 } from "react";
function isItemExpanded(item) {
  return item.active || item.hasActiveSubItem || item.expanded === "true" || item.expanded === "always";
}
function useMenuItemExpanded(item) {
  const [isExpanded, setIsExpanded] = useState9(isItemExpanded(item));
  const [controlledValue, setControlledValue] = useState9(isItemExpanded(item));
  useEffect13(() => {
    setIsExpanded(controlledValue);
  }, [controlledValue]);
  useEffect13(() => {
    const newValue = isItemExpanded(item);
    setIsExpanded(newValue);
    setControlledValue(newValue);
  }, [!item.modified ? item : item.active, item.hasActiveSubItem, item.expanded]);
  return [isExpanded, setControlledValue];
}
var init_use_menu_item_expanded = __esm({
  "node_modules/@redocly/theme/src/core/hooks/menu/use-menu-item-expanded.ts"() {
  }
});

// node_modules/@redocly/theme/src/core/hooks/menu/use-mobile-menu-items.ts
import { useLocation as useLocation4 } from "react-router-dom";
var MENU_SEPARATOR, useMobileMenuItems;
var init_use_mobile_menu_items = __esm({
  "node_modules/@redocly/theme/src/core/hooks/menu/use-mobile-menu-items.ts"() {
    init_hooks();
    init_constants();
    init_utils();
    MENU_SEPARATOR = {
      type: "separator",
      separatorLine: true
    };
    useMobileMenuItems = (menuType) => {
      const { useTranslate, useL10nConfig, useCurrentProduct, usePageVersions, useSidebarItems } = useThemeHooks();
      const { versions = [] } = usePageVersions() || {};
      const { defaultLocale, currentLocale, locales } = useL10nConfig();
      const { translate } = useTranslate();
      const activeVersion = versions.find((version) => version.active);
      const {
        currentItems: sidebarItems,
        pushDrilldownState,
        popDrilldownState,
        backLink
      } = useSidebarItems(activeVersion);
      const location2 = useLocation4();
      const currentProduct = useCurrentProduct();
      const hasProductNavbarOverride = currentProduct?.configOverride?.navbar;
      const productThemeConfig = useThemeConfig();
      const baseThemeConfig = useThemeConfig(false);
      const baseNavItems = baseThemeConfig.navbar?.items || [];
      const productNavItems = hasProductNavbarOverride ? productThemeConfig.navbar?.items || [] : [];
      const menuItems = [];
      if (menuType === "PAGE" /* PAGE */) {
        if (activeVersion) {
          const versionsSection = buildVersionSection(translate, versions, activeVersion);
          menuItems.push(...versionsSection);
        }
        if (menuItems.length && sidebarItems.length) {
          menuItems.push(MENU_SEPARATOR);
        }
        menuItems.push(...sidebarItems);
      } else if (menuType === "PRODUCT" /* PRODUCT */) {
        menuItems.push(...productNavItems);
        if (menuItems.length && baseNavItems.length) {
          menuItems.push(MENU_SEPARATOR);
        }
        if (baseNavItems.length) {
          menuItems.push(...baseNavItems);
        }
      } else if (menuType === "MAIN_MENU" /* MAIN_MENU */) {
        const productMenuItems = Object.values(baseThemeConfig.products || {}).map(
          (product) => ({
            label: product.name,
            link: product.link,
            icon: product.icon,
            type: "link"
          })
        );
        if (productMenuItems.length) {
          menuItems.push({
            type: "separator",
            label: translate("mobileMenu.products", "Products")
          });
          menuItems.push(...productMenuItems);
        }
        if (menuItems.length && baseNavItems.length) {
          menuItems.push(MENU_SEPARATOR);
        }
        if (baseNavItems.length) {
          menuItems.push(...baseNavItems);
        }
      }
      const languagesMenu = buildLanguagesGroup(locales, defaultLocale, currentLocale);
      if (menuItems.length && languagesMenu) {
        menuItems.push(MENU_SEPARATOR);
      }
      if (languagesMenu) {
        menuItems.push(languagesMenu);
      }
      return {
        items: mapNavbarItems(menuItems, defaultLocale, currentLocale, locales, location2),
        popDrilldownState,
        pushDrilldownState,
        backLink
      };
    };
  }
});

// node_modules/@redocly/theme/src/core/hooks/menu/use-mobile-menu-levels.ts
import { useMemo as useMemo3 } from "react";
import { useLocation as useLocation5 } from "react-router-dom";
var useMobileMenuLevels;
var init_use_mobile_menu_levels = __esm({
  "node_modules/@redocly/theme/src/core/hooks/menu/use-mobile-menu-levels.ts"() {
    init_hooks();
    init_constants();
    useMobileMenuLevels = () => {
      const { useTranslate, useCurrentProduct, usePageVersions, useSidebarItems } = useThemeHooks();
      const { versions = [] } = usePageVersions() || {};
      const activeVersion = versions.find((version) => version?.active);
      const { currentItems: sidebarItems } = useSidebarItems(activeVersion);
      const { translate } = useTranslate();
      const currentProduct = useCurrentProduct();
      const productThemeConfig = useThemeConfig();
      const location2 = useLocation5();
      const hasProductNavbarOverride = currentProduct?.configOverride?.navbar;
      const productNavItems = hasProductNavbarOverride ? productThemeConfig.navbar?.items || [] : [];
      const menuLevels = useMemo3(() => {
        const menuLevels2 = [
          {
            label: translate("mobileMenu.mainMenu", "Main Menu"),
            type: "MAIN_MENU" /* MAIN_MENU */
          }
        ];
        if (currentProduct && productNavItems.length) {
          menuLevels2.push({
            label: currentProduct.name,
            type: "PRODUCT" /* PRODUCT */
          });
        }
        if (sidebarItems.length || activeVersion) {
          menuLevels2.push({
            label: translate("mobileMenu.previous", "Previous"),
            type: "PAGE" /* PAGE */
          });
        }
        return menuLevels2;
      }, [location2]);
      return menuLevels;
    };
  }
});

// node_modules/@redocly/theme/src/core/hooks/menu/use-collapse.ts
import {
  useState as useState10,
  useRef as useRef3,
  useEffect as useEffect14,
  useLayoutEffect as useReactLayoutEffect,
  useCallback as useCallback6
} from "react";
function useCollapse({
  isExpanded,
  collapseElRef,
  onTransitionStateChange: configOnTransitionStateChange = () => {
  }
}) {
  const prevExpanded = useRef3(isExpanded);
  const [isAnimating, setIsAnimating] = useState10(false);
  const onTransitionStateChange = useEvent(configOnTransitionStateChange);
  const frameId = useRef3();
  const endFrameId = useRef3();
  useLayoutEffect(() => {
    const collapse = collapseElRef.current;
    if (!collapse)
      return;
    if (isExpanded === prevExpanded.current)
      return;
    prevExpanded.current = isExpanded;
    function getDuration(height) {
      return getAutoHeightDuration(height);
    }
    const getTransitionStyles = (height) => `height ${getDuration(height)}ms ${easing}`;
    const setTransitionEndTimeout = (duration) => {
      function endTransition() {
        if (isExpanded) {
          setStyles(collapse, {
            height: "",
            overflow: "",
            transition: "",
            display: "",
            pointerEvents: "auto"
          });
          onTransitionStateChange("expandEnd");
        } else {
          setStyles(collapse, { transition: "", pointerEvents: "" });
          onTransitionStateChange("collapseEnd");
        }
        setIsAnimating(false);
      }
      if (endFrameId.current) {
        clearAnimationTimeout(endFrameId.current);
      }
      endFrameId.current = setAnimationTimeout(endTransition, duration);
    };
    setIsAnimating(true);
    if (isExpanded) {
      frameId.current = requestAnimationFrame(() => {
        onTransitionStateChange("expandStart");
        setStyles(collapse, {
          display: "block",
          overflow: "hidden",
          pointerEvents: "none",
          height: collapsedHeight
        });
        frameId.current = requestAnimationFrame(() => {
          onTransitionStateChange("expanding");
          const height = getElementHeight(collapseElRef);
          setTransitionEndTimeout(getDuration(height));
          if (collapseElRef.current) {
            collapseElRef.current.style.transition = getTransitionStyles(height);
            collapseElRef.current.style.height = `${height}px`;
          }
        });
      });
    } else {
      frameId.current = requestAnimationFrame(() => {
        onTransitionStateChange("collapseStart");
        const height = getElementHeight(collapseElRef);
        setTransitionEndTimeout(getDuration(height));
        setStyles(collapse, {
          transition: getTransitionStyles(height),
          height: `${height}px`,
          pointerEvents: "none"
        });
        frameId.current = requestAnimationFrame(() => {
          onTransitionStateChange("collapsing");
          setStyles(collapse, {
            height: collapsedHeight,
            overflow: "hidden"
          });
        });
      });
    }
    return () => {
      if (frameId.current)
        cancelAnimationFrame(frameId.current);
      if (endFrameId.current)
        clearAnimationTimeout(endFrameId.current);
    };
  }, [isExpanded, collapseElRef, onTransitionStateChange]);
  return {
    isExpanded,
    style: !isAnimating && !isExpanded ? {
      // collapsed and not animating
      display: "none",
      height: collapsedHeight,
      overflow: "hidden"
    } : {}
  };
}
function getAutoHeightDuration(height) {
  if (!height || typeof height === "string") {
    return 0;
  }
  const constant = height / 36;
  return Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10);
}
function getElementHeight(el) {
  return el.current?.scrollHeight ?? 0;
}
function setAnimationTimeout(callback, timeout) {
  const startTime = performance.now();
  const frame = {};
  function call() {
    frame.id = requestAnimationFrame((now) => {
      if (now - startTime > timeout) {
        callback();
      } else {
        call();
      }
    });
  }
  call();
  return frame;
}
function clearAnimationTimeout(frame) {
  if (frame.id)
    cancelAnimationFrame(frame.id);
}
function setStyles(target, newStyles) {
  if (!target)
    return;
  for (const property in newStyles) {
    const value = newStyles[property];
    if (value) {
      target.style[property] = value;
    } else {
      target.style.removeProperty(property);
    }
  }
}
function useEvent(callback) {
  const ref = useRef3(callback);
  useEffect14(() => {
    ref.current = callback;
  });
  return useCallback6((...args) => ref.current?.(...args), []);
}
var useLayoutEffect, easing, collapsedHeight;
var init_use_collapse = __esm({
  "node_modules/@redocly/theme/src/core/hooks/menu/use-collapse.ts"() {
    useLayoutEffect = typeof window === "undefined" ? useEffect14 : useReactLayoutEffect;
    easing = "cubic-bezier(0.4, 0, 0.2, 1)";
    collapsedHeight = `0px`;
  }
});

// node_modules/@redocly/theme/src/core/hooks/feedback/use-report-dialog.ts
import { useState as useState11 } from "react";
function useReportDialog() {
  const { codeSnippet: { report = {} } = {} } = useThemeConfig();
  const [isReportDialogShown, setIsReportDialogShown] = useState11(false);
  const { tooltipText, buttonText, label } = report;
  const { useTranslate, useSubmitFeedback } = useThemeHooks();
  const { translate } = useTranslate();
  const { submitFeedback } = useSubmitFeedback();
  const showReportDialog = () => {
    setIsReportDialogShown(true);
  };
  const hideReportDialog = () => {
    setTimeout(function() {
      setIsReportDialogShown(false);
    }, 3e3);
  };
  const closeReportDialog = () => {
    setIsReportDialogShown(false);
  };
  const reportButtonProps = {
    onClick: showReportDialog,
    buttonText: buttonText || translate("codeSnippet.report.buttonText", "Report"),
    tooltip: tooltipText || translate("codeSnippet.report.tooltipText", "Report a problem"),
    hide: report?.hide === true
  };
  const reportDialogProps = {
    settings: {
      label: label || translate("codeSnippet.report.label", "What is wrong with this code?")
    },
    onSubmit: hideReportDialog,
    onCancel: closeReportDialog,
    submitFeedback
  };
  return {
    reportDialog: { visible: isReportDialogShown, props: reportDialogProps },
    reportButton: { props: reportButtonProps }
  };
}
var init_use_report_dialog = __esm({
  "node_modules/@redocly/theme/src/core/hooks/feedback/use-report-dialog.ts"() {
    init_hooks();
  }
});

// node_modules/@redocly/theme/src/core/hooks/use-tabs.ts
import { useCallback as useCallback7, useRef as useRef4, useState as useState12 } from "react";
function useTabs({ initialTab, totalTabs }) {
  const [activeTab, setActiveTab] = useState12(initialTab);
  const tabRefs = useRef4([]);
  const setTabRef = useCallback7((element, index) => {
    tabRefs.current[index] = element;
  }, []);
  const getTabId = useCallback7((label, index) => {
    const cleanLabel = label.replace(/\s+/g, "-").toLowerCase();
    return `${cleanLabel}-${index}`;
  }, []);
  const focusTab = (index) => {
    const currentElement = tabRefs.current[index];
    if (currentElement) {
      currentElement.focus();
    }
  };
  const onTabSelect = useCallback7((index) => {
    focusTab(index);
    const label = tabRefs.current[index]?.getAttribute("data-label");
    if (label)
      setActiveTab(label);
  }, []);
  const onTabClick = useCallback7((label) => {
    setActiveTab(label);
    const tabIndex = tabRefs.current.findIndex((ref) => ref?.getAttribute("data-label") === label);
    focusTab(tabIndex);
  }, []);
  const handleKeyboard = useCallback7(
    (event, index) => {
      let newIndex = index;
      if (event.key === "ArrowRight") {
        newIndex = (index + 1) % totalTabs;
      } else if (event.key === "ArrowLeft") {
        newIndex = (index - 1 + totalTabs) % totalTabs;
      } else if (event.key === "Home") {
        event.preventDefault();
        newIndex = 0;
      } else if (event.key === "End") {
        event.preventDefault();
        newIndex = totalTabs - 1;
      } else {
        return;
      }
      onTabSelect(newIndex);
    },
    [totalTabs, onTabSelect]
  );
  return { activeTab, setActiveTab, setTabRef, onTabClick, handleKeyboard, getTabId };
}
var init_use_tabs = __esm({
  "node_modules/@redocly/theme/src/core/hooks/use-tabs.ts"() {
  }
});

// node_modules/@redocly/theme/src/core/hooks/use-language-picker.ts
function useLanguagePicker() {
  const { useL10nConfig, usePreloadHistory } = useThemeHooks();
  const history = usePreloadHistory();
  const { currentLocale, locales, defaultLocale } = useL10nConfig();
  const locale = locales.find((l2) => l2.code === currentLocale);
  function setLocale(value) {
    const newLangPathname = withPathPrefix(
      getPathnameForLocale(location.pathname, defaultLocale, value, locales)
    );
    const newUrlWithLanguage = `${newLangPathname}${location.search}${location.hash}`;
    history.push(newUrlWithLanguage);
  }
  return {
    currentLocale: locale,
    locales,
    setLocale
  };
}
var init_use_language_picker = __esm({
  "node_modules/@redocly/theme/src/core/hooks/use-language-picker.ts"() {
    init_hooks();
    init_utils();
  }
});

// node_modules/@redocly/theme/src/core/hooks/use-product-picker.ts
function useProductPicker() {
  const { useCurrentProduct, useProducts, usePreloadHistory, useTelemetry } = useThemeHooks();
  const currentProduct = useCurrentProduct();
  const products = useProducts();
  const telemetry = useTelemetry();
  const history = usePreloadHistory();
  function setProduct(product) {
    if (!product)
      return;
    telemetry.send("product_picked", { product: product.slug });
    history.push(product.link);
  }
  return {
    currentProduct,
    products,
    setProduct
  };
}
var init_use_product_picker = __esm({
  "node_modules/@redocly/theme/src/core/hooks/use-product-picker.ts"() {
    init_hooks();
  }
});

// node_modules/hotkeys-js/dist/hotkeys.esm.js
function addEvent(object, event, method, useCapture) {
  if (object.addEventListener) {
    object.addEventListener(event, method, useCapture);
  } else if (object.attachEvent) {
    object.attachEvent("on".concat(event), function() {
      method(window.event);
    });
  }
}
function getMods(modifier, key) {
  var mods = key.slice(0, key.length - 1);
  for (var i2 = 0; i2 < mods.length; i2++) {
    mods[i2] = modifier[mods[i2].toLowerCase()];
  }
  return mods;
}
function getKeys(key) {
  if (typeof key !== "string")
    key = "";
  key = key.replace(/\s/g, "");
  var keys = key.split(",");
  var index = keys.lastIndexOf("");
  for (; index >= 0; ) {
    keys[index - 1] += ",";
    keys.splice(index, 1);
    index = keys.lastIndexOf("");
  }
  return keys;
}
function compareArray(a1, a2) {
  var arr1 = a1.length >= a2.length ? a1 : a2;
  var arr2 = a1.length >= a2.length ? a2 : a1;
  var isIndex = true;
  for (var i2 = 0; i2 < arr1.length; i2++) {
    if (arr2.indexOf(arr1[i2]) === -1)
      isIndex = false;
  }
  return isIndex;
}
function setScope(scope) {
  _scope = scope || "all";
}
function getScope() {
  return _scope || "all";
}
function getPressedKeyCodes() {
  return _downKeys.slice(0);
}
function getPressedKeyString() {
  return _downKeys.map(function(c2) {
    return getKey(c2) || getModifier(c2) || String.fromCharCode(c2);
  });
}
function filter(event) {
  var target = event.target || event.srcElement;
  var tagName = target.tagName;
  var flag = true;
  if (target.isContentEditable || (tagName === "INPUT" || tagName === "TEXTAREA" || tagName === "SELECT") && !target.readOnly) {
    flag = false;
  }
  return flag;
}
function isPressed(keyCode) {
  if (typeof keyCode === "string") {
    keyCode = code(keyCode);
  }
  return _downKeys.indexOf(keyCode) !== -1;
}
function deleteScope(scope, newScope) {
  var handlers;
  var i2;
  if (!scope)
    scope = getScope();
  for (var key in _handlers) {
    if (Object.prototype.hasOwnProperty.call(_handlers, key)) {
      handlers = _handlers[key];
      for (i2 = 0; i2 < handlers.length; ) {
        if (handlers[i2].scope === scope)
          handlers.splice(i2, 1);
        else
          i2++;
      }
    }
  }
  if (getScope() === scope)
    setScope(newScope || "all");
}
function clearModifier(event) {
  var key = event.keyCode || event.which || event.charCode;
  var i2 = _downKeys.indexOf(key);
  if (i2 >= 0) {
    _downKeys.splice(i2, 1);
  }
  if (event.key && event.key.toLowerCase() === "meta") {
    _downKeys.splice(0, _downKeys.length);
  }
  if (key === 93 || key === 224)
    key = 91;
  if (key in _mods) {
    _mods[key] = false;
    for (var k2 in _modifier) {
      if (_modifier[k2] === key)
        hotkeys[k2] = false;
    }
  }
}
function unbind(keysInfo) {
  if (typeof keysInfo === "undefined") {
    Object.keys(_handlers).forEach(function(key) {
      return delete _handlers[key];
    });
  } else if (Array.isArray(keysInfo)) {
    keysInfo.forEach(function(info) {
      if (info.key)
        eachUnbind(info);
    });
  } else if (typeof keysInfo === "object") {
    if (keysInfo.key)
      eachUnbind(keysInfo);
  } else if (typeof keysInfo === "string") {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    var scope = args[0], method = args[1];
    if (typeof scope === "function") {
      method = scope;
      scope = "";
    }
    eachUnbind({
      key: keysInfo,
      scope,
      method,
      splitKey: "+"
    });
  }
}
function eventHandler(event, handler, scope, element) {
  if (handler.element !== element) {
    return;
  }
  var modifiersMatch;
  if (handler.scope === scope || handler.scope === "all") {
    modifiersMatch = handler.mods.length > 0;
    for (var y2 in _mods) {
      if (Object.prototype.hasOwnProperty.call(_mods, y2)) {
        if (!_mods[y2] && handler.mods.indexOf(+y2) > -1 || _mods[y2] && handler.mods.indexOf(+y2) === -1) {
          modifiersMatch = false;
        }
      }
    }
    if (handler.mods.length === 0 && !_mods[16] && !_mods[18] && !_mods[17] && !_mods[91] || modifiersMatch || handler.shortcut === "*") {
      if (handler.method(event, handler) === false) {
        if (event.preventDefault)
          event.preventDefault();
        else
          event.returnValue = false;
        if (event.stopPropagation)
          event.stopPropagation();
        if (event.cancelBubble)
          event.cancelBubble = true;
      }
    }
  }
}
function dispatch(event, element) {
  var asterisk = _handlers["*"];
  var key = event.keyCode || event.which || event.charCode;
  if (!hotkeys.filter.call(this, event))
    return;
  if (key === 93 || key === 224)
    key = 91;
  if (_downKeys.indexOf(key) === -1 && key !== 229)
    _downKeys.push(key);
  ["ctrlKey", "altKey", "shiftKey", "metaKey"].forEach(function(keyName) {
    var keyNum = modifierMap[keyName];
    if (event[keyName] && _downKeys.indexOf(keyNum) === -1) {
      _downKeys.push(keyNum);
    } else if (!event[keyName] && _downKeys.indexOf(keyNum) > -1) {
      _downKeys.splice(_downKeys.indexOf(keyNum), 1);
    } else if (keyName === "metaKey" && event[keyName] && _downKeys.length === 3) {
      if (!(event.ctrlKey || event.shiftKey || event.altKey)) {
        _downKeys = _downKeys.slice(_downKeys.indexOf(keyNum));
      }
    }
  });
  if (key in _mods) {
    _mods[key] = true;
    for (var k2 in _modifier) {
      if (_modifier[k2] === key)
        hotkeys[k2] = true;
    }
    if (!asterisk)
      return;
  }
  for (var e2 in _mods) {
    if (Object.prototype.hasOwnProperty.call(_mods, e2)) {
      _mods[e2] = event[modifierMap[e2]];
    }
  }
  if (event.getModifierState && !(event.altKey && !event.ctrlKey) && event.getModifierState("AltGraph")) {
    if (_downKeys.indexOf(17) === -1) {
      _downKeys.push(17);
    }
    if (_downKeys.indexOf(18) === -1) {
      _downKeys.push(18);
    }
    _mods[17] = true;
    _mods[18] = true;
  }
  var scope = getScope();
  if (asterisk) {
    for (var i2 = 0; i2 < asterisk.length; i2++) {
      if (asterisk[i2].scope === scope && (event.type === "keydown" && asterisk[i2].keydown || event.type === "keyup" && asterisk[i2].keyup)) {
        eventHandler(event, asterisk[i2], scope, element);
      }
    }
  }
  if (!(key in _handlers))
    return;
  for (var _i = 0; _i < _handlers[key].length; _i++) {
    if (event.type === "keydown" && _handlers[key][_i].keydown || event.type === "keyup" && _handlers[key][_i].keyup) {
      if (_handlers[key][_i].key) {
        var record = _handlers[key][_i];
        var splitKey = record.splitKey;
        var keyShortcut = record.key.split(splitKey);
        var _downKeysCurrent = [];
        for (var a2 = 0; a2 < keyShortcut.length; a2++) {
          _downKeysCurrent.push(code(keyShortcut[a2]));
        }
        if (_downKeysCurrent.sort().join("") === _downKeys.sort().join("")) {
          eventHandler(event, record, scope, element);
        }
      }
    }
  }
}
function isElementBind(element) {
  return elementHasBindEvent.indexOf(element) > -1;
}
function hotkeys(key, option, method) {
  _downKeys = [];
  var keys = getKeys(key);
  var mods = [];
  var scope = "all";
  var element = document;
  var i2 = 0;
  var keyup = false;
  var keydown = true;
  var splitKey = "+";
  var capture = false;
  if (method === void 0 && typeof option === "function") {
    method = option;
  }
  if (Object.prototype.toString.call(option) === "[object Object]") {
    if (option.scope)
      scope = option.scope;
    if (option.element)
      element = option.element;
    if (option.keyup)
      keyup = option.keyup;
    if (option.keydown !== void 0)
      keydown = option.keydown;
    if (option.capture !== void 0)
      capture = option.capture;
    if (typeof option.splitKey === "string")
      splitKey = option.splitKey;
  }
  if (typeof option === "string")
    scope = option;
  for (; i2 < keys.length; i2++) {
    key = keys[i2].split(splitKey);
    mods = [];
    if (key.length > 1)
      mods = getMods(_modifier, key);
    key = key[key.length - 1];
    key = key === "*" ? "*" : code(key);
    if (!(key in _handlers))
      _handlers[key] = [];
    _handlers[key].push({
      keyup,
      keydown,
      scope,
      mods,
      shortcut: keys[i2],
      method,
      key: keys[i2],
      splitKey,
      element
    });
  }
  if (typeof element !== "undefined" && !isElementBind(element) && window) {
    elementHasBindEvent.push(element);
    addEvent(element, "keydown", function(e2) {
      dispatch(e2, element);
    }, capture);
    if (!winListendFocus) {
      winListendFocus = true;
      addEvent(window, "focus", function() {
        _downKeys = [];
      }, capture);
    }
    addEvent(element, "keyup", function(e2) {
      dispatch(e2, element);
      clearModifier(e2);
    }, capture);
  }
}
function trigger(shortcut) {
  var scope = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "all";
  Object.keys(_handlers).forEach(function(key) {
    var dataList = _handlers[key].filter(function(item) {
      return item.scope === scope && item.shortcut === shortcut;
    });
    dataList.forEach(function(data) {
      if (data && data.method) {
        data.method();
      }
    });
  });
}
var isff, _keyMap, _modifier, modifierMap, _mods, _handlers, k2, _downKeys, winListendFocus, _scope, elementHasBindEvent, code, getKey, getModifier, eachUnbind, _api, a2, _hotkeys;
var init_hotkeys_esm = __esm({
  "node_modules/hotkeys-js/dist/hotkeys.esm.js"() {
    isff = typeof navigator !== "undefined" ? navigator.userAgent.toLowerCase().indexOf("firefox") > 0 : false;
    _keyMap = {
      backspace: 8,
      "\u232B": 8,
      tab: 9,
      clear: 12,
      enter: 13,
      "\u21A9": 13,
      return: 13,
      esc: 27,
      escape: 27,
      space: 32,
      left: 37,
      up: 38,
      right: 39,
      down: 40,
      del: 46,
      delete: 46,
      ins: 45,
      insert: 45,
      home: 36,
      end: 35,
      pageup: 33,
      pagedown: 34,
      capslock: 20,
      num_0: 96,
      num_1: 97,
      num_2: 98,
      num_3: 99,
      num_4: 100,
      num_5: 101,
      num_6: 102,
      num_7: 103,
      num_8: 104,
      num_9: 105,
      num_multiply: 106,
      num_add: 107,
      num_enter: 108,
      num_subtract: 109,
      num_decimal: 110,
      num_divide: 111,
      "\u21EA": 20,
      ",": 188,
      ".": 190,
      "/": 191,
      "`": 192,
      "-": isff ? 173 : 189,
      "=": isff ? 61 : 187,
      ";": isff ? 59 : 186,
      "'": 222,
      "[": 219,
      "]": 221,
      "\\": 220
    };
    _modifier = {
      // shiftKey
      "\u21E7": 16,
      shift: 16,
      // altKey
      "\u2325": 18,
      alt: 18,
      option: 18,
      // ctrlKey
      "\u2303": 17,
      ctrl: 17,
      control: 17,
      // metaKey
      "\u2318": 91,
      cmd: 91,
      command: 91
    };
    modifierMap = {
      16: "shiftKey",
      18: "altKey",
      17: "ctrlKey",
      91: "metaKey",
      shiftKey: 16,
      ctrlKey: 17,
      altKey: 18,
      metaKey: 91
    };
    _mods = {
      16: false,
      18: false,
      17: false,
      91: false
    };
    _handlers = {};
    for (k2 = 1; k2 < 20; k2++) {
      _keyMap["f".concat(k2)] = 111 + k2;
    }
    _downKeys = [];
    winListendFocus = false;
    _scope = "all";
    elementHasBindEvent = [];
    code = function code2(x2) {
      return _keyMap[x2.toLowerCase()] || _modifier[x2.toLowerCase()] || x2.toUpperCase().charCodeAt(0);
    };
    getKey = function getKey2(x2) {
      return Object.keys(_keyMap).find(function(k2) {
        return _keyMap[k2] === x2;
      });
    };
    getModifier = function getModifier2(x2) {
      return Object.keys(_modifier).find(function(k2) {
        return _modifier[k2] === x2;
      });
    };
    eachUnbind = function eachUnbind2(_ref) {
      var key = _ref.key, scope = _ref.scope, method = _ref.method, _ref$splitKey = _ref.splitKey, splitKey = _ref$splitKey === void 0 ? "+" : _ref$splitKey;
      var multipleKeys = getKeys(key);
      multipleKeys.forEach(function(originKey) {
        var unbindKeys = originKey.split(splitKey);
        var len = unbindKeys.length;
        var lastKey = unbindKeys[len - 1];
        var keyCode = lastKey === "*" ? "*" : code(lastKey);
        if (!_handlers[keyCode])
          return;
        if (!scope)
          scope = getScope();
        var mods = len > 1 ? getMods(_modifier, unbindKeys) : [];
        _handlers[keyCode] = _handlers[keyCode].filter(function(record) {
          var isMatchingMethod = method ? record.method === method : true;
          return !(isMatchingMethod && record.scope === scope && compareArray(record.mods, mods));
        });
      });
    };
    _api = {
      getPressedKeyString,
      setScope,
      getScope,
      deleteScope,
      getPressedKeyCodes,
      isPressed,
      filter,
      trigger,
      unbind,
      keyMap: _keyMap,
      modifier: _modifier,
      modifierMap
    };
    for (a2 in _api) {
      if (Object.prototype.hasOwnProperty.call(_api, a2)) {
        hotkeys[a2] = _api[a2];
      }
    }
    if (typeof window !== "undefined") {
      _hotkeys = window.hotkeys;
      hotkeys.noConflict = function(deep) {
        if (deep && window.hotkeys === hotkeys) {
          window.hotkeys = _hotkeys;
        }
        return hotkeys;
      };
      window.hotkeys = hotkeys;
    }
  }
});

// node_modules/@redocly/theme/src/core/hooks/search/use-search-dialog.ts
import { useEffect as useEffect15, useCallback as useCallback8, useState as useState13 } from "react";
import { useLocation as useLocation6 } from "react-router-dom";
function useSearchDialog() {
  const [isOpen, setIsOpen] = useState13(false);
  const themeSettings = useThemeConfig();
  const location2 = useLocation6();
  const { useTelemetry } = useThemeHooks();
  const telemetry = useTelemetry();
  const keyShortcuts = themeSettings?.search?.shortcuts ?? ["/"];
  const hotKeys = keyShortcuts?.join(",");
  useEffect15(() => {
    if (hotKeys) {
      hotkeys(hotKeys, (ev) => {
        setIsOpen(true);
        telemetry.send("search_opened", { method: "shortcut" });
        ev.preventDefault();
      });
      return () => hotkeys.unbind(hotKeys);
    }
  }, [hotKeys]);
  const onOpen = useCallback8(function() {
    telemetry.send("search_opened", { method: "click" });
    setIsOpen(true);
  }, []);
  const onClose = useCallback8(() => {
    setIsOpen(false);
  }, []);
  useEffect15(onClose, [location2]);
  return { isOpen, onOpen, onClose };
}
var init_use_search_dialog = __esm({
  "node_modules/@redocly/theme/src/core/hooks/search/use-search-dialog.ts"() {
    init_hotkeys_esm();
    init_hooks();
  }
});

// node_modules/@redocly/theme/src/core/hooks/search/use-search-filter.ts
import { useCallback as useCallback9, useState as useState14 } from "react";
function useSearchFilter(filter2, setFilter) {
  const [isFilterOpen, setIsFilterOpen] = useState14(false);
  const onFilterToggle = useCallback9(() => {
    setIsFilterOpen(!isFilterOpen);
  }, [isFilterOpen]);
  const onFilterChange = (field, value, isTop) => {
    const values = value ? Array.isArray(value) ? value : [value] : [];
    const _filter = [...filter2];
    const fieldIndex = _filter.findIndex((filter3) => filter3.field === field);
    if (fieldIndex > -1) {
      _filter[fieldIndex].values = values;
    } else {
      if (!values.length)
        return;
      _filter.push({ field, values, isTop });
    }
    setFilter(_filter.filter((item) => item.values.length));
  };
  const onFilterReset = () => {
    setFilter([]);
  };
  const onTopFacetsReset = () => {
    const _filter = [...filter2];
    setFilter(_filter.filter((item) => !item.isTop));
  };
  const onFacetReset = (field) => {
    const _filter = [...filter2];
    const fieldIndex = _filter.findIndex((filter3) => filter3.field === field);
    if (fieldIndex !== -1) {
      _filter[fieldIndex].values = [];
    }
    setFilter(_filter.filter((item) => item.values.length));
  };
  return {
    onFacetReset,
    onTopFacetsReset,
    onFilterChange,
    onFilterReset,
    onFilterToggle,
    isFilterOpen
  };
}
var init_use_search_filter = __esm({
  "node_modules/@redocly/theme/src/core/hooks/search/use-search-filter.ts"() {
  }
});

// node_modules/@redocly/theme/src/core/hooks/use-controlled-state.ts
import { useState as useState15, useCallback as useCallback10 } from "react";
function useControlledState(initialState, controlledValue) {
  const [state, setState] = useState15(initialState);
  const isControlled = controlledValue !== void 0;
  const value = isControlled ? controlledValue : state;
  const setValue = useCallback10(
    (newValue) => {
      if (!isControlled) {
        setState(newValue);
      }
    },
    [isControlled]
  );
  return [value, setValue];
}
var init_use_controlled_state = __esm({
  "node_modules/@redocly/theme/src/core/hooks/use-controlled-state.ts"() {
  }
});

// node_modules/@redocly/theme/src/core/hooks/use-codeblock-tabs-controls.ts
import { useEffect as useEffect16, useState as useState16, useCallback as useCallback11, useMemo as useMemo4 } from "react";
function useCodeBlockTabsControls({ tabs, containerRef, tabRefs }) {
  const [showControls, setShowControls] = useState16(false);
  const tabsWidth = useMemo4(
    () => tabRefs?.current?.reduce((acc, tabRef) => {
      return tabRef ? acc + tabRef.offsetWidth : acc;
    }, 0) || 0,
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [tabRefs?.current?.length]
  );
  const { currentIndex, isFirstTab, isLastTab } = useMemo4(() => {
    const currentIndex2 = tabs.files.findIndex((file) => file.name === tabs.activeTabName);
    return {
      currentIndex: currentIndex2,
      isFirstTab: currentIndex2 === 0,
      isLastTab: currentIndex2 === tabs.files.length - 1
    };
  }, [tabs]);
  useEffect16(() => {
    if (containerRef.current) {
      const container = containerRef.current;
      const resizeObserver = new ResizeObserver((entries) => {
        const containerWidth = entries[0].contentRect.width;
        setShowControls(tabsWidth > containerWidth);
      });
      resizeObserver.observe(container);
      return () => {
        resizeObserver.unobserve(container);
      };
    }
  }, [containerRef.current]);
  const handlePrevTab = useCallback11(() => {
    if (!isFirstTab) {
      const prevTab = tabs.files[currentIndex - 1].name;
      tabs.handleTabSwitch(prevTab);
    }
  }, [currentIndex]);
  const handleNextTab = useCallback11(() => {
    if (!isLastTab) {
      const nextTab = tabs.files[currentIndex + 1].name;
      tabs.handleTabSwitch(nextTab);
    }
  }, [currentIndex]);
  return { showControls, handlePrevTab, handleNextTab };
}
var init_use_codeblock_tabs_controls = __esm({
  "node_modules/@redocly/theme/src/core/hooks/use-codeblock-tabs-controls.ts"() {
  }
});

// node_modules/@redocly/theme/src/core/hooks/index.ts
var init_hooks = __esm({
  "node_modules/@redocly/theme/src/core/hooks/index.ts"() {
    init_use_theme_config();
    init_use_control();
    init_use_mount();
    init_use_unmount();
    init_use_active_heading();
    init_use_active_section_id();
    init_use_dialog_hotkeys();
    init_use_full_height();
    init_use_navbar_height();
    init_use_outside_click();
    init_use_theme_hooks();
    init_use_mobile_menu();
    init_use_modal_scroll_lock();
    init_use_color_switcher();
    init_use_recent_searches();
    init_use_suggested_pages();
    init_use_nested_menu();
    init_use_menu_item_expanded();
    init_use_mobile_menu_items();
    init_use_mobile_menu_levels();
    init_use_collapse();
    init_use_report_dialog();
    init_use_tabs();
    init_use_focus_trap();
    init_use_language_picker();
    init_use_product_picker();
    init_use_search_dialog();
    init_use_search_filter();
    init_use_controlled_state();
    init_use_codeblock_tabs_controls();
  }
});

export {
  fe,
  Ne,
  He,
  $e,
  Ue,
  styled_components_esm_default,
  styled_components_esm_exports,
  init_styled_components_esm,
  require_copy_to_clipboard,
  ClipboardService,
  getCssColorVariable,
  addLineNumbers,
  breakpoints,
  init_media_css,
  getTypographyCssRulesByComponentName,
  typography,
  generateCodeBlockTokens,
  init_theme_helpers,
  concatClassNames,
  isEmptyArray,
  isPrimitive,
  stringToHslColor,
  DEFAULT_LOCALE_PLACEHOLDER,
  FEEDBACK_TYPES,
  DEFAULT_FEEDBACK_TYPE,
  MenuItemType,
  MobileMenuType,
  SecurityVariablesEnvSuffix,
  init_constants,
  combineUrls,
  withPathPrefix,
  withoutPathPrefix,
  withoutHash,
  getPathPrefix,
  normalizePathPrefix,
  addLeadingSlash,
  removeTrailingSlash,
  removeLeadingSlash,
  isPathInFolder,
  slash,
  addTrailingSlash,
  getPathnameForLocale,
  getLocaleFromPathname,
  findDeepFirst,
  toStringIfDefined,
  isBrowser,
  slug,
  capitalize,
  IS_BROWSER,
  onDocumentReady,
  isTag,
  parseSrcSet,
  isUndefined,
  isNull,
  isString,
  isNotNull,
  isObject,
  isNavLinkItem,
  isFromToSelectedOptions,
  getDisplayedHeadings,
  getDisplayedHeadingsIds,
  getLeastDepth,
  mapNavbarItems,
  isItemActive,
  buildLanguagesGroup,
  buildVersionSection,
  getMenuItemType,
  loadAndNavigate,
  getScorecardColorVariable,
  changeTextCasing,
  formatDateWithoutTimeZone,
  extendDetailsBehaviour,
  getNavbarElement,
  require_nprogress,
  withLoadProgress,
  trimText,
  init_utils,
  ThemeDataContext,
  init_contexts,
  useThemeConfig,
  useControl,
  useMount,
  useUnmount,
  useActiveHeading,
  useActiveSectionId,
  useDialogHotKeys,
  useFullHeight,
  useNavbarHeight,
  useOutsideClick,
  useThemeHooks,
  useMobileMenu,
  useModalScrollLock,
  useColorSwitcher,
  useRecentSearches,
  useSuggestedPages,
  useNestedMenu,
  useMenuItemExpanded,
  useMobileMenuItems,
  useMobileMenuLevels,
  useCollapse,
  getAutoHeightDuration,
  getElementHeight,
  setAnimationTimeout,
  clearAnimationTimeout,
  useEvent,
  useReportDialog,
  useTabs,
  useFocusTrap,
  useLanguagePicker,
  useProductPicker,
  useSearchDialog,
  useSearchFilter,
  useControlledState,
  useCodeBlockTabsControls,
  init_hooks
};
/*! Bundled license information:

react-is/cjs/react-is.development.js:
  (**
   * @license React
   * react-is.development.js
   *
   * Copyright (c) Meta Platforms, Inc. and affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-is/cjs/react-is.development.js:
  (** @license React v16.13.1
   * react-is.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

nprogress/nprogress.js:
  (* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
   * @license MIT *)
*/
