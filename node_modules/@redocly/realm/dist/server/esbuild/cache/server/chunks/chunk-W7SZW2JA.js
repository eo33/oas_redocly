import { createRequire as topLevelCreateRequire } from 'module';
 const require = topLevelCreateRequire(import.meta.url);
import {
  require_cjs
} from "./chunk-LGQQW4UX.js";
import {
  AfterOpenApiOperation,
  AfterOpenApiTitle,
  Badge,
  BeforeOpenApiOperation,
  CircleDashIcon,
  CodeBlock,
  CopyButton,
  DocumentIcon,
  DownloadIcon,
  EmailButton,
  FileIcon,
  GlobalStyle,
  H1,
  H3,
  JsonIcon,
  JsonViewer,
  LinkIcon,
  MaximizeIcon,
  Menu,
  NewTabButton,
  OpenApiFooter,
  OpenApiHeader,
  OverflowMenuVerticalIcon,
  Panel,
  PanelBody,
  PanelHeader,
  PanelHeaderTitle,
  Portal,
  RocketIcon,
  SecurityIcon,
  Segmented,
  SidebarActions,
  SidebarLogo,
  StatusCode,
  Tag as Tag2,
  ThreePanelLayout,
  Typography,
  ast_default,
  default_exports2 as default_exports,
  init_dist,
  init_src,
  parse3,
  renderers_default,
  transform2,
  typedMemo
} from "./chunk-EAFIJ2VV.js";
import {
  Feedback,
  Markdown,
  markdownLinksCss
} from "./chunk-AB7LF64Z.js";
import {
  CheckmarkIcon,
  ChevronDownIcon,
  CloseIcon,
  Dropdown,
  DropdownMenu,
  DropdownMenuItem,
  H2,
  Tag
} from "./chunk-2J7OHCSZ.js";
import {
  Button
} from "./chunk-SX3NFZJN.js";
import {
  $e,
  IS_BROWSER,
  Ne,
  addLeadingSlash,
  addTrailingSlash,
  breakpoints,
  init_styled_components_esm,
  isNotNull,
  isObject,
  isPrimitive,
  isString,
  isUndefined,
  removeLeadingSlash,
  styled_components_esm_default,
  useActiveSectionId,
  useFocusTrap,
  useModalScrollLock,
  useMount,
  useOutsideClick,
  useThemeHooks,
  useUnmount
} from "./chunk-WNBJGIID.js";
import {
  LayoutVariant,
  REDOCLY_TEAMS_RBAC,
  init_lib_esm
} from "./chunk-R4PATEVC.js";
import {
  __commonJS,
  __require,
  __toESM
} from "./chunk-35AYGKFE.js";

// node_modules/foreach/index.js
var require_foreach = __commonJS({
  "node_modules/foreach/index.js"(exports, module) {
    var hasOwn = Object.prototype.hasOwnProperty;
    var toString2 = Object.prototype.toString;
    module.exports = function forEach(obj, fn, ctx) {
      if (toString2.call(fn) !== "[object Function]") {
        throw new TypeError("iterator must be a function");
      }
      var l = obj.length;
      if (l === +l) {
        for (var i2 = 0; i2 < l; i2++) {
          fn.call(ctx, obj[i2], i2, obj);
        }
      } else {
        for (var k in obj) {
          if (hasOwn.call(obj, k)) {
            fn.call(ctx, obj[k], k, obj);
          }
        }
      }
    };
  }
});

// node_modules/json-pointer/index.js
var require_json_pointer = __commonJS({
  "node_modules/json-pointer/index.js"(exports, module) {
    "use strict";
    var each = require_foreach();
    module.exports = api;
    function api(obj, pointer, value) {
      if (arguments.length === 3) {
        return api.set(obj, pointer, value);
      }
      if (arguments.length === 2) {
        return api.get(obj, pointer);
      }
      var wrapped = api.bind(api, obj);
      for (var name in api) {
        if (api.hasOwnProperty(name)) {
          wrapped[name] = api[name].bind(wrapped, obj);
        }
      }
      return wrapped;
    }
    api.get = function get(obj, pointer) {
      var refTokens = Array.isArray(pointer) ? pointer : api.parse(pointer);
      for (var i2 = 0; i2 < refTokens.length; ++i2) {
        var tok = refTokens[i2];
        if (!(typeof obj == "object" && tok in obj)) {
          throw new Error("Invalid reference token: " + tok);
        }
        obj = obj[tok];
      }
      return obj;
    };
    api.set = function set(obj, pointer, value) {
      var refTokens = Array.isArray(pointer) ? pointer : api.parse(pointer), nextTok = refTokens[0];
      if (refTokens.length === 0) {
        throw Error("Can not set the root object");
      }
      for (var i2 = 0; i2 < refTokens.length - 1; ++i2) {
        var tok = refTokens[i2];
        if (typeof tok !== "string" && typeof tok !== "number") {
          tok = String(tok);
        }
        if (tok === "__proto__" || tok === "constructor" || tok === "prototype") {
          continue;
        }
        if (tok === "-" && Array.isArray(obj)) {
          tok = obj.length;
        }
        nextTok = refTokens[i2 + 1];
        if (!(tok in obj)) {
          if (nextTok.match(/^(\d+|-)$/)) {
            obj[tok] = [];
          } else {
            obj[tok] = {};
          }
        }
        obj = obj[tok];
      }
      if (nextTok === "-" && Array.isArray(obj)) {
        nextTok = obj.length;
      }
      obj[nextTok] = value;
      return this;
    };
    api.remove = function(obj, pointer) {
      var refTokens = Array.isArray(pointer) ? pointer : api.parse(pointer);
      var finalToken = refTokens[refTokens.length - 1];
      if (finalToken === void 0) {
        throw new Error('Invalid JSON pointer for remove: "' + pointer + '"');
      }
      var parent = api.get(obj, refTokens.slice(0, -1));
      if (Array.isArray(parent)) {
        var index = +finalToken;
        if (finalToken === "" && isNaN(index)) {
          throw new Error('Invalid array index: "' + finalToken + '"');
        }
        Array.prototype.splice.call(parent, index, 1);
      } else {
        delete parent[finalToken];
      }
    };
    api.dict = function dict(obj, descend) {
      var results = {};
      api.walk(obj, function(value, pointer) {
        results[pointer] = value;
      }, descend);
      return results;
    };
    api.walk = function walk(obj, iterator, descend) {
      var refTokens = [];
      descend = descend || function(value) {
        var type = Object.prototype.toString.call(value);
        return type === "[object Object]" || type === "[object Array]";
      };
      (function next(cur) {
        each(cur, function(value, key2) {
          refTokens.push(String(key2));
          if (descend(value)) {
            next(value);
          } else {
            iterator(value, api.compile(refTokens));
          }
          refTokens.pop();
        });
      })(obj);
    };
    api.has = function has(obj, pointer) {
      try {
        api.get(obj, pointer);
      } catch (e2) {
        return false;
      }
      return true;
    };
    api.escape = function escape2(str) {
      return str.toString().replace(/~/g, "~0").replace(/\//g, "~1");
    };
    api.unescape = function unescape(str) {
      return str.replace(/~1/g, "/").replace(/~0/g, "~");
    };
    api.parse = function parse4(pointer) {
      if (pointer === "") {
        return [];
      }
      if (pointer.charAt(0) !== "/") {
        throw new Error("Invalid JSON pointer: " + pointer);
      }
      return pointer.substring(1).split(/\//).map(api.unescape);
    };
    api.compile = function compile(refTokens) {
      if (refTokens.length === 0) {
        return "";
      }
      return "/" + refTokens.map(api.escape).join("/");
    };
  }
});

// node_modules/url-template/lib/url-template.js
var require_url_template = __commonJS({
  "node_modules/url-template/lib/url-template.js"(exports, module) {
    (function(root, factory) {
      if (typeof exports === "object") {
        module.exports = factory();
      } else if (typeof define === "function" && define.amd) {
        define([], factory);
      } else {
        root.urltemplate = factory();
      }
    })(exports, function() {
      function UrlTemplate2() {
      }
      UrlTemplate2.prototype.encodeReserved = function(str) {
        return str.split(/(%[0-9A-Fa-f]{2})/g).map(function(part) {
          if (!/%[0-9A-Fa-f]/.test(part)) {
            part = encodeURI(part).replace(/%5B/g, "[").replace(/%5D/g, "]");
          }
          return part;
        }).join("");
      };
      UrlTemplate2.prototype.encodeUnreserved = function(str) {
        return encodeURIComponent(str).replace(/[!'()*]/g, function(c) {
          return "%" + c.charCodeAt(0).toString(16).toUpperCase();
        });
      };
      UrlTemplate2.prototype.encodeValue = function(operator, value, key2) {
        value = operator === "+" || operator === "#" ? this.encodeReserved(value) : this.encodeUnreserved(value);
        if (key2) {
          return this.encodeUnreserved(key2) + "=" + value;
        } else {
          return value;
        }
      };
      UrlTemplate2.prototype.isDefined = function(value) {
        return value !== void 0 && value !== null;
      };
      UrlTemplate2.prototype.isKeyOperator = function(operator) {
        return operator === ";" || operator === "&" || operator === "?";
      };
      UrlTemplate2.prototype.getValues = function(context, operator, key2, modifier) {
        var value = context[key2], result = [];
        if (this.isDefined(value) && value !== "") {
          if (typeof value === "string" || typeof value === "number" || typeof value === "boolean") {
            value = value.toString();
            if (modifier && modifier !== "*") {
              value = value.substring(0, parseInt(modifier, 10));
            }
            result.push(this.encodeValue(operator, value, this.isKeyOperator(operator) ? key2 : null));
          } else {
            if (modifier === "*") {
              if (Array.isArray(value)) {
                value.filter(this.isDefined).forEach(function(value2) {
                  result.push(this.encodeValue(operator, value2, this.isKeyOperator(operator) ? key2 : null));
                }, this);
              } else {
                Object.keys(value).forEach(function(k) {
                  if (this.isDefined(value[k])) {
                    result.push(this.encodeValue(operator, value[k], k));
                  }
                }, this);
              }
            } else {
              var tmp = [];
              if (Array.isArray(value)) {
                value.filter(this.isDefined).forEach(function(value2) {
                  tmp.push(this.encodeValue(operator, value2));
                }, this);
              } else {
                Object.keys(value).forEach(function(k) {
                  if (this.isDefined(value[k])) {
                    tmp.push(this.encodeUnreserved(k));
                    tmp.push(this.encodeValue(operator, value[k].toString()));
                  }
                }, this);
              }
              if (this.isKeyOperator(operator)) {
                result.push(this.encodeUnreserved(key2) + "=" + tmp.join(","));
              } else if (tmp.length !== 0) {
                result.push(tmp.join(","));
              }
            }
          }
        } else {
          if (operator === ";") {
            if (this.isDefined(value)) {
              result.push(this.encodeUnreserved(key2));
            }
          } else if (value === "" && (operator === "&" || operator === "?")) {
            result.push(this.encodeUnreserved(key2) + "=");
          } else if (value === "") {
            result.push("");
          }
        }
        return result;
      };
      UrlTemplate2.prototype.parse = function(template) {
        var that = this;
        var operators = ["+", "#", ".", "/", ";", "?", "&"];
        return {
          expand: function(context) {
            return template.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g, function(_, expression, literal) {
              if (expression) {
                var operator = null, values = [];
                if (operators.indexOf(expression.charAt(0)) !== -1) {
                  operator = expression.charAt(0);
                  expression = expression.substr(1);
                }
                expression.split(/,/g).forEach(function(variable) {
                  var tmp = /([^:\*]*)(?::(\d+)|(\*))?/.exec(variable);
                  values.push.apply(values, that.getValues(context, operator, tmp[1], tmp[2] || tmp[3]));
                });
                if (operator && operator !== "+") {
                  var separator = ",";
                  if (operator === "?") {
                    separator = "&";
                  } else if (operator !== "#") {
                    separator = operator;
                  }
                  return (values.length !== 0 ? operator : "") + values.join(separator);
                } else {
                  return values.join(",");
                }
              } else {
                return that.encodeReserved(literal);
              }
            });
          }
        };
      };
      return new UrlTemplate2();
    });
  }
});

// node_modules/slugify/slugify.js
var require_slugify = __commonJS({
  "node_modules/slugify/slugify.js"(exports, module) {
    (function(name, root, factory) {
      if (typeof exports === "object") {
        module.exports = factory();
        module.exports["default"] = factory();
      } else if (typeof define === "function" && define.amd) {
        define(factory);
      } else {
        root[name] = factory();
      }
    })("slugify", exports, function() {
      var charMap = JSON.parse(`{"$":"dollar","%":"percent","&":"and","<":"less",">":"greater","|":"or","\xA2":"cent","\xA3":"pound","\xA4":"currency","\xA5":"yen","\xA9":"(c)","\xAA":"a","\xAE":"(r)","\xBA":"o","\xC0":"A","\xC1":"A","\xC2":"A","\xC3":"A","\xC4":"A","\xC5":"A","\xC6":"AE","\xC7":"C","\xC8":"E","\xC9":"E","\xCA":"E","\xCB":"E","\xCC":"I","\xCD":"I","\xCE":"I","\xCF":"I","\xD0":"D","\xD1":"N","\xD2":"O","\xD3":"O","\xD4":"O","\xD5":"O","\xD6":"O","\xD8":"O","\xD9":"U","\xDA":"U","\xDB":"U","\xDC":"U","\xDD":"Y","\xDE":"TH","\xDF":"ss","\xE0":"a","\xE1":"a","\xE2":"a","\xE3":"a","\xE4":"a","\xE5":"a","\xE6":"ae","\xE7":"c","\xE8":"e","\xE9":"e","\xEA":"e","\xEB":"e","\xEC":"i","\xED":"i","\xEE":"i","\xEF":"i","\xF0":"d","\xF1":"n","\xF2":"o","\xF3":"o","\xF4":"o","\xF5":"o","\xF6":"o","\xF8":"o","\xF9":"u","\xFA":"u","\xFB":"u","\xFC":"u","\xFD":"y","\xFE":"th","\xFF":"y","\u0100":"A","\u0101":"a","\u0102":"A","\u0103":"a","\u0104":"A","\u0105":"a","\u0106":"C","\u0107":"c","\u010C":"C","\u010D":"c","\u010E":"D","\u010F":"d","\u0110":"DJ","\u0111":"dj","\u0112":"E","\u0113":"e","\u0116":"E","\u0117":"e","\u0118":"e","\u0119":"e","\u011A":"E","\u011B":"e","\u011E":"G","\u011F":"g","\u0122":"G","\u0123":"g","\u0128":"I","\u0129":"i","\u012A":"i","\u012B":"i","\u012E":"I","\u012F":"i","\u0130":"I","\u0131":"i","\u0136":"k","\u0137":"k","\u013B":"L","\u013C":"l","\u013D":"L","\u013E":"l","\u0141":"L","\u0142":"l","\u0143":"N","\u0144":"n","\u0145":"N","\u0146":"n","\u0147":"N","\u0148":"n","\u014C":"O","\u014D":"o","\u0150":"O","\u0151":"o","\u0152":"OE","\u0153":"oe","\u0154":"R","\u0155":"r","\u0158":"R","\u0159":"r","\u015A":"S","\u015B":"s","\u015E":"S","\u015F":"s","\u0160":"S","\u0161":"s","\u0162":"T","\u0163":"t","\u0164":"T","\u0165":"t","\u0168":"U","\u0169":"u","\u016A":"u","\u016B":"u","\u016E":"U","\u016F":"u","\u0170":"U","\u0171":"u","\u0172":"U","\u0173":"u","\u0174":"W","\u0175":"w","\u0176":"Y","\u0177":"y","\u0178":"Y","\u0179":"Z","\u017A":"z","\u017B":"Z","\u017C":"z","\u017D":"Z","\u017E":"z","\u018F":"E","\u0192":"f","\u01A0":"O","\u01A1":"o","\u01AF":"U","\u01B0":"u","\u01C8":"LJ","\u01C9":"lj","\u01CB":"NJ","\u01CC":"nj","\u0218":"S","\u0219":"s","\u021A":"T","\u021B":"t","\u0259":"e","\u02DA":"o","\u0386":"A","\u0388":"E","\u0389":"H","\u038A":"I","\u038C":"O","\u038E":"Y","\u038F":"W","\u0390":"i","\u0391":"A","\u0392":"B","\u0393":"G","\u0394":"D","\u0395":"E","\u0396":"Z","\u0397":"H","\u0398":"8","\u0399":"I","\u039A":"K","\u039B":"L","\u039C":"M","\u039D":"N","\u039E":"3","\u039F":"O","\u03A0":"P","\u03A1":"R","\u03A3":"S","\u03A4":"T","\u03A5":"Y","\u03A6":"F","\u03A7":"X","\u03A8":"PS","\u03A9":"W","\u03AA":"I","\u03AB":"Y","\u03AC":"a","\u03AD":"e","\u03AE":"h","\u03AF":"i","\u03B0":"y","\u03B1":"a","\u03B2":"b","\u03B3":"g","\u03B4":"d","\u03B5":"e","\u03B6":"z","\u03B7":"h","\u03B8":"8","\u03B9":"i","\u03BA":"k","\u03BB":"l","\u03BC":"m","\u03BD":"n","\u03BE":"3","\u03BF":"o","\u03C0":"p","\u03C1":"r","\u03C2":"s","\u03C3":"s","\u03C4":"t","\u03C5":"y","\u03C6":"f","\u03C7":"x","\u03C8":"ps","\u03C9":"w","\u03CA":"i","\u03CB":"y","\u03CC":"o","\u03CD":"y","\u03CE":"w","\u0401":"Yo","\u0402":"DJ","\u0404":"Ye","\u0406":"I","\u0407":"Yi","\u0408":"J","\u0409":"LJ","\u040A":"NJ","\u040B":"C","\u040F":"DZ","\u0410":"A","\u0411":"B","\u0412":"V","\u0413":"G","\u0414":"D","\u0415":"E","\u0416":"Zh","\u0417":"Z","\u0418":"I","\u0419":"J","\u041A":"K","\u041B":"L","\u041C":"M","\u041D":"N","\u041E":"O","\u041F":"P","\u0420":"R","\u0421":"S","\u0422":"T","\u0423":"U","\u0424":"F","\u0425":"H","\u0426":"C","\u0427":"Ch","\u0428":"Sh","\u0429":"Sh","\u042A":"U","\u042B":"Y","\u042C":"","\u042D":"E","\u042E":"Yu","\u042F":"Ya","\u0430":"a","\u0431":"b","\u0432":"v","\u0433":"g","\u0434":"d","\u0435":"e","\u0436":"zh","\u0437":"z","\u0438":"i","\u0439":"j","\u043A":"k","\u043B":"l","\u043C":"m","\u043D":"n","\u043E":"o","\u043F":"p","\u0440":"r","\u0441":"s","\u0442":"t","\u0443":"u","\u0444":"f","\u0445":"h","\u0446":"c","\u0447":"ch","\u0448":"sh","\u0449":"sh","\u044A":"u","\u044B":"y","\u044C":"","\u044D":"e","\u044E":"yu","\u044F":"ya","\u0451":"yo","\u0452":"dj","\u0454":"ye","\u0456":"i","\u0457":"yi","\u0458":"j","\u0459":"lj","\u045A":"nj","\u045B":"c","\u045D":"u","\u045F":"dz","\u0490":"G","\u0491":"g","\u0492":"GH","\u0493":"gh","\u049A":"KH","\u049B":"kh","\u04A2":"NG","\u04A3":"ng","\u04AE":"UE","\u04AF":"ue","\u04B0":"U","\u04B1":"u","\u04BA":"H","\u04BB":"h","\u04D8":"AE","\u04D9":"ae","\u04E8":"OE","\u04E9":"oe","\u0531":"A","\u0532":"B","\u0533":"G","\u0534":"D","\u0535":"E","\u0536":"Z","\u0537":"E'","\u0538":"Y'","\u0539":"T'","\u053A":"JH","\u053B":"I","\u053C":"L","\u053D":"X","\u053E":"C'","\u053F":"K","\u0540":"H","\u0541":"D'","\u0542":"GH","\u0543":"TW","\u0544":"M","\u0545":"Y","\u0546":"N","\u0547":"SH","\u0549":"CH","\u054A":"P","\u054B":"J","\u054C":"R'","\u054D":"S","\u054E":"V","\u054F":"T","\u0550":"R","\u0551":"C","\u0553":"P'","\u0554":"Q'","\u0555":"O''","\u0556":"F","\u0587":"EV","\u0621":"a","\u0622":"aa","\u0623":"a","\u0624":"u","\u0625":"i","\u0626":"e","\u0627":"a","\u0628":"b","\u0629":"h","\u062A":"t","\u062B":"th","\u062C":"j","\u062D":"h","\u062E":"kh","\u062F":"d","\u0630":"th","\u0631":"r","\u0632":"z","\u0633":"s","\u0634":"sh","\u0635":"s","\u0636":"dh","\u0637":"t","\u0638":"z","\u0639":"a","\u063A":"gh","\u0641":"f","\u0642":"q","\u0643":"k","\u0644":"l","\u0645":"m","\u0646":"n","\u0647":"h","\u0648":"w","\u0649":"a","\u064A":"y","\u064B":"an","\u064C":"on","\u064D":"en","\u064E":"a","\u064F":"u","\u0650":"e","\u0652":"","\u0660":"0","\u0661":"1","\u0662":"2","\u0663":"3","\u0664":"4","\u0665":"5","\u0666":"6","\u0667":"7","\u0668":"8","\u0669":"9","\u067E":"p","\u0686":"ch","\u0698":"zh","\u06A9":"k","\u06AF":"g","\u06CC":"y","\u06F0":"0","\u06F1":"1","\u06F2":"2","\u06F3":"3","\u06F4":"4","\u06F5":"5","\u06F6":"6","\u06F7":"7","\u06F8":"8","\u06F9":"9","\u0E3F":"baht","\u10D0":"a","\u10D1":"b","\u10D2":"g","\u10D3":"d","\u10D4":"e","\u10D5":"v","\u10D6":"z","\u10D7":"t","\u10D8":"i","\u10D9":"k","\u10DA":"l","\u10DB":"m","\u10DC":"n","\u10DD":"o","\u10DE":"p","\u10DF":"zh","\u10E0":"r","\u10E1":"s","\u10E2":"t","\u10E3":"u","\u10E4":"f","\u10E5":"k","\u10E6":"gh","\u10E7":"q","\u10E8":"sh","\u10E9":"ch","\u10EA":"ts","\u10EB":"dz","\u10EC":"ts","\u10ED":"ch","\u10EE":"kh","\u10EF":"j","\u10F0":"h","\u1E62":"S","\u1E63":"s","\u1E80":"W","\u1E81":"w","\u1E82":"W","\u1E83":"w","\u1E84":"W","\u1E85":"w","\u1E9E":"SS","\u1EA0":"A","\u1EA1":"a","\u1EA2":"A","\u1EA3":"a","\u1EA4":"A","\u1EA5":"a","\u1EA6":"A","\u1EA7":"a","\u1EA8":"A","\u1EA9":"a","\u1EAA":"A","\u1EAB":"a","\u1EAC":"A","\u1EAD":"a","\u1EAE":"A","\u1EAF":"a","\u1EB0":"A","\u1EB1":"a","\u1EB2":"A","\u1EB3":"a","\u1EB4":"A","\u1EB5":"a","\u1EB6":"A","\u1EB7":"a","\u1EB8":"E","\u1EB9":"e","\u1EBA":"E","\u1EBB":"e","\u1EBC":"E","\u1EBD":"e","\u1EBE":"E","\u1EBF":"e","\u1EC0":"E","\u1EC1":"e","\u1EC2":"E","\u1EC3":"e","\u1EC4":"E","\u1EC5":"e","\u1EC6":"E","\u1EC7":"e","\u1EC8":"I","\u1EC9":"i","\u1ECA":"I","\u1ECB":"i","\u1ECC":"O","\u1ECD":"o","\u1ECE":"O","\u1ECF":"o","\u1ED0":"O","\u1ED1":"o","\u1ED2":"O","\u1ED3":"o","\u1ED4":"O","\u1ED5":"o","\u1ED6":"O","\u1ED7":"o","\u1ED8":"O","\u1ED9":"o","\u1EDA":"O","\u1EDB":"o","\u1EDC":"O","\u1EDD":"o","\u1EDE":"O","\u1EDF":"o","\u1EE0":"O","\u1EE1":"o","\u1EE2":"O","\u1EE3":"o","\u1EE4":"U","\u1EE5":"u","\u1EE6":"U","\u1EE7":"u","\u1EE8":"U","\u1EE9":"u","\u1EEA":"U","\u1EEB":"u","\u1EEC":"U","\u1EED":"u","\u1EEE":"U","\u1EEF":"u","\u1EF0":"U","\u1EF1":"u","\u1EF2":"Y","\u1EF3":"y","\u1EF4":"Y","\u1EF5":"y","\u1EF6":"Y","\u1EF7":"y","\u1EF8":"Y","\u1EF9":"y","\u2013":"-","\u2018":"'","\u2019":"'","\u201C":"\\"","\u201D":"\\"","\u201E":"\\"","\u2020":"+","\u2022":"*","\u2026":"...","\u20A0":"ecu","\u20A2":"cruzeiro","\u20A3":"french franc","\u20A4":"lira","\u20A5":"mill","\u20A6":"naira","\u20A7":"peseta","\u20A8":"rupee","\u20A9":"won","\u20AA":"new shequel","\u20AB":"dong","\u20AC":"euro","\u20AD":"kip","\u20AE":"tugrik","\u20AF":"drachma","\u20B0":"penny","\u20B1":"peso","\u20B2":"guarani","\u20B3":"austral","\u20B4":"hryvnia","\u20B5":"cedi","\u20B8":"kazakhstani tenge","\u20B9":"indian rupee","\u20BA":"turkish lira","\u20BD":"russian ruble","\u20BF":"bitcoin","\u2120":"sm","\u2122":"tm","\u2202":"d","\u2206":"delta","\u2211":"sum","\u221E":"infinity","\u2665":"love","\u5143":"yuan","\u5186":"yen","\uFDFC":"rial","\uFEF5":"laa","\uFEF7":"laa","\uFEF9":"lai","\uFEFB":"la"}`);
      var locales = JSON.parse('{"bg":{"\u0419":"Y","\u0426":"Ts","\u0429":"Sht","\u042A":"A","\u042C":"Y","\u0439":"y","\u0446":"ts","\u0449":"sht","\u044A":"a","\u044C":"y"},"de":{"\xC4":"AE","\xE4":"ae","\xD6":"OE","\xF6":"oe","\xDC":"UE","\xFC":"ue","\xDF":"ss","%":"prozent","&":"und","|":"oder","\u2211":"summe","\u221E":"unendlich","\u2665":"liebe"},"es":{"%":"por ciento","&":"y","<":"menor que",">":"mayor que","|":"o","\xA2":"centavos","\xA3":"libras","\xA4":"moneda","\u20A3":"francos","\u2211":"suma","\u221E":"infinito","\u2665":"amor"},"fr":{"%":"pourcent","&":"et","<":"plus petit",">":"plus grand","|":"ou","\xA2":"centime","\xA3":"livre","\xA4":"devise","\u20A3":"franc","\u2211":"somme","\u221E":"infini","\u2665":"amour"},"pt":{"%":"porcento","&":"e","<":"menor",">":"maior","|":"ou","\xA2":"centavo","\u2211":"soma","\xA3":"libra","\u221E":"infinito","\u2665":"amor"},"uk":{"\u0418":"Y","\u0438":"y","\u0419":"Y","\u0439":"y","\u0426":"Ts","\u0446":"ts","\u0425":"Kh","\u0445":"kh","\u0429":"Shch","\u0449":"shch","\u0413":"H","\u0433":"h"},"vi":{"\u0110":"D","\u0111":"d"},"da":{"\xD8":"OE","\xF8":"oe","\xC5":"AA","\xE5":"aa","%":"procent","&":"og","|":"eller","$":"dollar","<":"mindre end",">":"st\xF8rre end"},"nb":{"&":"og","\xC5":"AA","\xC6":"AE","\xD8":"OE","\xE5":"aa","\xE6":"ae","\xF8":"oe"},"it":{"&":"e"},"nl":{"&":"en"},"sv":{"&":"och","\xC5":"AA","\xC4":"AE","\xD6":"OE","\xE5":"aa","\xE4":"ae","\xF6":"oe"}}');
      function replace(string, options) {
        if (typeof string !== "string") {
          throw new Error("slugify: string argument expected");
        }
        options = typeof options === "string" ? { replacement: options } : options || {};
        var locale = locales[options.locale] || {};
        var replacement = options.replacement === void 0 ? "-" : options.replacement;
        var trim = options.trim === void 0 ? true : options.trim;
        var slug = string.normalize().split("").reduce(function(result, ch) {
          var appendChar = locale[ch];
          if (appendChar === void 0)
            appendChar = charMap[ch];
          if (appendChar === void 0)
            appendChar = ch;
          if (appendChar === replacement)
            appendChar = " ";
          return result + appendChar.replace(options.remove || /[^\w\s$*_+~.()'"!\-:@]+/g, "");
        }, "");
        if (options.strict) {
          slug = slug.replace(/[^A-Za-z0-9\s]/g, "");
        }
        if (trim) {
          slug = slug.trim();
        }
        slug = slug.replace(/\s+/g, replacement);
        if (options.lower) {
          slug = slug.toLowerCase();
        }
        return slug;
      }
      replace.extend = function(customMap) {
        Object.assign(charMap, customMap);
      };
      return replace;
    });
  }
});

// node_modules/fast-xml-parser/src/util.js
var require_util = __commonJS({
  "node_modules/fast-xml-parser/src/util.js"(exports) {
    "use strict";
    var nameStartChar = ":A-Za-z_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
    var nameChar = nameStartChar + "\\-.\\d\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
    var nameRegexp = "[" + nameStartChar + "][" + nameChar + "]*";
    var regexName = new RegExp("^" + nameRegexp + "$");
    var getAllMatches = function(string, regex) {
      const matches = [];
      let match = regex.exec(string);
      while (match) {
        const allmatches = [];
        allmatches.startIndex = regex.lastIndex - match[0].length;
        const len = match.length;
        for (let index = 0; index < len; index++) {
          allmatches.push(match[index]);
        }
        matches.push(allmatches);
        match = regex.exec(string);
      }
      return matches;
    };
    var isName = function(string) {
      const match = regexName.exec(string);
      return !(match === null || typeof match === "undefined");
    };
    exports.isExist = function(v) {
      return typeof v !== "undefined";
    };
    exports.isEmptyObject = function(obj) {
      return Object.keys(obj).length === 0;
    };
    exports.merge = function(target, a, arrayMode) {
      if (a) {
        const keys = Object.keys(a);
        const len = keys.length;
        for (let i2 = 0; i2 < len; i2++) {
          if (arrayMode === "strict") {
            target[keys[i2]] = [a[keys[i2]]];
          } else {
            target[keys[i2]] = a[keys[i2]];
          }
        }
      }
    };
    exports.getValue = function(v) {
      if (exports.isExist(v)) {
        return v;
      } else {
        return "";
      }
    };
    exports.isName = isName;
    exports.getAllMatches = getAllMatches;
    exports.nameRegexp = nameRegexp;
  }
});

// node_modules/fast-xml-parser/src/validator.js
var require_validator = __commonJS({
  "node_modules/fast-xml-parser/src/validator.js"(exports) {
    "use strict";
    var util2 = require_util();
    var defaultOptions2 = {
      allowBooleanAttributes: false,
      //A tag can have attributes without any value
      unpairedTags: []
    };
    exports.validate = function(xmlData, options) {
      options = Object.assign({}, defaultOptions2, options);
      const tags = [];
      let tagFound = false;
      let reachedRoot = false;
      if (xmlData[0] === "\uFEFF") {
        xmlData = xmlData.substr(1);
      }
      for (let i2 = 0; i2 < xmlData.length; i2++) {
        if (xmlData[i2] === "<" && xmlData[i2 + 1] === "?") {
          i2 += 2;
          i2 = readPI(xmlData, i2);
          if (i2.err)
            return i2;
        } else if (xmlData[i2] === "<") {
          let tagStartPos = i2;
          i2++;
          if (xmlData[i2] === "!") {
            i2 = readCommentAndCDATA(xmlData, i2);
            continue;
          } else {
            let closingTag = false;
            if (xmlData[i2] === "/") {
              closingTag = true;
              i2++;
            }
            let tagName = "";
            for (; i2 < xmlData.length && xmlData[i2] !== ">" && xmlData[i2] !== " " && xmlData[i2] !== "	" && xmlData[i2] !== "\n" && xmlData[i2] !== "\r"; i2++) {
              tagName += xmlData[i2];
            }
            tagName = tagName.trim();
            if (tagName[tagName.length - 1] === "/") {
              tagName = tagName.substring(0, tagName.length - 1);
              i2--;
            }
            if (!validateTagName(tagName)) {
              let msg;
              if (tagName.trim().length === 0) {
                msg = "Invalid space after '<'.";
              } else {
                msg = "Tag '" + tagName + "' is an invalid name.";
              }
              return getErrorObject("InvalidTag", msg, getLineNumberForPosition(xmlData, i2));
            }
            const result = readAttributeStr(xmlData, i2);
            if (result === false) {
              return getErrorObject("InvalidAttr", "Attributes for '" + tagName + "' have open quote.", getLineNumberForPosition(xmlData, i2));
            }
            let attrStr = result.value;
            i2 = result.index;
            if (attrStr[attrStr.length - 1] === "/") {
              const attrStrStart = i2 - attrStr.length;
              attrStr = attrStr.substring(0, attrStr.length - 1);
              const isValid = validateAttributeString(attrStr, options);
              if (isValid === true) {
                tagFound = true;
              } else {
                return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, attrStrStart + isValid.err.line));
              }
            } else if (closingTag) {
              if (!result.tagClosed) {
                return getErrorObject("InvalidTag", "Closing tag '" + tagName + "' doesn't have proper closing.", getLineNumberForPosition(xmlData, i2));
              } else if (attrStr.trim().length > 0) {
                return getErrorObject("InvalidTag", "Closing tag '" + tagName + "' can't have attributes or invalid starting.", getLineNumberForPosition(xmlData, tagStartPos));
              } else if (tags.length === 0) {
                return getErrorObject("InvalidTag", "Closing tag '" + tagName + "' has not been opened.", getLineNumberForPosition(xmlData, tagStartPos));
              } else {
                const otg = tags.pop();
                if (tagName !== otg.tagName) {
                  let openPos = getLineNumberForPosition(xmlData, otg.tagStartPos);
                  return getErrorObject(
                    "InvalidTag",
                    "Expected closing tag '" + otg.tagName + "' (opened in line " + openPos.line + ", col " + openPos.col + ") instead of closing tag '" + tagName + "'.",
                    getLineNumberForPosition(xmlData, tagStartPos)
                  );
                }
                if (tags.length == 0) {
                  reachedRoot = true;
                }
              }
            } else {
              const isValid = validateAttributeString(attrStr, options);
              if (isValid !== true) {
                return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i2 - attrStr.length + isValid.err.line));
              }
              if (reachedRoot === true) {
                return getErrorObject("InvalidXml", "Multiple possible root nodes found.", getLineNumberForPosition(xmlData, i2));
              } else if (options.unpairedTags.indexOf(tagName) !== -1) {
              } else {
                tags.push({ tagName, tagStartPos });
              }
              tagFound = true;
            }
            for (i2++; i2 < xmlData.length; i2++) {
              if (xmlData[i2] === "<") {
                if (xmlData[i2 + 1] === "!") {
                  i2++;
                  i2 = readCommentAndCDATA(xmlData, i2);
                  continue;
                } else if (xmlData[i2 + 1] === "?") {
                  i2 = readPI(xmlData, ++i2);
                  if (i2.err)
                    return i2;
                } else {
                  break;
                }
              } else if (xmlData[i2] === "&") {
                const afterAmp = validateAmpersand(xmlData, i2);
                if (afterAmp == -1)
                  return getErrorObject("InvalidChar", "char '&' is not expected.", getLineNumberForPosition(xmlData, i2));
                i2 = afterAmp;
              } else {
                if (reachedRoot === true && !isWhiteSpace(xmlData[i2])) {
                  return getErrorObject("InvalidXml", "Extra text at the end", getLineNumberForPosition(xmlData, i2));
                }
              }
            }
            if (xmlData[i2] === "<") {
              i2--;
            }
          }
        } else {
          if (isWhiteSpace(xmlData[i2])) {
            continue;
          }
          return getErrorObject("InvalidChar", "char '" + xmlData[i2] + "' is not expected.", getLineNumberForPosition(xmlData, i2));
        }
      }
      if (!tagFound) {
        return getErrorObject("InvalidXml", "Start tag expected.", 1);
      } else if (tags.length == 1) {
        return getErrorObject("InvalidTag", "Unclosed tag '" + tags[0].tagName + "'.", getLineNumberForPosition(xmlData, tags[0].tagStartPos));
      } else if (tags.length > 0) {
        return getErrorObject("InvalidXml", "Invalid '" + JSON.stringify(tags.map((t) => t.tagName), null, 4).replace(/\r?\n/g, "") + "' found.", { line: 1, col: 1 });
      }
      return true;
    };
    function isWhiteSpace(char) {
      return char === " " || char === "	" || char === "\n" || char === "\r";
    }
    function readPI(xmlData, i2) {
      const start = i2;
      for (; i2 < xmlData.length; i2++) {
        if (xmlData[i2] == "?" || xmlData[i2] == " ") {
          const tagname = xmlData.substr(start, i2 - start);
          if (i2 > 5 && tagname === "xml") {
            return getErrorObject("InvalidXml", "XML declaration allowed only at the start of the document.", getLineNumberForPosition(xmlData, i2));
          } else if (xmlData[i2] == "?" && xmlData[i2 + 1] == ">") {
            i2++;
            break;
          } else {
            continue;
          }
        }
      }
      return i2;
    }
    function readCommentAndCDATA(xmlData, i2) {
      if (xmlData.length > i2 + 5 && xmlData[i2 + 1] === "-" && xmlData[i2 + 2] === "-") {
        for (i2 += 3; i2 < xmlData.length; i2++) {
          if (xmlData[i2] === "-" && xmlData[i2 + 1] === "-" && xmlData[i2 + 2] === ">") {
            i2 += 2;
            break;
          }
        }
      } else if (xmlData.length > i2 + 8 && xmlData[i2 + 1] === "D" && xmlData[i2 + 2] === "O" && xmlData[i2 + 3] === "C" && xmlData[i2 + 4] === "T" && xmlData[i2 + 5] === "Y" && xmlData[i2 + 6] === "P" && xmlData[i2 + 7] === "E") {
        let angleBracketsCount = 1;
        for (i2 += 8; i2 < xmlData.length; i2++) {
          if (xmlData[i2] === "<") {
            angleBracketsCount++;
          } else if (xmlData[i2] === ">") {
            angleBracketsCount--;
            if (angleBracketsCount === 0) {
              break;
            }
          }
        }
      } else if (xmlData.length > i2 + 9 && xmlData[i2 + 1] === "[" && xmlData[i2 + 2] === "C" && xmlData[i2 + 3] === "D" && xmlData[i2 + 4] === "A" && xmlData[i2 + 5] === "T" && xmlData[i2 + 6] === "A" && xmlData[i2 + 7] === "[") {
        for (i2 += 8; i2 < xmlData.length; i2++) {
          if (xmlData[i2] === "]" && xmlData[i2 + 1] === "]" && xmlData[i2 + 2] === ">") {
            i2 += 2;
            break;
          }
        }
      }
      return i2;
    }
    var doubleQuote = '"';
    var singleQuote = "'";
    function readAttributeStr(xmlData, i2) {
      let attrStr = "";
      let startChar = "";
      let tagClosed = false;
      for (; i2 < xmlData.length; i2++) {
        if (xmlData[i2] === doubleQuote || xmlData[i2] === singleQuote) {
          if (startChar === "") {
            startChar = xmlData[i2];
          } else if (startChar !== xmlData[i2]) {
          } else {
            startChar = "";
          }
        } else if (xmlData[i2] === ">") {
          if (startChar === "") {
            tagClosed = true;
            break;
          }
        }
        attrStr += xmlData[i2];
      }
      if (startChar !== "") {
        return false;
      }
      return {
        value: attrStr,
        index: i2,
        tagClosed
      };
    }
    var validAttrStrRegxp = new RegExp(`(\\s*)([^\\s=]+)(\\s*=)?(\\s*(['"])(([\\s\\S])*?)\\5)?`, "g");
    function validateAttributeString(attrStr, options) {
      const matches = util2.getAllMatches(attrStr, validAttrStrRegxp);
      const attrNames = {};
      for (let i2 = 0; i2 < matches.length; i2++) {
        if (matches[i2][1].length === 0) {
          return getErrorObject("InvalidAttr", "Attribute '" + matches[i2][2] + "' has no space in starting.", getPositionFromMatch(matches[i2]));
        } else if (matches[i2][3] !== void 0 && matches[i2][4] === void 0) {
          return getErrorObject("InvalidAttr", "Attribute '" + matches[i2][2] + "' is without value.", getPositionFromMatch(matches[i2]));
        } else if (matches[i2][3] === void 0 && !options.allowBooleanAttributes) {
          return getErrorObject("InvalidAttr", "boolean attribute '" + matches[i2][2] + "' is not allowed.", getPositionFromMatch(matches[i2]));
        }
        const attrName = matches[i2][2];
        if (!validateAttrName(attrName)) {
          return getErrorObject("InvalidAttr", "Attribute '" + attrName + "' is an invalid name.", getPositionFromMatch(matches[i2]));
        }
        if (!attrNames.hasOwnProperty(attrName)) {
          attrNames[attrName] = 1;
        } else {
          return getErrorObject("InvalidAttr", "Attribute '" + attrName + "' is repeated.", getPositionFromMatch(matches[i2]));
        }
      }
      return true;
    }
    function validateNumberAmpersand(xmlData, i2) {
      let re = /\d/;
      if (xmlData[i2] === "x") {
        i2++;
        re = /[\da-fA-F]/;
      }
      for (; i2 < xmlData.length; i2++) {
        if (xmlData[i2] === ";")
          return i2;
        if (!xmlData[i2].match(re))
          break;
      }
      return -1;
    }
    function validateAmpersand(xmlData, i2) {
      i2++;
      if (xmlData[i2] === ";")
        return -1;
      if (xmlData[i2] === "#") {
        i2++;
        return validateNumberAmpersand(xmlData, i2);
      }
      let count = 0;
      for (; i2 < xmlData.length; i2++, count++) {
        if (xmlData[i2].match(/\w/) && count < 20)
          continue;
        if (xmlData[i2] === ";")
          break;
        return -1;
      }
      return i2;
    }
    function getErrorObject(code, message, lineNumber) {
      return {
        err: {
          code,
          msg: message,
          line: lineNumber.line || lineNumber,
          col: lineNumber.col
        }
      };
    }
    function validateAttrName(attrName) {
      return util2.isName(attrName);
    }
    function validateTagName(tagname) {
      return util2.isName(tagname);
    }
    function getLineNumberForPosition(xmlData, index) {
      const lines = xmlData.substring(0, index).split(/\r?\n/);
      return {
        line: lines.length,
        // column number is last line's length + 1, because column numbering starts at 1:
        col: lines[lines.length - 1].length + 1
      };
    }
    function getPositionFromMatch(match) {
      return match.startIndex + match[1].length;
    }
  }
});

// node_modules/fast-xml-parser/src/xmlparser/OptionsBuilder.js
var require_OptionsBuilder = __commonJS({
  "node_modules/fast-xml-parser/src/xmlparser/OptionsBuilder.js"(exports) {
    var defaultOptions2 = {
      preserveOrder: false,
      attributeNamePrefix: "@_",
      attributesGroupName: false,
      textNodeName: "#text",
      ignoreAttributes: true,
      removeNSPrefix: false,
      // remove NS from tag name or attribute name if true
      allowBooleanAttributes: false,
      //a tag can have attributes without any value
      //ignoreRootElement : false,
      parseTagValue: true,
      parseAttributeValue: false,
      trimValues: true,
      //Trim string values of tag and attributes
      cdataPropName: false,
      numberParseOptions: {
        hex: true,
        leadingZeros: true,
        eNotation: true
      },
      tagValueProcessor: function(tagName, val2) {
        return val2;
      },
      attributeValueProcessor: function(attrName, val2) {
        return val2;
      },
      stopNodes: [],
      //nested tags will not be parsed even for errors
      alwaysCreateTextNode: false,
      isArray: () => false,
      commentPropName: false,
      unpairedTags: [],
      processEntities: true,
      htmlEntities: false,
      ignoreDeclaration: false,
      ignorePiTags: false,
      transformTagName: false,
      transformAttributeName: false,
      updateTag: function(tagName, jPath, attrs) {
        return tagName;
      }
      // skipEmptyListItem: false
    };
    var buildOptions = function(options) {
      return Object.assign({}, defaultOptions2, options);
    };
    exports.buildOptions = buildOptions;
    exports.defaultOptions = defaultOptions2;
  }
});

// node_modules/fast-xml-parser/src/xmlparser/xmlNode.js
var require_xmlNode = __commonJS({
  "node_modules/fast-xml-parser/src/xmlparser/xmlNode.js"(exports, module) {
    "use strict";
    var XmlNode = class {
      constructor(tagname) {
        this.tagname = tagname;
        this.child = [];
        this[":@"] = {};
      }
      add(key2, val2) {
        if (key2 === "__proto__")
          key2 = "#__proto__";
        this.child.push({ [key2]: val2 });
      }
      addChild(node) {
        if (node.tagname === "__proto__")
          node.tagname = "#__proto__";
        if (node[":@"] && Object.keys(node[":@"]).length > 0) {
          this.child.push({ [node.tagname]: node.child, [":@"]: node[":@"] });
        } else {
          this.child.push({ [node.tagname]: node.child });
        }
      }
    };
    module.exports = XmlNode;
  }
});

// node_modules/fast-xml-parser/src/xmlparser/DocTypeReader.js
var require_DocTypeReader = __commonJS({
  "node_modules/fast-xml-parser/src/xmlparser/DocTypeReader.js"(exports, module) {
    var util2 = require_util();
    function readDocType(xmlData, i2) {
      const entities = {};
      if (xmlData[i2 + 3] === "O" && xmlData[i2 + 4] === "C" && xmlData[i2 + 5] === "T" && xmlData[i2 + 6] === "Y" && xmlData[i2 + 7] === "P" && xmlData[i2 + 8] === "E") {
        i2 = i2 + 9;
        let angleBracketsCount = 1;
        let hasBody = false, comment = false;
        let exp = "";
        for (; i2 < xmlData.length; i2++) {
          if (xmlData[i2] === "<" && !comment) {
            if (hasBody && isEntity(xmlData, i2)) {
              i2 += 7;
              [entityName, val, i2] = readEntityExp(xmlData, i2 + 1);
              if (val.indexOf("&") === -1)
                entities[validateEntityName(entityName)] = {
                  regx: RegExp(`&${entityName};`, "g"),
                  val
                };
            } else if (hasBody && isElement(xmlData, i2))
              i2 += 8;
            else if (hasBody && isAttlist(xmlData, i2))
              i2 += 8;
            else if (hasBody && isNotation(xmlData, i2))
              i2 += 9;
            else if (isComment)
              comment = true;
            else
              throw new Error("Invalid DOCTYPE");
            angleBracketsCount++;
            exp = "";
          } else if (xmlData[i2] === ">") {
            if (comment) {
              if (xmlData[i2 - 1] === "-" && xmlData[i2 - 2] === "-") {
                comment = false;
                angleBracketsCount--;
              }
            } else {
              angleBracketsCount--;
            }
            if (angleBracketsCount === 0) {
              break;
            }
          } else if (xmlData[i2] === "[") {
            hasBody = true;
          } else {
            exp += xmlData[i2];
          }
        }
        if (angleBracketsCount !== 0) {
          throw new Error(`Unclosed DOCTYPE`);
        }
      } else {
        throw new Error(`Invalid Tag instead of DOCTYPE`);
      }
      return { entities, i: i2 };
    }
    function readEntityExp(xmlData, i2) {
      let entityName2 = "";
      for (; i2 < xmlData.length && (xmlData[i2] !== "'" && xmlData[i2] !== '"'); i2++) {
        entityName2 += xmlData[i2];
      }
      entityName2 = entityName2.trim();
      if (entityName2.indexOf(" ") !== -1)
        throw new Error("External entites are not supported");
      const startChar = xmlData[i2++];
      let val2 = "";
      for (; i2 < xmlData.length && xmlData[i2] !== startChar; i2++) {
        val2 += xmlData[i2];
      }
      return [entityName2, val2, i2];
    }
    function isComment(xmlData, i2) {
      if (xmlData[i2 + 1] === "!" && xmlData[i2 + 2] === "-" && xmlData[i2 + 3] === "-")
        return true;
      return false;
    }
    function isEntity(xmlData, i2) {
      if (xmlData[i2 + 1] === "!" && xmlData[i2 + 2] === "E" && xmlData[i2 + 3] === "N" && xmlData[i2 + 4] === "T" && xmlData[i2 + 5] === "I" && xmlData[i2 + 6] === "T" && xmlData[i2 + 7] === "Y")
        return true;
      return false;
    }
    function isElement(xmlData, i2) {
      if (xmlData[i2 + 1] === "!" && xmlData[i2 + 2] === "E" && xmlData[i2 + 3] === "L" && xmlData[i2 + 4] === "E" && xmlData[i2 + 5] === "M" && xmlData[i2 + 6] === "E" && xmlData[i2 + 7] === "N" && xmlData[i2 + 8] === "T")
        return true;
      return false;
    }
    function isAttlist(xmlData, i2) {
      if (xmlData[i2 + 1] === "!" && xmlData[i2 + 2] === "A" && xmlData[i2 + 3] === "T" && xmlData[i2 + 4] === "T" && xmlData[i2 + 5] === "L" && xmlData[i2 + 6] === "I" && xmlData[i2 + 7] === "S" && xmlData[i2 + 8] === "T")
        return true;
      return false;
    }
    function isNotation(xmlData, i2) {
      if (xmlData[i2 + 1] === "!" && xmlData[i2 + 2] === "N" && xmlData[i2 + 3] === "O" && xmlData[i2 + 4] === "T" && xmlData[i2 + 5] === "A" && xmlData[i2 + 6] === "T" && xmlData[i2 + 7] === "I" && xmlData[i2 + 8] === "O" && xmlData[i2 + 9] === "N")
        return true;
      return false;
    }
    function validateEntityName(name) {
      if (util2.isName(name))
        return name;
      else
        throw new Error(`Invalid entity name ${name}`);
    }
    module.exports = readDocType;
  }
});

// node_modules/strnum/strnum.js
var require_strnum = __commonJS({
  "node_modules/strnum/strnum.js"(exports, module) {
    var hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;
    var numRegex = /^([\-\+])?(0*)(\.[0-9]+([eE]\-?[0-9]+)?|[0-9]+(\.[0-9]+([eE]\-?[0-9]+)?)?)$/;
    if (!Number.parseInt && window.parseInt) {
      Number.parseInt = window.parseInt;
    }
    if (!Number.parseFloat && window.parseFloat) {
      Number.parseFloat = window.parseFloat;
    }
    var consider = {
      hex: true,
      leadingZeros: true,
      decimalPoint: ".",
      eNotation: true
      //skipLike: /regex/
    };
    function toNumber(str, options = {}) {
      options = Object.assign({}, consider, options);
      if (!str || typeof str !== "string")
        return str;
      let trimmedStr = str.trim();
      if (options.skipLike !== void 0 && options.skipLike.test(trimmedStr))
        return str;
      else if (options.hex && hexRegex.test(trimmedStr)) {
        return Number.parseInt(trimmedStr, 16);
      } else {
        const match = numRegex.exec(trimmedStr);
        if (match) {
          const sign = match[1];
          const leadingZeros = match[2];
          let numTrimmedByZeros = trimZeros(match[3]);
          const eNotation = match[4] || match[6];
          if (!options.leadingZeros && leadingZeros.length > 0 && sign && trimmedStr[2] !== ".")
            return str;
          else if (!options.leadingZeros && leadingZeros.length > 0 && !sign && trimmedStr[1] !== ".")
            return str;
          else {
            const num = Number(trimmedStr);
            const numStr = "" + num;
            if (numStr.search(/[eE]/) !== -1) {
              if (options.eNotation)
                return num;
              else
                return str;
            } else if (eNotation) {
              if (options.eNotation)
                return num;
              else
                return str;
            } else if (trimmedStr.indexOf(".") !== -1) {
              if (numStr === "0" && numTrimmedByZeros === "")
                return num;
              else if (numStr === numTrimmedByZeros)
                return num;
              else if (sign && numStr === "-" + numTrimmedByZeros)
                return num;
              else
                return str;
            }
            if (leadingZeros) {
              if (numTrimmedByZeros === numStr)
                return num;
              else if (sign + numTrimmedByZeros === numStr)
                return num;
              else
                return str;
            }
            if (trimmedStr === numStr)
              return num;
            else if (trimmedStr === sign + numStr)
              return num;
            return str;
          }
        } else {
          return str;
        }
      }
    }
    function trimZeros(numStr) {
      if (numStr && numStr.indexOf(".") !== -1) {
        numStr = numStr.replace(/0+$/, "");
        if (numStr === ".")
          numStr = "0";
        else if (numStr[0] === ".")
          numStr = "0" + numStr;
        else if (numStr[numStr.length - 1] === ".")
          numStr = numStr.substr(0, numStr.length - 1);
        return numStr;
      }
      return numStr;
    }
    module.exports = toNumber;
  }
});

// node_modules/fast-xml-parser/src/ignoreAttributes.js
var require_ignoreAttributes = __commonJS({
  "node_modules/fast-xml-parser/src/ignoreAttributes.js"(exports, module) {
    function getIgnoreAttributesFn(ignoreAttributes) {
      if (typeof ignoreAttributes === "function") {
        return ignoreAttributes;
      }
      if (Array.isArray(ignoreAttributes)) {
        return (attrName) => {
          for (const pattern of ignoreAttributes) {
            if (typeof pattern === "string" && attrName === pattern) {
              return true;
            }
            if (pattern instanceof RegExp && pattern.test(attrName)) {
              return true;
            }
          }
        };
      }
      return () => false;
    }
    module.exports = getIgnoreAttributesFn;
  }
});

// node_modules/fast-xml-parser/src/xmlparser/OrderedObjParser.js
var require_OrderedObjParser = __commonJS({
  "node_modules/fast-xml-parser/src/xmlparser/OrderedObjParser.js"(exports, module) {
    "use strict";
    var util2 = require_util();
    var xmlNode = require_xmlNode();
    var readDocType = require_DocTypeReader();
    var toNumber = require_strnum();
    var getIgnoreAttributesFn = require_ignoreAttributes();
    var OrderedObjParser = class {
      constructor(options) {
        this.options = options;
        this.currentNode = null;
        this.tagsNodeStack = [];
        this.docTypeEntities = {};
        this.lastEntities = {
          "apos": { regex: /&(apos|#39|#x27);/g, val: "'" },
          "gt": { regex: /&(gt|#62|#x3E);/g, val: ">" },
          "lt": { regex: /&(lt|#60|#x3C);/g, val: "<" },
          "quot": { regex: /&(quot|#34|#x22);/g, val: '"' }
        };
        this.ampEntity = { regex: /&(amp|#38|#x26);/g, val: "&" };
        this.htmlEntities = {
          "space": { regex: /&(nbsp|#160);/g, val: " " },
          // "lt" : { regex: /&(lt|#60);/g, val: "<" },
          // "gt" : { regex: /&(gt|#62);/g, val: ">" },
          // "amp" : { regex: /&(amp|#38);/g, val: "&" },
          // "quot" : { regex: /&(quot|#34);/g, val: "\"" },
          // "apos" : { regex: /&(apos|#39);/g, val: "'" },
          "cent": { regex: /&(cent|#162);/g, val: "\xA2" },
          "pound": { regex: /&(pound|#163);/g, val: "\xA3" },
          "yen": { regex: /&(yen|#165);/g, val: "\xA5" },
          "euro": { regex: /&(euro|#8364);/g, val: "\u20AC" },
          "copyright": { regex: /&(copy|#169);/g, val: "\xA9" },
          "reg": { regex: /&(reg|#174);/g, val: "\xAE" },
          "inr": { regex: /&(inr|#8377);/g, val: "\u20B9" },
          "num_dec": { regex: /&#([0-9]{1,7});/g, val: (_, str) => String.fromCharCode(Number.parseInt(str, 10)) },
          "num_hex": { regex: /&#x([0-9a-fA-F]{1,6});/g, val: (_, str) => String.fromCharCode(Number.parseInt(str, 16)) }
        };
        this.addExternalEntities = addExternalEntities;
        this.parseXml = parseXml;
        this.parseTextData = parseTextData;
        this.resolveNameSpace = resolveNameSpace;
        this.buildAttributesMap = buildAttributesMap;
        this.isItStopNode = isItStopNode;
        this.replaceEntitiesValue = replaceEntitiesValue;
        this.readStopNodeData = readStopNodeData;
        this.saveTextToParentTag = saveTextToParentTag;
        this.addChild = addChild;
        this.ignoreAttributesFn = getIgnoreAttributesFn(this.options.ignoreAttributes);
      }
    };
    function addExternalEntities(externalEntities) {
      const entKeys = Object.keys(externalEntities);
      for (let i2 = 0; i2 < entKeys.length; i2++) {
        const ent = entKeys[i2];
        this.lastEntities[ent] = {
          regex: new RegExp("&" + ent + ";", "g"),
          val: externalEntities[ent]
        };
      }
    }
    function parseTextData(val2, tagName, jPath, dontTrim, hasAttributes, isLeafNode, escapeEntities) {
      if (val2 !== void 0) {
        if (this.options.trimValues && !dontTrim) {
          val2 = val2.trim();
        }
        if (val2.length > 0) {
          if (!escapeEntities)
            val2 = this.replaceEntitiesValue(val2);
          const newval = this.options.tagValueProcessor(tagName, val2, jPath, hasAttributes, isLeafNode);
          if (newval === null || newval === void 0) {
            return val2;
          } else if (typeof newval !== typeof val2 || newval !== val2) {
            return newval;
          } else if (this.options.trimValues) {
            return parseValue(val2, this.options.parseTagValue, this.options.numberParseOptions);
          } else {
            const trimmedVal = val2.trim();
            if (trimmedVal === val2) {
              return parseValue(val2, this.options.parseTagValue, this.options.numberParseOptions);
            } else {
              return val2;
            }
          }
        }
      }
    }
    function resolveNameSpace(tagname) {
      if (this.options.removeNSPrefix) {
        const tags = tagname.split(":");
        const prefix = tagname.charAt(0) === "/" ? "/" : "";
        if (tags[0] === "xmlns") {
          return "";
        }
        if (tags.length === 2) {
          tagname = prefix + tags[1];
        }
      }
      return tagname;
    }
    var attrsRegx = new RegExp(`([^\\s=]+)\\s*(=\\s*(['"])([\\s\\S]*?)\\3)?`, "gm");
    function buildAttributesMap(attrStr, jPath, tagName) {
      if (this.options.ignoreAttributes !== true && typeof attrStr === "string") {
        const matches = util2.getAllMatches(attrStr, attrsRegx);
        const len = matches.length;
        const attrs = {};
        for (let i2 = 0; i2 < len; i2++) {
          const attrName = this.resolveNameSpace(matches[i2][1]);
          if (this.ignoreAttributesFn(attrName, jPath)) {
            continue;
          }
          let oldVal = matches[i2][4];
          let aName = this.options.attributeNamePrefix + attrName;
          if (attrName.length) {
            if (this.options.transformAttributeName) {
              aName = this.options.transformAttributeName(aName);
            }
            if (aName === "__proto__")
              aName = "#__proto__";
            if (oldVal !== void 0) {
              if (this.options.trimValues) {
                oldVal = oldVal.trim();
              }
              oldVal = this.replaceEntitiesValue(oldVal);
              const newVal = this.options.attributeValueProcessor(attrName, oldVal, jPath);
              if (newVal === null || newVal === void 0) {
                attrs[aName] = oldVal;
              } else if (typeof newVal !== typeof oldVal || newVal !== oldVal) {
                attrs[aName] = newVal;
              } else {
                attrs[aName] = parseValue(
                  oldVal,
                  this.options.parseAttributeValue,
                  this.options.numberParseOptions
                );
              }
            } else if (this.options.allowBooleanAttributes) {
              attrs[aName] = true;
            }
          }
        }
        if (!Object.keys(attrs).length) {
          return;
        }
        if (this.options.attributesGroupName) {
          const attrCollection = {};
          attrCollection[this.options.attributesGroupName] = attrs;
          return attrCollection;
        }
        return attrs;
      }
    }
    var parseXml = function(xmlData) {
      xmlData = xmlData.replace(/\r\n?/g, "\n");
      const xmlObj = new xmlNode("!xml");
      let currentNode = xmlObj;
      let textData = "";
      let jPath = "";
      for (let i2 = 0; i2 < xmlData.length; i2++) {
        const ch = xmlData[i2];
        if (ch === "<") {
          if (xmlData[i2 + 1] === "/") {
            const closeIndex = findClosingIndex(xmlData, ">", i2, "Closing Tag is not closed.");
            let tagName = xmlData.substring(i2 + 2, closeIndex).trim();
            if (this.options.removeNSPrefix) {
              const colonIndex = tagName.indexOf(":");
              if (colonIndex !== -1) {
                tagName = tagName.substr(colonIndex + 1);
              }
            }
            if (this.options.transformTagName) {
              tagName = this.options.transformTagName(tagName);
            }
            if (currentNode) {
              textData = this.saveTextToParentTag(textData, currentNode, jPath);
            }
            const lastTagName = jPath.substring(jPath.lastIndexOf(".") + 1);
            if (tagName && this.options.unpairedTags.indexOf(tagName) !== -1) {
              throw new Error(`Unpaired tag can not be used as closing tag: </${tagName}>`);
            }
            let propIndex = 0;
            if (lastTagName && this.options.unpairedTags.indexOf(lastTagName) !== -1) {
              propIndex = jPath.lastIndexOf(".", jPath.lastIndexOf(".") - 1);
              this.tagsNodeStack.pop();
            } else {
              propIndex = jPath.lastIndexOf(".");
            }
            jPath = jPath.substring(0, propIndex);
            currentNode = this.tagsNodeStack.pop();
            textData = "";
            i2 = closeIndex;
          } else if (xmlData[i2 + 1] === "?") {
            let tagData = readTagExp(xmlData, i2, false, "?>");
            if (!tagData)
              throw new Error("Pi Tag is not closed.");
            textData = this.saveTextToParentTag(textData, currentNode, jPath);
            if (this.options.ignoreDeclaration && tagData.tagName === "?xml" || this.options.ignorePiTags) {
            } else {
              const childNode = new xmlNode(tagData.tagName);
              childNode.add(this.options.textNodeName, "");
              if (tagData.tagName !== tagData.tagExp && tagData.attrExpPresent) {
                childNode[":@"] = this.buildAttributesMap(tagData.tagExp, jPath, tagData.tagName);
              }
              this.addChild(currentNode, childNode, jPath);
            }
            i2 = tagData.closeIndex + 1;
          } else if (xmlData.substr(i2 + 1, 3) === "!--") {
            const endIndex = findClosingIndex(xmlData, "-->", i2 + 4, "Comment is not closed.");
            if (this.options.commentPropName) {
              const comment = xmlData.substring(i2 + 4, endIndex - 2);
              textData = this.saveTextToParentTag(textData, currentNode, jPath);
              currentNode.add(this.options.commentPropName, [{ [this.options.textNodeName]: comment }]);
            }
            i2 = endIndex;
          } else if (xmlData.substr(i2 + 1, 2) === "!D") {
            const result = readDocType(xmlData, i2);
            this.docTypeEntities = result.entities;
            i2 = result.i;
          } else if (xmlData.substr(i2 + 1, 2) === "![") {
            const closeIndex = findClosingIndex(xmlData, "]]>", i2, "CDATA is not closed.") - 2;
            const tagExp = xmlData.substring(i2 + 9, closeIndex);
            textData = this.saveTextToParentTag(textData, currentNode, jPath);
            let val2 = this.parseTextData(tagExp, currentNode.tagname, jPath, true, false, true, true);
            if (val2 == void 0)
              val2 = "";
            if (this.options.cdataPropName) {
              currentNode.add(this.options.cdataPropName, [{ [this.options.textNodeName]: tagExp }]);
            } else {
              currentNode.add(this.options.textNodeName, val2);
            }
            i2 = closeIndex + 2;
          } else {
            let result = readTagExp(xmlData, i2, this.options.removeNSPrefix);
            let tagName = result.tagName;
            const rawTagName = result.rawTagName;
            let tagExp = result.tagExp;
            let attrExpPresent = result.attrExpPresent;
            let closeIndex = result.closeIndex;
            if (this.options.transformTagName) {
              tagName = this.options.transformTagName(tagName);
            }
            if (currentNode && textData) {
              if (currentNode.tagname !== "!xml") {
                textData = this.saveTextToParentTag(textData, currentNode, jPath, false);
              }
            }
            const lastTag = currentNode;
            if (lastTag && this.options.unpairedTags.indexOf(lastTag.tagname) !== -1) {
              currentNode = this.tagsNodeStack.pop();
              jPath = jPath.substring(0, jPath.lastIndexOf("."));
            }
            if (tagName !== xmlObj.tagname) {
              jPath += jPath ? "." + tagName : tagName;
            }
            if (this.isItStopNode(this.options.stopNodes, jPath, tagName)) {
              let tagContent = "";
              if (tagExp.length > 0 && tagExp.lastIndexOf("/") === tagExp.length - 1) {
                if (tagName[tagName.length - 1] === "/") {
                  tagName = tagName.substr(0, tagName.length - 1);
                  jPath = jPath.substr(0, jPath.length - 1);
                  tagExp = tagName;
                } else {
                  tagExp = tagExp.substr(0, tagExp.length - 1);
                }
                i2 = result.closeIndex;
              } else if (this.options.unpairedTags.indexOf(tagName) !== -1) {
                i2 = result.closeIndex;
              } else {
                const result2 = this.readStopNodeData(xmlData, rawTagName, closeIndex + 1);
                if (!result2)
                  throw new Error(`Unexpected end of ${rawTagName}`);
                i2 = result2.i;
                tagContent = result2.tagContent;
              }
              const childNode = new xmlNode(tagName);
              if (tagName !== tagExp && attrExpPresent) {
                childNode[":@"] = this.buildAttributesMap(tagExp, jPath, tagName);
              }
              if (tagContent) {
                tagContent = this.parseTextData(tagContent, tagName, jPath, true, attrExpPresent, true, true);
              }
              jPath = jPath.substr(0, jPath.lastIndexOf("."));
              childNode.add(this.options.textNodeName, tagContent);
              this.addChild(currentNode, childNode, jPath);
            } else {
              if (tagExp.length > 0 && tagExp.lastIndexOf("/") === tagExp.length - 1) {
                if (tagName[tagName.length - 1] === "/") {
                  tagName = tagName.substr(0, tagName.length - 1);
                  jPath = jPath.substr(0, jPath.length - 1);
                  tagExp = tagName;
                } else {
                  tagExp = tagExp.substr(0, tagExp.length - 1);
                }
                if (this.options.transformTagName) {
                  tagName = this.options.transformTagName(tagName);
                }
                const childNode = new xmlNode(tagName);
                if (tagName !== tagExp && attrExpPresent) {
                  childNode[":@"] = this.buildAttributesMap(tagExp, jPath, tagName);
                }
                this.addChild(currentNode, childNode, jPath);
                jPath = jPath.substr(0, jPath.lastIndexOf("."));
              } else {
                const childNode = new xmlNode(tagName);
                this.tagsNodeStack.push(currentNode);
                if (tagName !== tagExp && attrExpPresent) {
                  childNode[":@"] = this.buildAttributesMap(tagExp, jPath, tagName);
                }
                this.addChild(currentNode, childNode, jPath);
                currentNode = childNode;
              }
              textData = "";
              i2 = closeIndex;
            }
          }
        } else {
          textData += xmlData[i2];
        }
      }
      return xmlObj.child;
    };
    function addChild(currentNode, childNode, jPath) {
      const result = this.options.updateTag(childNode.tagname, jPath, childNode[":@"]);
      if (result === false) {
      } else if (typeof result === "string") {
        childNode.tagname = result;
        currentNode.addChild(childNode);
      } else {
        currentNode.addChild(childNode);
      }
    }
    var replaceEntitiesValue = function(val2) {
      if (this.options.processEntities) {
        for (let entityName2 in this.docTypeEntities) {
          const entity = this.docTypeEntities[entityName2];
          val2 = val2.replace(entity.regx, entity.val);
        }
        for (let entityName2 in this.lastEntities) {
          const entity = this.lastEntities[entityName2];
          val2 = val2.replace(entity.regex, entity.val);
        }
        if (this.options.htmlEntities) {
          for (let entityName2 in this.htmlEntities) {
            const entity = this.htmlEntities[entityName2];
            val2 = val2.replace(entity.regex, entity.val);
          }
        }
        val2 = val2.replace(this.ampEntity.regex, this.ampEntity.val);
      }
      return val2;
    };
    function saveTextToParentTag(textData, currentNode, jPath, isLeafNode) {
      if (textData) {
        if (isLeafNode === void 0)
          isLeafNode = Object.keys(currentNode.child).length === 0;
        textData = this.parseTextData(
          textData,
          currentNode.tagname,
          jPath,
          false,
          currentNode[":@"] ? Object.keys(currentNode[":@"]).length !== 0 : false,
          isLeafNode
        );
        if (textData !== void 0 && textData !== "")
          currentNode.add(this.options.textNodeName, textData);
        textData = "";
      }
      return textData;
    }
    function isItStopNode(stopNodes, jPath, currentTagName) {
      const allNodesExp = "*." + currentTagName;
      for (const stopNodePath in stopNodes) {
        const stopNodeExp = stopNodes[stopNodePath];
        if (allNodesExp === stopNodeExp || jPath === stopNodeExp)
          return true;
      }
      return false;
    }
    function tagExpWithClosingIndex(xmlData, i2, closingChar = ">") {
      let attrBoundary;
      let tagExp = "";
      for (let index = i2; index < xmlData.length; index++) {
        let ch = xmlData[index];
        if (attrBoundary) {
          if (ch === attrBoundary)
            attrBoundary = "";
        } else if (ch === '"' || ch === "'") {
          attrBoundary = ch;
        } else if (ch === closingChar[0]) {
          if (closingChar[1]) {
            if (xmlData[index + 1] === closingChar[1]) {
              return {
                data: tagExp,
                index
              };
            }
          } else {
            return {
              data: tagExp,
              index
            };
          }
        } else if (ch === "	") {
          ch = " ";
        }
        tagExp += ch;
      }
    }
    function findClosingIndex(xmlData, str, i2, errMsg) {
      const closingIndex = xmlData.indexOf(str, i2);
      if (closingIndex === -1) {
        throw new Error(errMsg);
      } else {
        return closingIndex + str.length - 1;
      }
    }
    function readTagExp(xmlData, i2, removeNSPrefix, closingChar = ">") {
      const result = tagExpWithClosingIndex(xmlData, i2 + 1, closingChar);
      if (!result)
        return;
      let tagExp = result.data;
      const closeIndex = result.index;
      const separatorIndex = tagExp.search(/\s/);
      let tagName = tagExp;
      let attrExpPresent = true;
      if (separatorIndex !== -1) {
        tagName = tagExp.substring(0, separatorIndex);
        tagExp = tagExp.substring(separatorIndex + 1).trimStart();
      }
      const rawTagName = tagName;
      if (removeNSPrefix) {
        const colonIndex = tagName.indexOf(":");
        if (colonIndex !== -1) {
          tagName = tagName.substr(colonIndex + 1);
          attrExpPresent = tagName !== result.data.substr(colonIndex + 1);
        }
      }
      return {
        tagName,
        tagExp,
        closeIndex,
        attrExpPresent,
        rawTagName
      };
    }
    function readStopNodeData(xmlData, tagName, i2) {
      const startIndex = i2;
      let openTagCount = 1;
      for (; i2 < xmlData.length; i2++) {
        if (xmlData[i2] === "<") {
          if (xmlData[i2 + 1] === "/") {
            const closeIndex = findClosingIndex(xmlData, ">", i2, `${tagName} is not closed`);
            let closeTagName = xmlData.substring(i2 + 2, closeIndex).trim();
            if (closeTagName === tagName) {
              openTagCount--;
              if (openTagCount === 0) {
                return {
                  tagContent: xmlData.substring(startIndex, i2),
                  i: closeIndex
                };
              }
            }
            i2 = closeIndex;
          } else if (xmlData[i2 + 1] === "?") {
            const closeIndex = findClosingIndex(xmlData, "?>", i2 + 1, "StopNode is not closed.");
            i2 = closeIndex;
          } else if (xmlData.substr(i2 + 1, 3) === "!--") {
            const closeIndex = findClosingIndex(xmlData, "-->", i2 + 3, "StopNode is not closed.");
            i2 = closeIndex;
          } else if (xmlData.substr(i2 + 1, 2) === "![") {
            const closeIndex = findClosingIndex(xmlData, "]]>", i2, "StopNode is not closed.") - 2;
            i2 = closeIndex;
          } else {
            const tagData = readTagExp(xmlData, i2, ">");
            if (tagData) {
              const openTagName = tagData && tagData.tagName;
              if (openTagName === tagName && tagData.tagExp[tagData.tagExp.length - 1] !== "/") {
                openTagCount++;
              }
              i2 = tagData.closeIndex;
            }
          }
        }
      }
    }
    function parseValue(val2, shouldParse, options) {
      if (shouldParse && typeof val2 === "string") {
        const newval = val2.trim();
        if (newval === "true")
          return true;
        else if (newval === "false")
          return false;
        else
          return toNumber(val2, options);
      } else {
        if (util2.isExist(val2)) {
          return val2;
        } else {
          return "";
        }
      }
    }
    module.exports = OrderedObjParser;
  }
});

// node_modules/fast-xml-parser/src/xmlparser/node2json.js
var require_node2json = __commonJS({
  "node_modules/fast-xml-parser/src/xmlparser/node2json.js"(exports) {
    "use strict";
    function prettify(node, options) {
      return compress(node, options);
    }
    function compress(arr, options, jPath) {
      let text2;
      const compressedObj = {};
      for (let i2 = 0; i2 < arr.length; i2++) {
        const tagObj = arr[i2];
        const property = propName(tagObj);
        let newJpath = "";
        if (jPath === void 0)
          newJpath = property;
        else
          newJpath = jPath + "." + property;
        if (property === options.textNodeName) {
          if (text2 === void 0)
            text2 = tagObj[property];
          else
            text2 += "" + tagObj[property];
        } else if (property === void 0) {
          continue;
        } else if (tagObj[property]) {
          let val2 = compress(tagObj[property], options, newJpath);
          const isLeaf = isLeafTag(val2, options);
          if (tagObj[":@"]) {
            assignAttributes(val2, tagObj[":@"], newJpath, options);
          } else if (Object.keys(val2).length === 1 && val2[options.textNodeName] !== void 0 && !options.alwaysCreateTextNode) {
            val2 = val2[options.textNodeName];
          } else if (Object.keys(val2).length === 0) {
            if (options.alwaysCreateTextNode)
              val2[options.textNodeName] = "";
            else
              val2 = "";
          }
          if (compressedObj[property] !== void 0 && compressedObj.hasOwnProperty(property)) {
            if (!Array.isArray(compressedObj[property])) {
              compressedObj[property] = [compressedObj[property]];
            }
            compressedObj[property].push(val2);
          } else {
            if (options.isArray(property, newJpath, isLeaf)) {
              compressedObj[property] = [val2];
            } else {
              compressedObj[property] = val2;
            }
          }
        }
      }
      if (typeof text2 === "string") {
        if (text2.length > 0)
          compressedObj[options.textNodeName] = text2;
      } else if (text2 !== void 0)
        compressedObj[options.textNodeName] = text2;
      return compressedObj;
    }
    function propName(obj) {
      const keys = Object.keys(obj);
      for (let i2 = 0; i2 < keys.length; i2++) {
        const key2 = keys[i2];
        if (key2 !== ":@")
          return key2;
      }
    }
    function assignAttributes(obj, attrMap, jpath, options) {
      if (attrMap) {
        const keys = Object.keys(attrMap);
        const len = keys.length;
        for (let i2 = 0; i2 < len; i2++) {
          const atrrName = keys[i2];
          if (options.isArray(atrrName, jpath + "." + atrrName, true, true)) {
            obj[atrrName] = [attrMap[atrrName]];
          } else {
            obj[atrrName] = attrMap[atrrName];
          }
        }
      }
    }
    function isLeafTag(obj, options) {
      const { textNodeName } = options;
      const propCount = Object.keys(obj).length;
      if (propCount === 0) {
        return true;
      }
      if (propCount === 1 && (obj[textNodeName] || typeof obj[textNodeName] === "boolean" || obj[textNodeName] === 0)) {
        return true;
      }
      return false;
    }
    exports.prettify = prettify;
  }
});

// node_modules/fast-xml-parser/src/xmlparser/XMLParser.js
var require_XMLParser = __commonJS({
  "node_modules/fast-xml-parser/src/xmlparser/XMLParser.js"(exports, module) {
    var { buildOptions } = require_OptionsBuilder();
    var OrderedObjParser = require_OrderedObjParser();
    var { prettify } = require_node2json();
    var validator = require_validator();
    var XMLParser = class {
      constructor(options) {
        this.externalEntities = {};
        this.options = buildOptions(options);
      }
      /**
       * Parse XML dats to JS object 
       * @param {string|Buffer} xmlData 
       * @param {boolean|Object} validationOption 
       */
      parse(xmlData, validationOption) {
        if (typeof xmlData === "string") {
        } else if (xmlData.toString) {
          xmlData = xmlData.toString();
        } else {
          throw new Error("XML data is accepted in String or Bytes[] form.");
        }
        if (validationOption) {
          if (validationOption === true)
            validationOption = {};
          const result = validator.validate(xmlData, validationOption);
          if (result !== true) {
            throw Error(`${result.err.msg}:${result.err.line}:${result.err.col}`);
          }
        }
        const orderedObjParser = new OrderedObjParser(this.options);
        orderedObjParser.addExternalEntities(this.externalEntities);
        const orderedResult = orderedObjParser.parseXml(xmlData);
        if (this.options.preserveOrder || orderedResult === void 0)
          return orderedResult;
        else
          return prettify(orderedResult, this.options);
      }
      /**
       * Add Entity which is not by default supported by this library
       * @param {string} key 
       * @param {string} value 
       */
      addEntity(key2, value) {
        if (value.indexOf("&") !== -1) {
          throw new Error("Entity value can't have '&'");
        } else if (key2.indexOf("&") !== -1 || key2.indexOf(";") !== -1) {
          throw new Error("An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'");
        } else if (value === "&") {
          throw new Error("An entity with value '&' is not permitted");
        } else {
          this.externalEntities[key2] = value;
        }
      }
    };
    module.exports = XMLParser;
  }
});

// node_modules/fast-xml-parser/src/xmlbuilder/orderedJs2Xml.js
var require_orderedJs2Xml = __commonJS({
  "node_modules/fast-xml-parser/src/xmlbuilder/orderedJs2Xml.js"(exports, module) {
    var EOL = "\n";
    function toXml(jArray, options) {
      let indentation = "";
      if (options.format && options.indentBy.length > 0) {
        indentation = EOL;
      }
      return arrToStr(jArray, options, "", indentation);
    }
    function arrToStr(arr, options, jPath, indentation) {
      let xmlStr = "";
      let isPreviousElementTag = false;
      for (let i2 = 0; i2 < arr.length; i2++) {
        const tagObj = arr[i2];
        const tagName = propName(tagObj);
        if (tagName === void 0)
          continue;
        let newJPath = "";
        if (jPath.length === 0)
          newJPath = tagName;
        else
          newJPath = `${jPath}.${tagName}`;
        if (tagName === options.textNodeName) {
          let tagText = tagObj[tagName];
          if (!isStopNode(newJPath, options)) {
            tagText = options.tagValueProcessor(tagName, tagText);
            tagText = replaceEntitiesValue(tagText, options);
          }
          if (isPreviousElementTag) {
            xmlStr += indentation;
          }
          xmlStr += tagText;
          isPreviousElementTag = false;
          continue;
        } else if (tagName === options.cdataPropName) {
          if (isPreviousElementTag) {
            xmlStr += indentation;
          }
          xmlStr += `<![CDATA[${tagObj[tagName][0][options.textNodeName]}]]>`;
          isPreviousElementTag = false;
          continue;
        } else if (tagName === options.commentPropName) {
          xmlStr += indentation + `<!--${tagObj[tagName][0][options.textNodeName]}-->`;
          isPreviousElementTag = true;
          continue;
        } else if (tagName[0] === "?") {
          const attStr2 = attr_to_str(tagObj[":@"], options);
          const tempInd = tagName === "?xml" ? "" : indentation;
          let piTextNodeName = tagObj[tagName][0][options.textNodeName];
          piTextNodeName = piTextNodeName.length !== 0 ? " " + piTextNodeName : "";
          xmlStr += tempInd + `<${tagName}${piTextNodeName}${attStr2}?>`;
          isPreviousElementTag = true;
          continue;
        }
        let newIdentation = indentation;
        if (newIdentation !== "") {
          newIdentation += options.indentBy;
        }
        const attStr = attr_to_str(tagObj[":@"], options);
        const tagStart = indentation + `<${tagName}${attStr}`;
        const tagValue = arrToStr(tagObj[tagName], options, newJPath, newIdentation);
        if (options.unpairedTags.indexOf(tagName) !== -1) {
          if (options.suppressUnpairedNode)
            xmlStr += tagStart + ">";
          else
            xmlStr += tagStart + "/>";
        } else if ((!tagValue || tagValue.length === 0) && options.suppressEmptyNode) {
          xmlStr += tagStart + "/>";
        } else if (tagValue && tagValue.endsWith(">")) {
          xmlStr += tagStart + `>${tagValue}${indentation}</${tagName}>`;
        } else {
          xmlStr += tagStart + ">";
          if (tagValue && indentation !== "" && (tagValue.includes("/>") || tagValue.includes("</"))) {
            xmlStr += indentation + options.indentBy + tagValue + indentation;
          } else {
            xmlStr += tagValue;
          }
          xmlStr += `</${tagName}>`;
        }
        isPreviousElementTag = true;
      }
      return xmlStr;
    }
    function propName(obj) {
      const keys = Object.keys(obj);
      for (let i2 = 0; i2 < keys.length; i2++) {
        const key2 = keys[i2];
        if (!obj.hasOwnProperty(key2))
          continue;
        if (key2 !== ":@")
          return key2;
      }
    }
    function attr_to_str(attrMap, options) {
      let attrStr = "";
      if (attrMap && !options.ignoreAttributes) {
        for (let attr in attrMap) {
          if (!attrMap.hasOwnProperty(attr))
            continue;
          let attrVal = options.attributeValueProcessor(attr, attrMap[attr]);
          attrVal = replaceEntitiesValue(attrVal, options);
          if (attrVal === true && options.suppressBooleanAttributes) {
            attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}`;
          } else {
            attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}="${attrVal}"`;
          }
        }
      }
      return attrStr;
    }
    function isStopNode(jPath, options) {
      jPath = jPath.substr(0, jPath.length - options.textNodeName.length - 1);
      let tagName = jPath.substr(jPath.lastIndexOf(".") + 1);
      for (let index in options.stopNodes) {
        if (options.stopNodes[index] === jPath || options.stopNodes[index] === "*." + tagName)
          return true;
      }
      return false;
    }
    function replaceEntitiesValue(textValue, options) {
      if (textValue && textValue.length > 0 && options.processEntities) {
        for (let i2 = 0; i2 < options.entities.length; i2++) {
          const entity = options.entities[i2];
          textValue = textValue.replace(entity.regex, entity.val);
        }
      }
      return textValue;
    }
    module.exports = toXml;
  }
});

// node_modules/fast-xml-parser/src/xmlbuilder/json2xml.js
var require_json2xml = __commonJS({
  "node_modules/fast-xml-parser/src/xmlbuilder/json2xml.js"(exports, module) {
    "use strict";
    var buildFromOrderedJs = require_orderedJs2Xml();
    var getIgnoreAttributesFn = require_ignoreAttributes();
    var defaultOptions2 = {
      attributeNamePrefix: "@_",
      attributesGroupName: false,
      textNodeName: "#text",
      ignoreAttributes: true,
      cdataPropName: false,
      format: false,
      indentBy: "  ",
      suppressEmptyNode: false,
      suppressUnpairedNode: true,
      suppressBooleanAttributes: true,
      tagValueProcessor: function(key2, a) {
        return a;
      },
      attributeValueProcessor: function(attrName, a) {
        return a;
      },
      preserveOrder: false,
      commentPropName: false,
      unpairedTags: [],
      entities: [
        { regex: new RegExp("&", "g"), val: "&amp;" },
        //it must be on top
        { regex: new RegExp(">", "g"), val: "&gt;" },
        { regex: new RegExp("<", "g"), val: "&lt;" },
        { regex: new RegExp("'", "g"), val: "&apos;" },
        { regex: new RegExp('"', "g"), val: "&quot;" }
      ],
      processEntities: true,
      stopNodes: [],
      // transformTagName: false,
      // transformAttributeName: false,
      oneListGroup: false
    };
    function Builder(options) {
      this.options = Object.assign({}, defaultOptions2, options);
      if (this.options.ignoreAttributes === true || this.options.attributesGroupName) {
        this.isAttribute = function() {
          return false;
        };
      } else {
        this.ignoreAttributesFn = getIgnoreAttributesFn(this.options.ignoreAttributes);
        this.attrPrefixLen = this.options.attributeNamePrefix.length;
        this.isAttribute = isAttribute;
      }
      this.processTextOrObjNode = processTextOrObjNode;
      if (this.options.format) {
        this.indentate = indentate;
        this.tagEndChar = ">\n";
        this.newLine = "\n";
      } else {
        this.indentate = function() {
          return "";
        };
        this.tagEndChar = ">";
        this.newLine = "";
      }
    }
    Builder.prototype.build = function(jObj) {
      if (this.options.preserveOrder) {
        return buildFromOrderedJs(jObj, this.options);
      } else {
        if (Array.isArray(jObj) && this.options.arrayNodeName && this.options.arrayNodeName.length > 1) {
          jObj = {
            [this.options.arrayNodeName]: jObj
          };
        }
        return this.j2x(jObj, 0, []).val;
      }
    };
    Builder.prototype.j2x = function(jObj, level, ajPath) {
      let attrStr = "";
      let val2 = "";
      const jPath = ajPath.join(".");
      for (let key2 in jObj) {
        if (!Object.prototype.hasOwnProperty.call(jObj, key2))
          continue;
        if (typeof jObj[key2] === "undefined") {
          if (this.isAttribute(key2)) {
            val2 += "";
          }
        } else if (jObj[key2] === null) {
          if (this.isAttribute(key2)) {
            val2 += "";
          } else if (key2[0] === "?") {
            val2 += this.indentate(level) + "<" + key2 + "?" + this.tagEndChar;
          } else {
            val2 += this.indentate(level) + "<" + key2 + "/" + this.tagEndChar;
          }
        } else if (jObj[key2] instanceof Date) {
          val2 += this.buildTextValNode(jObj[key2], key2, "", level);
        } else if (typeof jObj[key2] !== "object") {
          const attr = this.isAttribute(key2);
          if (attr && !this.ignoreAttributesFn(attr, jPath)) {
            attrStr += this.buildAttrPairStr(attr, "" + jObj[key2]);
          } else if (!attr) {
            if (key2 === this.options.textNodeName) {
              let newval = this.options.tagValueProcessor(key2, "" + jObj[key2]);
              val2 += this.replaceEntitiesValue(newval);
            } else {
              val2 += this.buildTextValNode(jObj[key2], key2, "", level);
            }
          }
        } else if (Array.isArray(jObj[key2])) {
          const arrLen = jObj[key2].length;
          let listTagVal = "";
          let listTagAttr = "";
          for (let j = 0; j < arrLen; j++) {
            const item = jObj[key2][j];
            if (typeof item === "undefined") {
            } else if (item === null) {
              if (key2[0] === "?")
                val2 += this.indentate(level) + "<" + key2 + "?" + this.tagEndChar;
              else
                val2 += this.indentate(level) + "<" + key2 + "/" + this.tagEndChar;
            } else if (typeof item === "object") {
              if (this.options.oneListGroup) {
                const result = this.j2x(item, level + 1, ajPath.concat(key2));
                listTagVal += result.val;
                if (this.options.attributesGroupName && item.hasOwnProperty(this.options.attributesGroupName)) {
                  listTagAttr += result.attrStr;
                }
              } else {
                listTagVal += this.processTextOrObjNode(item, key2, level, ajPath);
              }
            } else {
              if (this.options.oneListGroup) {
                let textValue = this.options.tagValueProcessor(key2, item);
                textValue = this.replaceEntitiesValue(textValue);
                listTagVal += textValue;
              } else {
                listTagVal += this.buildTextValNode(item, key2, "", level);
              }
            }
          }
          if (this.options.oneListGroup) {
            listTagVal = this.buildObjectNode(listTagVal, key2, listTagAttr, level);
          }
          val2 += listTagVal;
        } else {
          if (this.options.attributesGroupName && key2 === this.options.attributesGroupName) {
            const Ks = Object.keys(jObj[key2]);
            const L = Ks.length;
            for (let j = 0; j < L; j++) {
              attrStr += this.buildAttrPairStr(Ks[j], "" + jObj[key2][Ks[j]]);
            }
          } else {
            val2 += this.processTextOrObjNode(jObj[key2], key2, level, ajPath);
          }
        }
      }
      return { attrStr, val: val2 };
    };
    Builder.prototype.buildAttrPairStr = function(attrName, val2) {
      val2 = this.options.attributeValueProcessor(attrName, "" + val2);
      val2 = this.replaceEntitiesValue(val2);
      if (this.options.suppressBooleanAttributes && val2 === "true") {
        return " " + attrName;
      } else
        return " " + attrName + '="' + val2 + '"';
    };
    function processTextOrObjNode(object, key2, level, ajPath) {
      const result = this.j2x(object, level + 1, ajPath.concat(key2));
      if (object[this.options.textNodeName] !== void 0 && Object.keys(object).length === 1) {
        return this.buildTextValNode(object[this.options.textNodeName], key2, result.attrStr, level);
      } else {
        return this.buildObjectNode(result.val, key2, result.attrStr, level);
      }
    }
    Builder.prototype.buildObjectNode = function(val2, key2, attrStr, level) {
      if (val2 === "") {
        if (key2[0] === "?")
          return this.indentate(level) + "<" + key2 + attrStr + "?" + this.tagEndChar;
        else {
          return this.indentate(level) + "<" + key2 + attrStr + this.closeTag(key2) + this.tagEndChar;
        }
      } else {
        let tagEndExp = "</" + key2 + this.tagEndChar;
        let piClosingChar = "";
        if (key2[0] === "?") {
          piClosingChar = "?";
          tagEndExp = "";
        }
        if ((attrStr || attrStr === "") && val2.indexOf("<") === -1) {
          return this.indentate(level) + "<" + key2 + attrStr + piClosingChar + ">" + val2 + tagEndExp;
        } else if (this.options.commentPropName !== false && key2 === this.options.commentPropName && piClosingChar.length === 0) {
          return this.indentate(level) + `<!--${val2}-->` + this.newLine;
        } else {
          return this.indentate(level) + "<" + key2 + attrStr + piClosingChar + this.tagEndChar + val2 + this.indentate(level) + tagEndExp;
        }
      }
    };
    Builder.prototype.closeTag = function(key2) {
      let closeTag = "";
      if (this.options.unpairedTags.indexOf(key2) !== -1) {
        if (!this.options.suppressUnpairedNode)
          closeTag = "/";
      } else if (this.options.suppressEmptyNode) {
        closeTag = "/";
      } else {
        closeTag = `></${key2}`;
      }
      return closeTag;
    };
    Builder.prototype.buildTextValNode = function(val2, key2, attrStr, level) {
      if (this.options.cdataPropName !== false && key2 === this.options.cdataPropName) {
        return this.indentate(level) + `<![CDATA[${val2}]]>` + this.newLine;
      } else if (this.options.commentPropName !== false && key2 === this.options.commentPropName) {
        return this.indentate(level) + `<!--${val2}-->` + this.newLine;
      } else if (key2[0] === "?") {
        return this.indentate(level) + "<" + key2 + attrStr + "?" + this.tagEndChar;
      } else {
        let textValue = this.options.tagValueProcessor(key2, val2);
        textValue = this.replaceEntitiesValue(textValue);
        if (textValue === "") {
          return this.indentate(level) + "<" + key2 + attrStr + this.closeTag(key2) + this.tagEndChar;
        } else {
          return this.indentate(level) + "<" + key2 + attrStr + ">" + textValue + "</" + key2 + this.tagEndChar;
        }
      }
    };
    Builder.prototype.replaceEntitiesValue = function(textValue) {
      if (textValue && textValue.length > 0 && this.options.processEntities) {
        for (let i2 = 0; i2 < this.options.entities.length; i2++) {
          const entity = this.options.entities[i2];
          textValue = textValue.replace(entity.regex, entity.val);
        }
      }
      return textValue;
    };
    function indentate(level) {
      return this.options.indentBy.repeat(level);
    }
    function isAttribute(name) {
      if (name.startsWith(this.options.attributeNamePrefix) && name !== this.options.textNodeName) {
        return name.substr(this.attrPrefixLen);
      } else {
        return false;
      }
    }
    module.exports = Builder;
  }
});

// node_modules/fast-xml-parser/src/fxp.js
var require_fxp = __commonJS({
  "node_modules/fast-xml-parser/src/fxp.js"(exports, module) {
    "use strict";
    var validator = require_validator();
    var XMLParser = require_XMLParser();
    var XMLBuilder2 = require_json2xml();
    module.exports = {
      XMLParser,
      XMLValidator: validator,
      XMLBuilder: XMLBuilder2
    };
  }
});

// node_modules/is-regexp/index.js
var require_is_regexp = __commonJS({
  "node_modules/is-regexp/index.js"(exports, module) {
    "use strict";
    module.exports = function(re) {
      return Object.prototype.toString.call(re) === "[object RegExp]";
    };
  }
});

// node_modules/is-obj/index.js
var require_is_obj = __commonJS({
  "node_modules/is-obj/index.js"(exports, module) {
    "use strict";
    module.exports = function(x) {
      var type = typeof x;
      return x !== null && (type === "object" || type === "function");
    };
  }
});

// node_modules/get-own-enumerable-property-symbols/lib/index.js
var require_lib = __commonJS({
  "node_modules/get-own-enumerable-property-symbols/lib/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.default = (object) => Object.getOwnPropertySymbols(object).filter((keySymbol) => Object.prototype.propertyIsEnumerable.call(object, keySymbol));
  }
});

// node_modules/stringify-object/index.js
var require_stringify_object = __commonJS({
  "node_modules/stringify-object/index.js"(exports, module) {
    "use strict";
    var isRegexp2 = require_is_regexp();
    var isObj = require_is_obj();
    var getOwnEnumPropSymbols = require_lib().default;
    module.exports = (val2, opts, pad2) => {
      const seen = [];
      return function stringify(val3, opts2, pad3) {
        opts2 = opts2 || {};
        opts2.indent = opts2.indent || "	";
        pad3 = pad3 || "";
        let tokens;
        if (opts2.inlineCharacterLimit === void 0) {
          tokens = {
            newLine: "\n",
            newLineOrSpace: "\n",
            pad: pad3,
            indent: pad3 + opts2.indent
          };
        } else {
          tokens = {
            newLine: "@@__STRINGIFY_OBJECT_NEW_LINE__@@",
            newLineOrSpace: "@@__STRINGIFY_OBJECT_NEW_LINE_OR_SPACE__@@",
            pad: "@@__STRINGIFY_OBJECT_PAD__@@",
            indent: "@@__STRINGIFY_OBJECT_INDENT__@@"
          };
        }
        const expandWhiteSpace = (string) => {
          if (opts2.inlineCharacterLimit === void 0) {
            return string;
          }
          const oneLined = string.replace(new RegExp(tokens.newLine, "g"), "").replace(new RegExp(tokens.newLineOrSpace, "g"), " ").replace(new RegExp(tokens.pad + "|" + tokens.indent, "g"), "");
          if (oneLined.length <= opts2.inlineCharacterLimit) {
            return oneLined;
          }
          return string.replace(new RegExp(tokens.newLine + "|" + tokens.newLineOrSpace, "g"), "\n").replace(new RegExp(tokens.pad, "g"), pad3).replace(new RegExp(tokens.indent, "g"), pad3 + opts2.indent);
        };
        if (seen.indexOf(val3) !== -1) {
          return '"[Circular]"';
        }
        if (val3 === null || val3 === void 0 || typeof val3 === "number" || typeof val3 === "boolean" || typeof val3 === "function" || typeof val3 === "symbol" || isRegexp2(val3)) {
          return String(val3);
        }
        if (val3 instanceof Date) {
          return `new Date('${val3.toISOString()}')`;
        }
        if (Array.isArray(val3)) {
          if (val3.length === 0) {
            return "[]";
          }
          seen.push(val3);
          const ret = "[" + tokens.newLine + val3.map((el, i2) => {
            const eol = val3.length - 1 === i2 ? tokens.newLine : "," + tokens.newLineOrSpace;
            let value = stringify(el, opts2, pad3 + opts2.indent);
            if (opts2.transform) {
              value = opts2.transform(val3, i2, value);
            }
            return tokens.indent + value + eol;
          }).join("") + tokens.pad + "]";
          seen.pop();
          return expandWhiteSpace(ret);
        }
        if (isObj(val3)) {
          let objKeys = Object.keys(val3).concat(getOwnEnumPropSymbols(val3));
          if (opts2.filter) {
            objKeys = objKeys.filter((el) => opts2.filter(val3, el));
          }
          if (objKeys.length === 0) {
            return "{}";
          }
          seen.push(val3);
          const ret = "{" + tokens.newLine + objKeys.map((el, i2) => {
            const eol = objKeys.length - 1 === i2 ? tokens.newLine : "," + tokens.newLineOrSpace;
            const isSymbol2 = typeof el === "symbol";
            const isClassic = !isSymbol2 && /^[a-z$_][a-z$_0-9]*$/i.test(el);
            const key2 = isSymbol2 || isClassic ? el : stringify(el, opts2);
            let value = stringify(val3[el], opts2, pad3 + opts2.indent);
            if (opts2.transform) {
              value = opts2.transform(val3, el, value);
            }
            return tokens.indent + String(key2) + ": " + value + eol;
          }).join("") + tokens.pad + "}";
          seen.pop();
          return expandWhiteSpace(ret);
        }
        val3 = String(val3).replace(/[\r\n]/g, (x) => x === "\n" ? "\\n" : "\\r");
        if (opts2.singleQuotes === false) {
          val3 = val3.replace(/"/g, '\\"');
          return `"${val3}"`;
        }
        val3 = val3.replace(/\\?'/g, "\\'");
        return `'${val3}'`;
      }(val2, opts, pad2);
    };
  }
});

// node_modules/fast-deep-equal/index.js
var require_fast_deep_equal = __commonJS({
  "node_modules/fast-deep-equal/index.js"(exports, module) {
    "use strict";
    module.exports = function equal(a, b) {
      if (a === b)
        return true;
      if (a && b && typeof a == "object" && typeof b == "object") {
        if (a.constructor !== b.constructor)
          return false;
        var length, i2, keys;
        if (Array.isArray(a)) {
          length = a.length;
          if (length != b.length)
            return false;
          for (i2 = length; i2-- !== 0; )
            if (!equal(a[i2], b[i2]))
              return false;
          return true;
        }
        if (a.constructor === RegExp)
          return a.source === b.source && a.flags === b.flags;
        if (a.valueOf !== Object.prototype.valueOf)
          return a.valueOf() === b.valueOf();
        if (a.toString !== Object.prototype.toString)
          return a.toString() === b.toString();
        keys = Object.keys(a);
        length = keys.length;
        if (length !== Object.keys(b).length)
          return false;
        for (i2 = length; i2-- !== 0; )
          if (!Object.prototype.hasOwnProperty.call(b, keys[i2]))
            return false;
        for (i2 = length; i2-- !== 0; ) {
          var key2 = keys[i2];
          if (!equal(a[key2], b[key2]))
            return false;
        }
        return true;
      }
      return a !== a && b !== b;
    };
  }
});

// node_modules/stickyfill/index.js
var require_stickyfill = __commonJS({
  "node_modules/stickyfill/index.js"(exports, module) {
    module.exports = function(doc, win) {
      if (!doc) {
        doc = document;
      }
      if (!win) {
        win = window;
      }
      var watchArray = [], scroll, initialized = false, html2 = doc.documentElement, noop = function() {
      }, checkTimer, hiddenPropertyName = "hidden", visibilityChangeEventName = "visibilitychange";
      if (doc.webkitHidden !== void 0) {
        hiddenPropertyName = "webkitHidden";
        visibilityChangeEventName = "webkitvisibilitychange";
      }
      if (!win.getComputedStyle) {
        seppuku();
      }
      var prefixes = ["", "-webkit-", "-moz-", "-ms-"], block = document.createElement("div");
      for (var i2 = prefixes.length - 1; i2 >= 0; i2--) {
        try {
          block.style.position = prefixes[i2] + "sticky";
        } catch (e2) {
        }
        if (block.style.position != "") {
          seppuku();
        }
      }
      updateScrollPos();
      function seppuku() {
        init = add = rebuild = pause = stop = kill = noop;
      }
      function mergeObjects(targetObj, sourceObject) {
        for (key in sourceObject) {
          if (sourceObject.hasOwnProperty(key)) {
            targetObj[key] = sourceObject[key];
          }
        }
      }
      function parseNumeric(val2) {
        return parseFloat(val2) || 0;
      }
      function updateScrollPos() {
        scroll = {
          top: win.pageYOffset,
          left: win.pageXOffset
        };
      }
      function onScroll() {
        if (win.pageXOffset != scroll.left) {
          updateScrollPos();
          rebuild();
          return;
        }
        if (win.pageYOffset != scroll.top) {
          updateScrollPos();
          recalcAllPos();
        }
      }
      function onWheel(event) {
        setTimeout(function() {
          if (win.pageYOffset != scroll.top) {
            scroll.top = win.pageYOffset;
            recalcAllPos();
          }
        }, 0);
      }
      function recalcAllPos() {
        for (var i3 = watchArray.length - 1; i3 >= 0; i3--) {
          recalcElementPos(watchArray[i3]);
        }
      }
      function recalcElementPos(el) {
        if (!el.inited)
          return;
        var currentMode = scroll.top <= el.limit.start ? 0 : scroll.top >= el.limit.end ? 2 : 1;
        if (el.mode != currentMode) {
          switchElementMode(el, currentMode);
        }
      }
      function fastCheck() {
        for (var i3 = watchArray.length - 1; i3 >= 0; i3--) {
          if (!watchArray[i3].inited)
            continue;
          var deltaTop = Math.abs(getDocOffsetTop(watchArray[i3].clone) - watchArray[i3].docOffsetTop), deltaHeight = Math.abs(watchArray[i3].parent.node.offsetHeight - watchArray[i3].parent.height);
          if (deltaTop >= 2 || deltaHeight >= 2)
            return false;
        }
        return true;
      }
      function initElement(el) {
        if (isNaN(parseFloat(el.computed.top)) || el.isCell)
          return;
        el.inited = true;
        if (!el.clone)
          clone2(el);
        if (el.parent.computed.position != "absolute" && el.parent.computed.position != "relative")
          el.parent.node.style.position = "relative";
        recalcElementPos(el);
        el.parent.height = el.parent.node.offsetHeight;
        el.docOffsetTop = getDocOffsetTop(el.clone);
      }
      function deinitElement(el) {
        var deinitParent = true;
        el.clone && killClone(el);
        mergeObjects(el.node.style, el.css);
        for (var i3 = watchArray.length - 1; i3 >= 0; i3--) {
          if (watchArray[i3].node !== el.node && watchArray[i3].parent.node === el.parent.node) {
            deinitParent = false;
            break;
          }
        }
        ;
        if (deinitParent)
          el.parent.node.style.position = el.parent.css.position;
        el.mode = -1;
      }
      function initAll() {
        for (var i3 = watchArray.length - 1; i3 >= 0; i3--) {
          initElement(watchArray[i3]);
        }
      }
      function deinitAll() {
        for (var i3 = watchArray.length - 1; i3 >= 0; i3--) {
          deinitElement(watchArray[i3]);
        }
      }
      function switchElementMode(el, mode) {
        var nodeStyle = el.node.style;
        switch (mode) {
          case 0:
            nodeStyle.position = "absolute";
            nodeStyle.left = el.offset.left + "px";
            nodeStyle.right = el.offset.right + "px";
            nodeStyle.top = el.offset.top + "px";
            nodeStyle.bottom = "auto";
            nodeStyle.width = "auto";
            nodeStyle.marginLeft = 0;
            nodeStyle.marginRight = 0;
            nodeStyle.marginTop = 0;
            break;
          case 1:
            nodeStyle.position = "fixed";
            nodeStyle.left = el.box.left + "px";
            nodeStyle.right = el.box.right + "px";
            nodeStyle.top = el.css.top;
            nodeStyle.bottom = "auto";
            nodeStyle.width = "auto";
            nodeStyle.marginLeft = 0;
            nodeStyle.marginRight = 0;
            nodeStyle.marginTop = 0;
            break;
          case 2:
            nodeStyle.position = "absolute";
            nodeStyle.left = el.offset.left + "px";
            nodeStyle.right = el.offset.right + "px";
            nodeStyle.top = "auto";
            nodeStyle.bottom = 0;
            nodeStyle.width = "auto";
            nodeStyle.marginLeft = 0;
            nodeStyle.marginRight = 0;
            break;
        }
        el.mode = mode;
      }
      function clone2(el) {
        el.clone = document.createElement("div");
        var refElement = el.node.nextSibling || el.node, cloneStyle = el.clone.style;
        cloneStyle.height = el.height + "px";
        cloneStyle.width = el.width + "px";
        cloneStyle.marginTop = el.computed.marginTop;
        cloneStyle.marginBottom = el.computed.marginBottom;
        cloneStyle.marginLeft = el.computed.marginLeft;
        cloneStyle.marginRight = el.computed.marginRight;
        cloneStyle.padding = cloneStyle.border = cloneStyle.borderSpacing = 0;
        cloneStyle.fontSize = "1em";
        cloneStyle.position = "static";
        cloneStyle.cssFloat = el.computed.cssFloat;
        el.node.parentNode.insertBefore(el.clone, refElement);
      }
      function killClone(el) {
        el.clone.parentNode.removeChild(el.clone);
        el.clone = void 0;
      }
      function getElementParams(node) {
        var computedStyle = getComputedStyle(node), parentNode = node.parentNode, parentComputedStyle = getComputedStyle(parentNode), cachedPosition = node.style.position;
        node.style.position = "relative";
        var computed = {
          top: computedStyle.top,
          marginTop: computedStyle.marginTop,
          marginBottom: computedStyle.marginBottom,
          marginLeft: computedStyle.marginLeft,
          marginRight: computedStyle.marginRight,
          cssFloat: computedStyle.cssFloat
        }, numeric = {
          top: parseNumeric(computedStyle.top),
          marginBottom: parseNumeric(computedStyle.marginBottom),
          paddingLeft: parseNumeric(computedStyle.paddingLeft),
          paddingRight: parseNumeric(computedStyle.paddingRight),
          borderLeftWidth: parseNumeric(computedStyle.borderLeftWidth),
          borderRightWidth: parseNumeric(computedStyle.borderRightWidth)
        };
        node.style.position = cachedPosition;
        var css = {
          position: node.style.position,
          top: node.style.top,
          bottom: node.style.bottom,
          left: node.style.left,
          right: node.style.right,
          width: node.style.width,
          marginTop: node.style.marginTop,
          marginLeft: node.style.marginLeft,
          marginRight: node.style.marginRight
        }, nodeOffset = getElementOffset(node), parentOffset = getElementOffset(parentNode), parent = {
          node: parentNode,
          css: {
            position: parentNode.style.position
          },
          computed: {
            position: parentComputedStyle.position
          },
          numeric: {
            borderLeftWidth: parseNumeric(parentComputedStyle.borderLeftWidth),
            borderRightWidth: parseNumeric(parentComputedStyle.borderRightWidth),
            borderTopWidth: parseNumeric(parentComputedStyle.borderTopWidth),
            borderBottomWidth: parseNumeric(parentComputedStyle.borderBottomWidth)
          }
        }, el = {
          node,
          box: {
            left: nodeOffset.win.left,
            right: html2.clientWidth - nodeOffset.win.right
          },
          offset: {
            top: nodeOffset.win.top - parentOffset.win.top - parent.numeric.borderTopWidth,
            left: nodeOffset.win.left - parentOffset.win.left - parent.numeric.borderLeftWidth,
            right: -nodeOffset.win.right + parentOffset.win.right - parent.numeric.borderRightWidth
          },
          css,
          isCell: computedStyle.display == "table-cell",
          computed,
          numeric,
          width: nodeOffset.win.right - nodeOffset.win.left,
          height: nodeOffset.win.bottom - nodeOffset.win.top,
          mode: -1,
          inited: false,
          parent,
          limit: {
            start: nodeOffset.doc.top - numeric.top,
            end: parentOffset.doc.top + parentNode.offsetHeight - parent.numeric.borderBottomWidth - node.offsetHeight - numeric.top - numeric.marginBottom
          }
        };
        return el;
      }
      function getDocOffsetTop(node) {
        var docOffsetTop = 0;
        while (node) {
          docOffsetTop += node.offsetTop;
          node = node.offsetParent;
        }
        return docOffsetTop;
      }
      function getElementOffset(node) {
        var box = node.getBoundingClientRect();
        return {
          doc: {
            top: box.top + win.pageYOffset,
            left: box.left + win.pageXOffset
          },
          win: box
        };
      }
      function startFastCheckTimer() {
        checkTimer = setInterval(function() {
          !fastCheck() && rebuild();
        }, 500);
      }
      function stopFastCheckTimer() {
        clearInterval(checkTimer);
      }
      function handlePageVisibilityChange() {
        if (!initialized)
          return;
        if (document[hiddenPropertyName]) {
          stopFastCheckTimer();
        } else {
          startFastCheckTimer();
        }
      }
      function init() {
        if (initialized)
          return;
        updateScrollPos();
        initAll();
        win.addEventListener("scroll", onScroll);
        win.addEventListener("wheel", onWheel);
        win.addEventListener("resize", rebuild);
        win.addEventListener("orientationchange", rebuild);
        doc.addEventListener(visibilityChangeEventName, handlePageVisibilityChange);
        startFastCheckTimer();
        initialized = true;
      }
      function rebuild() {
        if (!initialized)
          return;
        deinitAll();
        for (var i3 = watchArray.length - 1; i3 >= 0; i3--) {
          watchArray[i3] = getElementParams(watchArray[i3].node);
        }
        initAll();
      }
      function pause() {
        win.removeEventListener("scroll", onScroll);
        win.removeEventListener("wheel", onWheel);
        win.removeEventListener("resize", rebuild);
        win.removeEventListener("orientationchange", rebuild);
        doc.removeEventListener(visibilityChangeEventName, handlePageVisibilityChange);
        stopFastCheckTimer();
        initialized = false;
      }
      function stop() {
        pause();
        deinitAll();
      }
      function kill() {
        stop();
        while (watchArray.length) {
          watchArray.pop();
        }
      }
      function add(node) {
        for (var i3 = watchArray.length - 1; i3 >= 0; i3--) {
          if (watchArray[i3].node === node)
            return;
        }
        ;
        var el = getElementParams(node);
        watchArray.push(el);
        if (!initialized) {
          init();
        } else {
          initElement(el);
        }
      }
      function remove(node) {
        for (var i3 = watchArray.length - 1; i3 >= 0; i3--) {
          if (watchArray[i3].node === node) {
            deinitElement(watchArray[i3]);
            watchArray.splice(i3, 1);
          }
        }
        ;
      }
      return {
        stickies: watchArray,
        add,
        remove,
        init,
        rebuild,
        pause,
        stop,
        kill
      };
    };
  }
});

// node_modules/@redocly/openapi-docs/lib-esm/components/RedoclyOpenAPIDocs/RedoclyOpenAPIDocs.js
init_src();
import { jsx as _jsx112, jsxs as _jsxs81, Fragment as _Fragment36 } from "react/jsx-runtime";
import { memo as memo58, useRef as useRef10 } from "react";

// node_modules/@redocly/openapi-docs/lib-esm/components/RedoclyOpenAPIDocs/Providers.js
init_dist();
init_src();
import { jsx as _jsx41, jsxs as _jsxs24 } from "react/jsx-runtime";
import { cloneElement, isValidElement, memo as memo25, useCallback as useCallback11, useEffect as useEffect7, useMemo as useMemo10, useState as useState9 } from "react";

// node_modules/jotai/esm/vanilla.mjs
var keyCount = 0;
function atom(read, write) {
  const key2 = `atom${++keyCount}`;
  const config = {
    toString() {
      return (import.meta.env ? import.meta.env.MODE : void 0) !== "production" && this.debugLabel ? key2 + ":" + this.debugLabel : key2;
    }
  };
  if (typeof read === "function") {
    config.read = read;
  } else {
    config.init = read;
    config.read = defaultRead;
    config.write = defaultWrite;
  }
  if (write) {
    config.write = write;
  }
  return config;
}
function defaultRead(get) {
  return get(this);
}
function defaultWrite(get, set, arg) {
  return set(
    this,
    typeof arg === "function" ? arg(get(this)) : arg
  );
}
var isSelfAtom = (atom2, a) => atom2.unstable_is ? atom2.unstable_is(a) : a === atom2;
var hasInitialValue = (atom2) => "init" in atom2;
var isActuallyWritableAtom = (atom2) => !!atom2.write;
var cancelablePromiseMap = /* @__PURE__ */ new WeakMap();
var isPendingPromise = (value) => {
  var _a;
  return isPromiseLike(value) && !((_a = cancelablePromiseMap.get(value)) == null ? void 0 : _a[1]);
};
var cancelPromise = (promise, nextValue) => {
  const promiseState = cancelablePromiseMap.get(promise);
  if (promiseState) {
    promiseState[1] = true;
    promiseState[0].forEach((fn) => fn(nextValue));
  } else if ((import.meta.env ? import.meta.env.MODE : void 0) !== "production") {
    throw new Error("[Bug] cancelable promise not found");
  }
};
var patchPromiseForCancelability = (promise) => {
  if (cancelablePromiseMap.has(promise)) {
    return;
  }
  const promiseState = [/* @__PURE__ */ new Set(), false];
  cancelablePromiseMap.set(promise, promiseState);
  const settle = () => {
    promiseState[1] = true;
  };
  promise.then(settle, settle);
  promise.onCancel = (fn) => {
    promiseState[0].add(fn);
  };
};
var isPromiseLike = (x) => typeof (x == null ? void 0 : x.then) === "function";
var isAtomStateInitialized = (atomState) => "v" in atomState || "e" in atomState;
var returnAtomValue = (atomState) => {
  if ("e" in atomState) {
    throw atomState.e;
  }
  if ((import.meta.env ? import.meta.env.MODE : void 0) !== "production" && !("v" in atomState)) {
    throw new Error("[Bug] atom state is not initialized");
  }
  return atomState.v;
};
var addPendingPromiseToDependency = (atom2, promise, dependencyAtomState) => {
  if (!dependencyAtomState.p.has(atom2)) {
    dependencyAtomState.p.add(atom2);
    promise.then(
      () => {
        dependencyAtomState.p.delete(atom2);
      },
      () => {
        dependencyAtomState.p.delete(atom2);
      }
    );
  }
};
var addDependency = (pending, atom2, atomState, a, aState) => {
  var _a;
  if ((import.meta.env ? import.meta.env.MODE : void 0) !== "production" && a === atom2) {
    throw new Error("[Bug] atom cannot depend on itself");
  }
  atomState.d.set(a, aState.n);
  if (isPendingPromise(atomState.v)) {
    addPendingPromiseToDependency(atom2, atomState.v, aState);
  }
  (_a = aState.m) == null ? void 0 : _a.t.add(atom2);
  if (pending) {
    addPendingDependent(pending, a, atom2);
  }
};
var createPending = () => [/* @__PURE__ */ new Map(), /* @__PURE__ */ new Map(), /* @__PURE__ */ new Set()];
var addPendingAtom = (pending, atom2, atomState) => {
  if (!pending[0].has(atom2)) {
    pending[0].set(atom2, /* @__PURE__ */ new Set());
  }
  pending[1].set(atom2, atomState);
};
var addPendingDependent = (pending, atom2, dependent) => {
  const dependents = pending[0].get(atom2);
  if (dependents) {
    dependents.add(dependent);
  }
};
var getPendingDependents = (pending, atom2) => pending[0].get(atom2);
var addPendingFunction = (pending, fn) => {
  pending[2].add(fn);
};
var flushPending = (pending) => {
  let error;
  let hasError = false;
  const call = (fn) => {
    try {
      fn();
    } catch (e2) {
      if (!hasError) {
        error = e2;
        hasError = true;
      }
    }
  };
  while (pending[1].size || pending[2].size) {
    pending[0].clear();
    const atomStates = new Set(pending[1].values());
    pending[1].clear();
    const functions = new Set(pending[2]);
    pending[2].clear();
    atomStates.forEach((atomState) => {
      var _a;
      return (_a = atomState.m) == null ? void 0 : _a.l.forEach(call);
    });
    functions.forEach(call);
  }
  if (hasError) {
    throw error;
  }
};
var buildStore = (...[getAtomState, atomRead, atomWrite, atomOnMount]) => {
  let debugMountedAtoms;
  if ((import.meta.env ? import.meta.env.MODE : void 0) !== "production") {
    debugMountedAtoms = /* @__PURE__ */ new Set();
  }
  const setAtomStateValueOrPromise = (atom2, atomState, valueOrPromise) => {
    const hasPrevValue = "v" in atomState;
    const prevValue = atomState.v;
    const pendingPromise = isPendingPromise(atomState.v) ? atomState.v : null;
    if (isPromiseLike(valueOrPromise)) {
      patchPromiseForCancelability(valueOrPromise);
      for (const a of atomState.d.keys()) {
        addPendingPromiseToDependency(atom2, valueOrPromise, getAtomState(a));
      }
      atomState.v = valueOrPromise;
      delete atomState.e;
    } else {
      atomState.v = valueOrPromise;
      delete atomState.e;
    }
    if (!hasPrevValue || !Object.is(prevValue, atomState.v)) {
      ++atomState.n;
      if (pendingPromise) {
        cancelPromise(pendingPromise, valueOrPromise);
      }
    }
  };
  const readAtomState = (pending, atom2, dirtyAtoms) => {
    var _a;
    const atomState = getAtomState(atom2);
    if (isAtomStateInitialized(atomState)) {
      if (atomState.m && !(dirtyAtoms == null ? void 0 : dirtyAtoms.has(atom2))) {
        return atomState;
      }
      if (Array.from(atomState.d).every(
        ([a, n2]) => (
          // Recursively, read the atom state of the dependency, and
          // check if the atom epoch number is unchanged
          readAtomState(pending, a, dirtyAtoms).n === n2
        )
      )) {
        return atomState;
      }
    }
    atomState.d.clear();
    let isSync = true;
    const getter = (a) => {
      if (isSelfAtom(atom2, a)) {
        const aState2 = getAtomState(a);
        if (!isAtomStateInitialized(aState2)) {
          if (hasInitialValue(a)) {
            setAtomStateValueOrPromise(a, aState2, a.init);
          } else {
            throw new Error("no atom init");
          }
        }
        return returnAtomValue(aState2);
      }
      const aState = readAtomState(pending, a, dirtyAtoms);
      try {
        return returnAtomValue(aState);
      } finally {
        if (isSync) {
          addDependency(pending, atom2, atomState, a, aState);
        } else {
          const pending2 = createPending();
          addDependency(pending2, atom2, atomState, a, aState);
          mountDependencies(pending2, atom2, atomState);
          flushPending(pending2);
        }
      }
    };
    let controller;
    let setSelf;
    const options = {
      get signal() {
        if (!controller) {
          controller = new AbortController();
        }
        return controller.signal;
      },
      get setSelf() {
        if ((import.meta.env ? import.meta.env.MODE : void 0) !== "production" && !isActuallyWritableAtom(atom2)) {
          console.warn("setSelf function cannot be used with read-only atom");
        }
        if (!setSelf && isActuallyWritableAtom(atom2)) {
          setSelf = (...args) => {
            if ((import.meta.env ? import.meta.env.MODE : void 0) !== "production" && isSync) {
              console.warn("setSelf function cannot be called in sync");
            }
            if (!isSync) {
              return writeAtom2(atom2, ...args);
            }
          };
        }
        return setSelf;
      }
    };
    try {
      const valueOrPromise = atomRead(atom2, getter, options);
      setAtomStateValueOrPromise(atom2, atomState, valueOrPromise);
      if (isPromiseLike(valueOrPromise)) {
        (_a = valueOrPromise.onCancel) == null ? void 0 : _a.call(valueOrPromise, () => controller == null ? void 0 : controller.abort());
        const complete = () => {
          if (atomState.m) {
            const pending2 = createPending();
            mountDependencies(pending2, atom2, atomState);
            flushPending(pending2);
          }
        };
        valueOrPromise.then(complete, complete);
      }
      return atomState;
    } catch (error) {
      delete atomState.v;
      atomState.e = error;
      ++atomState.n;
      return atomState;
    } finally {
      isSync = false;
    }
  };
  const readAtom2 = (atom2) => returnAtomValue(readAtomState(void 0, atom2));
  const getDependents = (pending, atom2, atomState) => {
    var _a, _b;
    const dependents = /* @__PURE__ */ new Map();
    for (const a of ((_a = atomState.m) == null ? void 0 : _a.t) || []) {
      dependents.set(a, getAtomState(a));
    }
    for (const atomWithPendingPromise of atomState.p) {
      dependents.set(
        atomWithPendingPromise,
        getAtomState(atomWithPendingPromise)
      );
    }
    (_b = getPendingDependents(pending, atom2)) == null ? void 0 : _b.forEach((dependent) => {
      dependents.set(dependent, getAtomState(dependent));
    });
    return dependents;
  };
  function getSortedDependents(pending, rootAtom, rootAtomState) {
    const sorted = [];
    const visiting = /* @__PURE__ */ new Set();
    const visited = /* @__PURE__ */ new Set();
    const stack = [[rootAtom, rootAtomState]];
    while (stack.length > 0) {
      const [a, aState] = stack[stack.length - 1];
      if (visited.has(a)) {
        stack.pop();
        continue;
      }
      if (visiting.has(a)) {
        sorted.push([a, aState, aState.n]);
        visited.add(a);
        stack.pop();
        continue;
      }
      visiting.add(a);
      for (const [d, s] of getDependents(pending, a, aState)) {
        if (a !== d && !visiting.has(d)) {
          stack.push([d, s]);
        }
      }
    }
    return [sorted, visited];
  }
  const recomputeDependents = (pending, atom2, atomState) => {
    const [topsortedAtoms, markedAtoms] = getSortedDependents(
      pending,
      atom2,
      atomState
    );
    const changedAtoms = /* @__PURE__ */ new Set([atom2]);
    for (let i2 = topsortedAtoms.length - 1; i2 >= 0; --i2) {
      const [a, aState, prevEpochNumber] = topsortedAtoms[i2];
      let hasChangedDeps = false;
      for (const dep of aState.d.keys()) {
        if (dep !== a && changedAtoms.has(dep)) {
          hasChangedDeps = true;
          break;
        }
      }
      if (hasChangedDeps) {
        readAtomState(pending, a, markedAtoms);
        mountDependencies(pending, a, aState);
        if (prevEpochNumber !== aState.n) {
          addPendingAtom(pending, a, aState);
          changedAtoms.add(a);
        }
      }
      markedAtoms.delete(a);
    }
  };
  const writeAtomState = (pending, atom2, ...args) => {
    let isSync = true;
    const getter = (a) => returnAtomValue(readAtomState(pending, a));
    const setter = (a, ...args2) => {
      const aState = getAtomState(a);
      try {
        if (isSelfAtom(atom2, a)) {
          if (!hasInitialValue(a)) {
            throw new Error("atom not writable");
          }
          const prevEpochNumber = aState.n;
          const v = args2[0];
          setAtomStateValueOrPromise(a, aState, v);
          mountDependencies(pending, a, aState);
          if (prevEpochNumber !== aState.n) {
            addPendingAtom(pending, a, aState);
            recomputeDependents(pending, a, aState);
          }
          return void 0;
        } else {
          return writeAtomState(pending, a, ...args2);
        }
      } finally {
        if (!isSync) {
          flushPending(pending);
        }
      }
    };
    try {
      return atomWrite(atom2, getter, setter, ...args);
    } finally {
      isSync = false;
    }
  };
  const writeAtom2 = (atom2, ...args) => {
    const pending = createPending();
    try {
      return writeAtomState(pending, atom2, ...args);
    } finally {
      flushPending(pending);
    }
  };
  const mountDependencies = (pending, atom2, atomState) => {
    if (atomState.m && !isPendingPromise(atomState.v)) {
      for (const a of atomState.d.keys()) {
        if (!atomState.m.d.has(a)) {
          const aMounted = mountAtom(pending, a, getAtomState(a));
          aMounted.t.add(atom2);
          atomState.m.d.add(a);
        }
      }
      for (const a of atomState.m.d || []) {
        if (!atomState.d.has(a)) {
          atomState.m.d.delete(a);
          const aMounted = unmountAtom(pending, a, getAtomState(a));
          aMounted == null ? void 0 : aMounted.t.delete(atom2);
        }
      }
    }
  };
  const mountAtom = (pending, atom2, atomState) => {
    if (!atomState.m) {
      readAtomState(pending, atom2);
      for (const a of atomState.d.keys()) {
        const aMounted = mountAtom(pending, a, getAtomState(a));
        aMounted.t.add(atom2);
      }
      atomState.m = {
        l: /* @__PURE__ */ new Set(),
        d: new Set(atomState.d.keys()),
        t: /* @__PURE__ */ new Set()
      };
      if ((import.meta.env ? import.meta.env.MODE : void 0) !== "production") {
        debugMountedAtoms.add(atom2);
      }
      if (isActuallyWritableAtom(atom2)) {
        const mounted = atomState.m;
        let setAtom;
        const createInvocationContext = (pending2, fn) => {
          let isSync = true;
          setAtom = (...args) => {
            try {
              return writeAtomState(pending2, atom2, ...args);
            } finally {
              if (!isSync) {
                flushPending(pending2);
              }
            }
          };
          try {
            return fn();
          } finally {
            isSync = false;
          }
        };
        addPendingFunction(pending, () => {
          const onUnmount = createInvocationContext(
            pending,
            () => atomOnMount(atom2, (...args) => setAtom(...args))
          );
          if (onUnmount) {
            mounted.u = (pending2) => createInvocationContext(pending2, onUnmount);
          }
        });
      }
    }
    return atomState.m;
  };
  const unmountAtom = (pending, atom2, atomState) => {
    if (atomState.m && !atomState.m.l.size && !Array.from(atomState.m.t).some((a) => {
      var _a;
      return (_a = getAtomState(a).m) == null ? void 0 : _a.d.has(atom2);
    })) {
      const onUnmount = atomState.m.u;
      if (onUnmount) {
        addPendingFunction(pending, () => onUnmount(pending));
      }
      delete atomState.m;
      if ((import.meta.env ? import.meta.env.MODE : void 0) !== "production") {
        debugMountedAtoms.delete(atom2);
      }
      for (const a of atomState.d.keys()) {
        const aMounted = unmountAtom(pending, a, getAtomState(a));
        aMounted == null ? void 0 : aMounted.t.delete(atom2);
      }
      return void 0;
    }
    return atomState.m;
  };
  const subscribeAtom = (atom2, listener) => {
    const pending = createPending();
    const atomState = getAtomState(atom2);
    const mounted = mountAtom(pending, atom2, atomState);
    const listeners = mounted.l;
    listeners.add(listener);
    flushPending(pending);
    return () => {
      listeners.delete(listener);
      const pending2 = createPending();
      unmountAtom(pending2, atom2, atomState);
      flushPending(pending2);
    };
  };
  const unstable_derive = (fn) => buildStore(...fn(getAtomState, atomRead, atomWrite, atomOnMount));
  const store = {
    get: readAtom2,
    set: writeAtom2,
    sub: subscribeAtom,
    unstable_derive
  };
  if ((import.meta.env ? import.meta.env.MODE : void 0) !== "production") {
    const devStore = {
      // store dev methods (these are tentative and subject to change without notice)
      dev4_get_internal_weak_map: () => ({
        get: (atom2) => {
          const atomState = getAtomState(atom2);
          if (atomState.n === 0) {
            return void 0;
          }
          return atomState;
        }
      }),
      dev4_get_mounted_atoms: () => debugMountedAtoms,
      dev4_restore_atoms: (values) => {
        const pending = createPending();
        for (const [atom2, value] of values) {
          if (hasInitialValue(atom2)) {
            const atomState = getAtomState(atom2);
            const prevEpochNumber = atomState.n;
            setAtomStateValueOrPromise(atom2, atomState, value);
            mountDependencies(pending, atom2, atomState);
            if (prevEpochNumber !== atomState.n) {
              addPendingAtom(pending, atom2, atomState);
              recomputeDependents(pending, atom2, atomState);
            }
          }
        }
        flushPending(pending);
      }
    };
    Object.assign(store, devStore);
  }
  return store;
};
var createStore = () => {
  const atomStateMap = /* @__PURE__ */ new WeakMap();
  const getAtomState = (atom2) => {
    if ((import.meta.env ? import.meta.env.MODE : void 0) !== "production" && !atom2) {
      throw new Error("Atom is undefined or null");
    }
    let atomState = atomStateMap.get(atom2);
    if (!atomState) {
      atomState = { d: /* @__PURE__ */ new Map(), p: /* @__PURE__ */ new Set(), n: 0 };
      atomStateMap.set(atom2, atomState);
    }
    return atomState;
  };
  return buildStore(
    getAtomState,
    (atom2, ...params) => atom2.read(...params),
    (atom2, ...params) => atom2.write(...params),
    (atom2, ...params) => {
      var _a;
      return (_a = atom2.onMount) == null ? void 0 : _a.call(atom2, ...params);
    }
  );
};
var defaultStore;
var getDefaultStore = () => {
  if (!defaultStore) {
    defaultStore = createStore();
    if ((import.meta.env ? import.meta.env.MODE : void 0) !== "production") {
      globalThis.__JOTAI_DEFAULT_STORE__ || (globalThis.__JOTAI_DEFAULT_STORE__ = defaultStore);
      if (globalThis.__JOTAI_DEFAULT_STORE__ !== defaultStore) {
        console.warn(
          "Detected multiple Jotai instances. It may cause unexpected behavior with the default store. https://github.com/pmndrs/jotai/discussions/2044"
        );
      }
    }
  }
  return defaultStore;
};

// node_modules/jotai/esm/react.mjs
import ReactExports, { createContext, useRef, createElement, useContext, useReducer, useEffect, useDebugValue, useCallback } from "react";
"use client";
var StoreContext = createContext(
  void 0
);
var useStore = (options) => {
  const store = useContext(StoreContext);
  return (options == null ? void 0 : options.store) || store || getDefaultStore();
};
var Provider = ({
  children,
  store
}) => {
  const storeRef = useRef();
  if (!store && !storeRef.current) {
    storeRef.current = createStore();
  }
  return createElement(
    StoreContext.Provider,
    {
      value: store || storeRef.current
    },
    children
  );
};
var isPromiseLike2 = (x) => typeof (x == null ? void 0 : x.then) === "function";
var attachPromiseMeta = (promise) => {
  promise.status = "pending";
  promise.then(
    (v) => {
      promise.status = "fulfilled";
      promise.value = v;
    },
    (e2) => {
      promise.status = "rejected";
      promise.reason = e2;
    }
  );
};
var use = ReactExports.use || ((promise) => {
  if (promise.status === "pending") {
    throw promise;
  } else if (promise.status === "fulfilled") {
    return promise.value;
  } else if (promise.status === "rejected") {
    throw promise.reason;
  } else {
    attachPromiseMeta(promise);
    throw promise;
  }
});
var continuablePromiseMap = /* @__PURE__ */ new WeakMap();
var createContinuablePromise = (promise) => {
  let continuablePromise = continuablePromiseMap.get(promise);
  if (!continuablePromise) {
    continuablePromise = new Promise((resolve, reject) => {
      let curr = promise;
      const onFulfilled = (me) => (v) => {
        if (curr === me) {
          resolve(v);
        }
      };
      const onRejected = (me) => (e2) => {
        if (curr === me) {
          reject(e2);
        }
      };
      const registerCancelHandler = (p) => {
        if ("onCancel" in p && typeof p.onCancel === "function") {
          p.onCancel((nextValue) => {
            if ((import.meta.env ? import.meta.env.MODE : void 0) !== "production" && nextValue === p) {
              throw new Error("[Bug] p is not updated even after cancelation");
            }
            if (isPromiseLike2(nextValue)) {
              continuablePromiseMap.set(nextValue, continuablePromise);
              curr = nextValue;
              nextValue.then(onFulfilled(nextValue), onRejected(nextValue));
              registerCancelHandler(nextValue);
            } else {
              resolve(nextValue);
            }
          });
        }
      };
      promise.then(onFulfilled(promise), onRejected(promise));
      registerCancelHandler(promise);
    });
    continuablePromiseMap.set(promise, continuablePromise);
  }
  return continuablePromise;
};
function useAtomValue(atom2, options) {
  const store = useStore(options);
  const [[valueFromReducer, storeFromReducer, atomFromReducer], rerender] = useReducer(
    (prev) => {
      const nextValue = store.get(atom2);
      if (Object.is(prev[0], nextValue) && prev[1] === store && prev[2] === atom2) {
        return prev;
      }
      return [nextValue, store, atom2];
    },
    void 0,
    () => [store.get(atom2), store, atom2]
  );
  let value = valueFromReducer;
  if (storeFromReducer !== store || atomFromReducer !== atom2) {
    rerender();
    value = store.get(atom2);
  }
  const delay = options == null ? void 0 : options.delay;
  useEffect(() => {
    const unsub = store.sub(atom2, () => {
      if (typeof delay === "number") {
        const value2 = store.get(atom2);
        if (isPromiseLike2(value2)) {
          attachPromiseMeta(createContinuablePromise(value2));
        }
        setTimeout(rerender, delay);
        return;
      }
      rerender();
    });
    rerender();
    return unsub;
  }, [store, atom2, delay]);
  useDebugValue(value);
  if (isPromiseLike2(value)) {
    const promise = createContinuablePromise(value);
    return use(promise);
  }
  return value;
}
function useSetAtom(atom2, options) {
  const store = useStore(options);
  const setAtom = useCallback(
    (...args) => {
      if ((import.meta.env ? import.meta.env.MODE : void 0) !== "production" && !("write" in atom2)) {
        throw new Error("not writable atom");
      }
      return store.set(atom2, ...args);
    },
    [store, atom2]
  );
  return setAtom;
}
function useAtom(atom2, options) {
  return [
    useAtomValue(atom2, options),
    // We do wrong type assertion here, which results in throwing an error.
    useSetAtom(atom2, options)
  ];
}

// node_modules/@redocly/openapi-docs/lib-esm/utils/JsonPointer.js
var import_json_pointer = __toESM(require_json_pointer());
var origParse = import_json_pointer.default.parse;
var JsonPointer = class {
  static baseName(t = "", e2 = 1) {
    const n2 = JsonPointer.parse(t);
    return n2[n2.length - e2];
  }
  static dirName(t, e2 = 1) {
    const n2 = JsonPointer.parse(t);
    return import_json_pointer.default.compile(n2.slice(0, n2.length - e2));
  }
  static relative(t, e2) {
    const n2 = JsonPointer.parse(t);
    return JsonPointer.parse(e2).slice(n2.length);
  }
  static parse(t = "") {
    let e2 = t;
    return "#" === e2.charAt(0) && (e2 = e2.substring(1)), origParse(e2);
  }
  static join(t, e2) {
    const n2 = JsonPointer.parse(t).concat(e2);
    return import_json_pointer.default.compile(n2);
  }
  static get(t, e2) {
    return import_json_pointer.default.get(t, e2);
  }
  static compile(t) {
    return import_json_pointer.default.compile(t);
  }
  static escape(t) {
    return import_json_pointer.default.escape(t);
  }
};
import_json_pointer.default.parse = JsonPointer.parse, Object.assign(JsonPointer, import_json_pointer.default);

// node_modules/@redocly/openapi-docs/lib-esm/utils/openapi.js
var import_url_template = __toESM(require_url_template());
init_src();
import { dirname } from "path";

// node_modules/@redocly/openapi-docs/lib-esm/utils/helpers.js
init_src();
import { format, parse } from "url";
function mapValues(t, e2) {
  const r = {};
  for (const n2 in t)
    Object.prototype.hasOwnProperty.call(t, n2) && (r[n2] = e2(t[n2], n2, t));
  return r;
}
function flattenByProp(t, e2) {
  const r = [], n2 = (t2) => {
    for (const o of t2)
      r.push(o), o[e2] && n2(o[e2]);
  };
  return n2(t), r;
}
function stripTrailingSlash(t) {
  return t.endsWith("/") ? t.substring(0, t.length - 1) : t;
}
function isNumeric(t) {
  return !isNaN(parseFloat(t)) && isFinite(t);
}
var isArrayOfObjects = (t) => Array.isArray(t) && t.some((t2) => isObject(t2));
var deleteEmptyArrayItem = (t) => t.filter((t2) => !!t2);
var isMergeableObject = (t) => isObject(t) && !Array.isArray(t);
function isAbsoluteUrl(t) {
  return /(?:^[a-z][a-z0-9+.-]*:|\/\/)/i.test(t);
}
function resolveUrl(t, e2) {
  let r;
  if (e2.startsWith("//")) {
    const { protocol: n2 } = parse(t);
    r = `${n2 || "https:"}${e2}`;
  } else if (isAbsoluteUrl(e2))
    r = e2;
  else if (e2.startsWith("/")) {
    const n2 = parse(t);
    r = format(Object.assign(Object.assign({}, n2), { pathname: e2 }));
  } else
    r = stripTrailingSlash(t) + "/" + e2;
  return stripTrailingSlash(r);
}
function titleize(t) {
  return t.charAt(0).toUpperCase() + t.slice(1);
}
function removeQueryStringAndHash(t) {
  try {
    const e2 = parseURL(t);
    return e2.search = "", e2.hash = "", e2.toString();
  } catch (e2) {
    return t;
  }
}
function parseURL(t) {
  return "undefined" == typeof URL ? new (__require("url")).URL(t) : new URL(t);
}
function unescapeHTMLChars(t) {
  return t.replace(/&#(\d+);/g, (t2, e2) => String.fromCharCode(parseInt(e2, 10))).replace(/&amp;/g, "&").replace(/&quot;/g, '"');
}
function sanitizeItemId(t) {
  return t && t.replace(/#/g, "_").toLowerCase();
}
function joinStringFactory(t) {
  return (...e2) => e2.filter(Boolean).join(t);
}
var dottedString = joinStringFactory(".");
function getWindowReferenceOptions(t) {
  var e2;
  return IS_BROWSER ? null === (e2 = null === window || void 0 === window ? void 0 : window.REFERENCE_DOCS_OPTIONS) || void 0 === e2 ? void 0 : e2[t] : null;
}
var normalizeText = (t) => isString(t) ? t : null == t ? void 0 : t.raw;
var getValueFromMdParsedExtension = (t, e2) => {
  const r = (null == t ? void 0 : t[`x-parsed-md-${e2}`]) || (null == t ? void 0 : t[e2]);
  if ("x-enumDescriptions" !== e2)
    return r;
  let n2 = {};
  for (const t2 in r)
    t2.startsWith("x-parsed-md") || (n2[t2] = (null == r ? void 0 : r[`x-parsed-md-${t2}`]) || (null == r ? void 0 : r[t2]));
  return Object.keys(n2).length ? n2 : r;
};
function isLastInArray(t, e2) {
  return e2 === t.length - 1;
}
function isLastProperty(t, e2) {
  const r = Object.keys(t);
  return r.indexOf(e2) === r.length - 1;
}

// node_modules/@redocly/openapi-docs/lib-esm/constants.js
var WindowReferenceOptions;
!function(o) {
  o.ON_DEEP_LINK_CLICK = "onDeepLinkClick", o.REQUEST_INTERCEPTOR = "requestInterceptor", o.HOOKS = "hooks";
}(WindowReferenceOptions || (WindowReferenceOptions = {}));
var MediaTypes;
!function(o) {
  o.OCTET_STREAM = "application/octet-stream", o.MULTIPART = "multipart/form-data", o.URL_ENCODED = "application/x-www-form-urlencoded", o.JSON = "application/json", o.XML = "application/xml";
}(MediaTypes || (MediaTypes = {}));
var SECTION_ATTR = "data-section-id";
var GROUP_DEPTH = 0;
var LEGACY_REGEXP = "^ {0,3}<!-- ReDoc-Inject:\\s+?<({component}).*?/?>\\s+?-->\\s*$";
var MDX_COMPONENT_REGEXP = "(?:^ {0,3}<({component})([\\s\\S]*?)>([\\s\\S]*?)</\\2>|^ {0,3}<({component})([\\s\\S]*?)(?:/>|\\n{2,}))";
var COMPONENT_REGEXP = "(?:" + LEGACY_REGEXP + "|" + MDX_COMPONENT_REGEXP + ")";
var DEFAULT_TAG_SLUG = "other";
var DEFAULT_WEBHOOKS_TAG_NAME = "webhooks";
var LOADING_STATE = { NOT_LOADED: "NOT_LOADED", LOADING: "LOADING", LOADED: "LOADED" };

// node_modules/@redocly/openapi-docs/lib-esm/utils/string.js
var import_slugify = __toESM(require_slugify());
function strikethroughText(e2) {
  return e2.split("").map((e3) => e3 + "\u0335").join("");
}
function encodeBackSlashes(e2) {
  return e2.replace(/\\/g, "%5C");
}
function removePercentChart(e2) {
  return e2.replace(/%/g, "");
}
function tryDecodeURIComponent(e2) {
  try {
    return decodeURIComponent(e2);
  } catch (r) {
    return console.error(`Decoding failed: ${e2}`, r), e2;
  }
}
function safeSlugify(e2) {
  return (0, import_slugify.default)(e2) || e2.toString().toLowerCase().replace(/\s+/g, "-").replace(/&/g, "-and-").replace(/--+/g, "-").replace(/^-+/, "").replace(/-+$/, "");
}
function safeJsonParse(e2, r = {}) {
  try {
    return JSON.parse(e2);
  } catch (e3) {
    return r;
  }
}

// node_modules/@redocly/openapi-docs/lib-esm/utils/openapi.js
function isWildcardStatusCode(e2) {
  return "string" == typeof e2 && /\dxx/i.test(e2);
}
function isStatusCode(e2) {
  return "default" === e2 || isNumeric(e2) || isWildcardStatusCode(e2);
}
function getStatusCodeType(e2, r = false) {
  if ("default" === e2)
    return r ? "error" : "success";
  let t = "string" == typeof e2 ? parseInt(e2, 10) : e2;
  if (isWildcardStatusCode(e2) && (t *= 100), t < 100 || t > 599)
    throw new Error("invalid HTTP code");
  let i2 = "success";
  return t >= 300 && t < 400 ? i2 = "redirect" : t >= 400 ? i2 = "error" : t < 200 && (i2 = "info"), i2;
}
var operationNames = { get: true, post: true, put: true, head: true, patch: true, delete: true, options: true, $ref: true };
function isOperationName(e2) {
  return e2 in operationNames;
}
function getOperationName(e2) {
  const { operationId: r, pathName: t } = e2, i2 = normalizeText(getValueFromMdParsedExtension(e2, "description"));
  return normalizeText(getValueFromMdParsedExtension(e2, "summary")) || r || i2 && i2.substring(0, 50) || t || "<no summary>";
}
function getOperationId(e2, r) {
  var t;
  return (null == r ? void 0 : r.id) ? joinWithSeparator(r.id, sanitizeItemId(e2.operationId ? e2.operationId : pointerToId(e2.pointer))).toLowerCase() : (null === (t = e2.tags) || void 0 === t ? void 0 : t.length) ? sanitizeItemId(e2.operationId ? e2.operationId : pointerToId(e2.pointer)) : sanitizeItemId(e2.operationId ? joinWithSeparator(DEFAULT_TAG_SLUG, e2.operationId) : pointerToId(e2.pointer));
}
function pointerToId(e2) {
  return (null == e2 ? void 0 : e2.startsWith("/")) ? e2.slice(1, e2.length) : e2;
}
var schemaKeywordTypes = { multipleOf: "number", maximum: "number", exclusiveMaximum: "number", minimum: "number", exclusiveMinimum: "number", maxLength: "string", minLength: "string", pattern: "string", contentEncoding: "string", contentMediaType: "string", items: "array", maxItems: "array", minItems: "array", uniqueItems: "array", maxProperties: "object", minProperties: "object", required: "object", additionalProperties: "object", unevaluatedProperties: "object", patternProperties: "object", properties: "object" };
function detectType(e2) {
  if (void 0 !== e2.type && !Array.isArray(e2.type))
    return e2.type;
  const r = Object.keys(schemaKeywordTypes);
  for (const t of r) {
    const r2 = schemaKeywordTypes[t];
    if (void 0 !== e2[t])
      return r2;
  }
  return "any";
}
function isPrimitiveType(e2, r = e2.type) {
  if (e2["x-circular-ref"])
    return true;
  if (e2["x-complex"])
    return true;
  if (void 0 !== e2.oneOf || void 0 !== e2.anyOf)
    return false;
  if (e2.if && e2.then || e2.if && e2.else)
    return false;
  let t = true;
  const i2 = Array.isArray(r);
  return ("object" === r || i2 && (null == r ? void 0 : r.includes("object"))) && (t = void 0 !== e2.properties ? 0 === Object.keys(e2.properties).length : void 0 === e2.additionalProperties && void 0 === e2.unevaluatedProperties && void 0 === e2.patternProperties), !Array.isArray(e2.items) && !Array.isArray(e2.prefixItems) && (void 0 !== e2.items && "boolean" != typeof e2.items && ("array" === r || i2 && (null == r ? void 0 : r.includes("array"))) && (t = isPrimitiveType(e2.items, e2.items.type)), t);
}
function isJsonLike(e2) {
  return -1 !== e2.search(/json/i);
}
function isXmlLike(e2) {
  return -1 !== (null == e2 ? void 0 : e2.search(/xml/i));
}
function isFormUrlEncoded(e2) {
  return e2 === MediaTypes.URL_ENCODED;
}
function isMultipartFormData(e2) {
  return e2 === MediaTypes.MULTIPART;
}
function delimitedEncodeField(e2, r, t) {
  return Array.isArray(e2) ? e2.map((e3) => e3.toString()).join(t) : "object" == typeof e2 ? Object.keys(e2).map((r2) => `${r2}${t}${e2[r2]}`).join(t) : r + "=" + e2.toString();
}
function deepObjectEncodeField(e2, r) {
  return Array.isArray(e2) ? (console.warn("deepObject style cannot be used with array value:" + e2.toString()), "") : "object" == typeof e2 ? Object.keys(e2).map((t) => e2[t] ? `${r}[${t}]=${e2[t]}` : void 0).filter(Boolean).join("&") : (console.warn("deepObject style cannot be used with non-object value:" + e2.toString()), "");
}
function serializeFormValue(e2, r, t) {
  const i2 = "__redoc_param_name__", n2 = r ? "*" : "";
  return import_url_template.default.parse(`{?${i2}${n2}}`).expand({ [i2]: t }).substring(1).replace(/__redoc_param_name__/g, e2);
}
function serializeSimpleValue(e2, r) {
  const t = e2 ? "*" : "", i2 = "__redoc_param_name__", n2 = import_url_template.default.parse(`{${i2}${t}}`);
  return tryDecodeURIComponent(n2.expand({ [i2]: r }));
}
function urlFormEncodePayload(e2, r = {}) {
  if (Array.isArray(e2))
    throw new Error("Payload must have fields: " + e2.toString());
  return Object.keys(e2).map((t) => {
    const i2 = e2[t], { style: n2 = "form", explode: o = true } = r[t] || {};
    switch (n2) {
      case "form":
        return serializeFormValue(t, o, i2);
      case "spaceDelimited":
        return delimitedEncodeField(i2, t, "%20");
      case "pipeDelimited":
        return delimitedEncodeField(i2, t, "|");
      case "deepObject":
        return deepObjectEncodeField(i2, t);
      default:
        return console.warn("Incorrect or unsupported encoding style: " + n2), "";
    }
  }).join("&");
}
function serializePathParameter(e2, r, t, i2) {
  const n2 = t ? "*" : "";
  let o = "";
  "label" === r ? o = "." : "matrix" === r && (o = ";");
  const a = "__redoc_param_name__";
  return import_url_template.default.parse(`{${o}${a}${n2}}`).expand({ [a]: i2 }).replace(/__redoc_param_name__/g, e2);
}
function serializeQueryParameter(e2, r, t, i2) {
  const n2 = (n3) => {
    switch (r) {
      case "form":
        return serializeFormValue(e2, t, n3);
      case "spaceDelimited":
        return Array.isArray(n3) || "object" == typeof n3 ? t ? serializeFormValue(e2, t, n3) : delimitedEncodeField(i2, e2, "%20") : (console.warn("The style spaceDelimited is applicable to arrays or objects"), "");
      case "pipeDelimited":
        return Array.isArray(n3) || "object" == typeof n3 ? t ? serializeFormValue(e2, t, n3) : delimitedEncodeField(i2, e2, "|") : (console.warn("The style pipeDelimited is applicable to arrays or objects"), "");
      case "deepObject":
        return !t || Array.isArray(n3) || "object" != typeof n3 ? (console.warn("The style deepObject is only applicable for objects with explode=true"), "") : deepObjectEncodeField(n3, e2);
      case "simple":
        return serializeSimpleValue(t, i2);
      default:
        return console.warn("Unexpected style for query: " + r), "";
    }
  };
  return isArrayOfObjects(i2) && (i2 = deleteEmptyArrayItem(i2).map((e3) => n2(e3))), n2(i2);
}
function serializeHeaderParameter(e2, r, t) {
  return "simple" === e2 ? serializeSimpleValue(r, t) : (console.warn("Unexpected style for header: " + e2), "");
}
function serializeCookieParameter(e2, r, t, i2) {
  return "form" === r ? serializeFormValue(e2, t, i2) : (console.warn("Unexpected style for cookie: " + r), "");
}
function serializeParameterValueWithMime(e2, r) {
  return isJsonLike(r) ? JSON.stringify(e2) : (console.warn(`Parameter serialization as ${r} is not supported`), "");
}
function serializeParameterValue(e2, r) {
  const { name: t, style: i2, explode: n2 = false, serializationMime: o } = e2;
  if (o)
    switch (e2.in) {
      case "path":
      case "header":
        return serializeParameterValueWithMime(r, o);
      case "cookie":
      case "query":
        return `${t}=${serializeParameterValueWithMime(r, o)}`;
      default:
        return console.warn("Unexpected parameter location: " + e2.in), "";
    }
  if (!i2)
    return console.warn(`Missing style attribute or content for parameter ${t}`), "";
  switch (e2.in) {
    case "path":
      return serializePathParameter(t, i2, n2, r);
    case "query":
      return serializeQueryParameter(t, i2, n2, r);
    case "header":
      return serializeHeaderParameter(i2, n2, r);
    case "cookie":
      return serializeCookieParameter(t, i2, n2, r);
    default:
      return console.warn("Unexpected parameter location: " + e2.in), "";
  }
}
function langFromMime(e2) {
  return -1 !== e2.search(/xml/i) ? "xml" : "clike";
}
var DEFINITION_NAME_REGEX = /^#\/components\/(schemas|pathItems)\/([^/]+)$/;
function isNamedDefinition(e2) {
  return DEFINITION_NAME_REGEX.test(e2 || "");
}
function getDefinitionName(e2) {
  var r;
  return null === (r = null == e2 ? void 0 : e2.match(DEFINITION_NAME_REGEX)) || void 0 === r ? void 0 : r.pop();
}
function humanizeMultipleOfConstraint(e2) {
  if (void 0 === e2)
    return;
  const r = e2.toString(10);
  return /^0\.0*1$/.test(r) ? `decimal places <= ${r.split(".")[1].length}` : `multiple of ${r}`;
}
function humanizeRangeConstraint(e2, r, t) {
  let i2;
  return void 0 !== r && void 0 !== t ? i2 = r === t ? `= ${r} ${e2}` : `[ ${r} .. ${t} ] ${e2}` : void 0 !== t ? i2 = `<= ${t} ${e2}` : void 0 !== r && (i2 = 1 === r ? "non-empty" : `>= ${r} ${e2}`), i2;
}
function humanizeNumberRange(e2) {
  var r, t;
  const i2 = "number" == typeof e2.exclusiveMinimum ? Math.min(e2.exclusiveMinimum, null !== (r = e2.minimum) && void 0 !== r ? r : 1 / 0) : e2.minimum, n2 = "number" == typeof e2.exclusiveMaximum ? Math.max(e2.exclusiveMaximum, null !== (t = e2.maximum) && void 0 !== t ? t : -1 / 0) : e2.maximum, o = "number" == typeof e2.exclusiveMinimum || e2.exclusiveMinimum, a = "number" == typeof e2.exclusiveMaximum || e2.exclusiveMaximum;
  return void 0 !== i2 && void 0 !== n2 ? `${o ? "( " : "[ "}${i2} .. ${n2}${a ? " )" : " ]"}` : void 0 !== n2 ? `${a ? "< " : "<= "}${n2}` : void 0 !== i2 ? `${o ? "> " : ">= "}${i2}` : void 0;
}
function humanizeConstraints(e2) {
  const r = [], t = humanizeRangeConstraint("characters", e2.minLength, e2.maxLength);
  void 0 !== t && r.push(t);
  const i2 = humanizeRangeConstraint("items", e2.minItems, e2.maxItems);
  void 0 !== i2 && r.push(i2);
  const n2 = humanizeRangeConstraint(1 === e2.minProperties && 1 === e2.maxProperties ? "property" : "properties", e2.minProperties, e2.maxProperties);
  void 0 !== n2 && r.push(n2);
  const o = humanizeMultipleOfConstraint(e2.multipleOf);
  void 0 !== o && r.push(o);
  const a = humanizeNumberRange(e2);
  return void 0 !== a && r.push(a), e2.uniqueItems && r.push("unique"), r;
}
function sortByRequired(e2, r = []) {
  const t = [], i2 = [], n2 = [];
  return e2.forEach((e3) => {
    e3.required ? r.includes(e3.name) ? i2.push(e3) : n2.push(e3) : t.push(e3);
  }), i2.sort((e3, t2) => r.indexOf(e3.name) - r.indexOf(t2.name)), [...i2, ...n2, ...t];
}
function sortByDeprecated(e2) {
  return e2.sort((e3, r) => Number(e3.deprecated) - Number(r.deprecated));
}
function mergeParams(e2, r = [], t = [], { pathPointer: i2, operationPointer: n2 }) {
  const o = {};
  t.forEach((r2) => {
    ({ resolved: r2 } = e2.deref(r2)), o[r2.name + "_" + r2.in] = true;
  });
  return [...r.map((e3, r2) => ({ paramOrRef: e3, pointer: JsonPointer.join(i2, ["parameters", String(r2)]) })).filter(({ paramOrRef: r2 }) => ({ resolved: r2 } = e2.deref(r2), !o[r2.name + "_" + r2.in])), ...t.map((e3, r2) => ({ paramOrRef: e3, pointer: JsonPointer.join(n2, ["parameters", String(r2)]) }))];
}
function normalizeServers(e2, r) {
  const t = void 0 === e2 ? removeQueryStringAndHash((() => {
    if (!IS_BROWSER)
      return globalThis.SSR_HOSTNAME || "";
    const e3 = window.location.href;
    return e3.endsWith(".html") ? dirname(e3) : e3;
  })()) : dirname(e2);
  return 0 === r.length && (r = [{ url: "/" }]), r.map((e3) => {
    return Object.assign(Object.assign({}, e3), { url: (r2 = e3.url, resolveUrl(t, r2)), description: e3.description || "" });
    var r2;
  });
}
var shortenHTTPVerb = (e2) => ({ delete: "del", options: "opts" })[e2] || e2;
function isRedocExtension(e2) {
  return e2 in { "x-circular-ref": true, "x-complex": true, "x-parentRefs": true, "x-refsStack": true, "x-codeSamples": true, "x-displayName": true, "x-examples": true, "x-logo": true, "x-nullable": true, "x-servers": true, "x-tagGroups": true, "x-traitTag": true, "x-additionalPropertiesName": true, "x-explicitMappingOnly": true, "x-enumDescriptions": true, "x-hideReplay": true, "x-tokenEndpointAuthMethod": true, "x-feedback": true, "x-badges": true, "x-assertionType": true, "x-rbac": true } || e2.startsWith("x-parsed-md-");
}
function extractExtensions(e2, r) {
  return Object.keys(e2).filter((e3) => true === r ? e3.startsWith("x-") && !isRedocExtension(e3) : e3.startsWith("x-") && r.indexOf(e3) > -1).reduce((r2, t) => (r2[t] = e2[t], r2), {});
}
function pluralizeType(e2) {
  return e2.split(" or ").map((e3) => e3.replace(/^(string|object|number|integer|array|boolean)s?( ?.*)/, "$1s$2")).join(" or ");
}
function getContentWithLegacyExamples(e2) {
  let r = e2.content;
  const t = e2["x-examples"], i2 = e2["x-example"];
  if (t) {
    r = Object.assign({}, r);
    for (const e3 of Object.keys(t)) {
      const i3 = t[e3];
      r[e3] = Object.assign(Object.assign({}, r[e3]), { examples: i3 });
    }
  } else if (i2) {
    r = Object.assign({}, r);
    for (const e3 of Object.keys(i2)) {
      const t2 = i2[e3];
      r[e3] = Object.assign(Object.assign({}, r[e3]), { example: t2 });
    }
  }
  return r;
}

// node_modules/@redocly/openapi-docs/lib-esm/utils/dom.js
function querySelector(t) {
  return "undefined" != typeof document ? document.querySelector(t) : null;
}
"undefined" == typeof Element || Element.prototype.scrollIntoViewIfNeeded || (Element.prototype.scrollIntoViewIfNeeded = function(t) {
  t = 0 === arguments.length || !!t;
  const e2 = this.parentNode, o = window.getComputedStyle(e2, void 0), f = parseInt(o.getPropertyValue("border-top-width"), 10), i2 = parseInt(o.getPropertyValue("border-left-width"), 10), l = this.offsetTop - e2.offsetTop < e2.scrollTop, n2 = this.offsetTop - e2.offsetTop + this.clientHeight - f > e2.scrollTop + e2.clientHeight, s = this.offsetLeft - e2.offsetLeft < e2.scrollLeft, r = this.offsetLeft - e2.offsetLeft + this.clientWidth - i2 > e2.scrollLeft + e2.clientWidth, p = l && !n2;
  (l || n2) && t && (e2.scrollTop = this.offsetTop - e2.offsetTop - e2.clientHeight / 2 - f + this.clientHeight / 2), (s || r) && t && (e2.scrollLeft = this.offsetLeft - e2.offsetLeft - e2.clientWidth / 2 - i2 + this.clientWidth / 2), (l || n2 || s || r) && !t && this.scrollIntoView(p);
});

// node_modules/@redocly/openapi-docs/lib-esm/utils/argValuesHelpers.js
function argValueToBoolean(e2, r) {
  return void 0 === e2 ? r || false : "string" == typeof e2 ? "false" !== e2 : e2;
}
function argValueToNumber(e2, r = 0) {
  return "string" == typeof e2 ? parseInt(e2, 10) : "number" == typeof e2 ? e2 : r;
}
function argValueToInt(e2, r = 0) {
  return "string" == typeof e2 ? parseInt(e2, 10) : "number" == typeof e2 ? Math.ceil(e2) : r;
}
function argValueToExpandLevel(e2, r) {
  return void 0 === e2 ? r : "all" === e2 ? 1 / 0 : argValueToInt(e2, r);
}

// node_modules/@redocly/openapi-docs/lib-esm/utils/theme-helpers.js
init_styled_components_esm();
var typographyProperties = Object.entries({
  fontSize: "font-size",
  fontWeight: "font-weight",
  fontFamily: "font-family",
  lineHeight: "line-height",
  color: "text-color",
  textTransform: "text-transform"
});
function getTypographyCssRulesByComponentName(t, o) {
  const e2 = {};
  for (const [n2, r] of typographyProperties) {
    const s = `--${t}-${r}`, p = o ? `,var(--${o}-${r})` : "";
    e2[n2] = `var(${s}${p})`;
  }
  return e2;
}
function typography(t, o) {
  return Ne(["", ""], getTypographyCssRulesByComponentName(t, o));
}

// node_modules/@redocly/openapi-docs/lib-esm/utils/security-details.js
init_src();

// node_modules/@redocly/openapi-docs/lib-esm/utils/session-storage.js
init_src();
function toSessionStorage(o, e2) {
  IS_BROWSER && window.sessionStorage.setItem("redoc." + o, e2);
}
function fromSessionStorage(o) {
  return IS_BROWSER && window.sessionStorage.getItem("redoc." + o) || "";
}

// node_modules/@redocly/openapi-docs/lib-esm/utils/security-details.js
function getSecurityDetails(e2, t = {}) {
  return { raw: t[e2 + "" /* APIKey */], password: t[e2 + "_password" /* Password */], username: t[e2 + "_username" /* Username */], token: t[e2 + "_token" /* Token */] ? { access_token: t[e2 + "_token" /* Token */] } : void 0, client_id: t[e2 + "_client_id" /* ClientId */], client_secret: t[e2 + "_client_secret" /* ClientSecret */], scopes: fromSessionStorage(`auth.${e2}.scopes`) };
}

// node_modules/@redocly/openapi-docs/lib-esm/utils/local-storage.js
init_src();

// node_modules/@redocly/openapi-docs/lib-esm/utils/parameters.js
function getParameterValue(e2, r) {
  try {
    return JSON.parse(fromSessionStorage(`${e2}.${r}`));
  } catch (e3) {
    return null;
  }
}

// node_modules/@redocly/openapi-docs/lib-esm/utils/object.js
function mapObject(t, e2) {
  return Object.fromEntries(Object.entries(t).map(([t2, n2]) => [t2, e2(n2, t2)]));
}

// node_modules/@redocly/openapi-docs/lib-esm/utils/compose.js
var compose = (e2, ...o) => o.reduce((e3, o2) => (c) => e3(o2(c)), e2);

// node_modules/@redocly/openapi-docs/lib-esm/utils/saveTextBeforeHeading.js
init_dist();
init_src();

// node_modules/@redocly/openapi-docs/lib-esm/services/utils.js
var import_deepmerge = __toESM(require_cjs());
init_src();
function normalizeMimeType(e2) {
  if (!e2)
    return;
  const r = e2.split(";")[0].toLowerCase(), [t, n2] = r.split("/");
  if (void 0 === n2)
    return t;
  return `${t}/${n2.split("+").pop()}`;
}
function unescapeServerVariables(e2) {
  const r = new RegExp("%7B", "g"), t = new RegExp("%7D", "g");
  return e2.replace(r, "{").replace(t, "}").replace("///", "//");
}
function arrayMergeStrategy(e2, r) {
  if (!e2.length || !hasObjectOrArray(e2))
    return r;
  const t = e2.filter((e3) => Object.keys(e3).length > 0);
  return r.forEach(function(r2, n2) {
    isMergeableObject(r2) ? t[n2] = (0, import_deepmerge.default)(e2[n2], r2, { arrayMerge: arrayMergeStrategy }) : Array.isArray(r2) ? t.push(r2) : t[n2] = r2;
  }), t;
}
var hasObjectOrArray = (e2) => e2.some((e3) => isObject(e3) && Object.keys(e3).length > 0);
function isEmptyObject(e2) {
  return !!e2 && 0 === Object.keys(e2).length;
}
var cryptoLib = "undefined" != typeof window && (window.crypto || window.msCrypto) || void 0;
function deepClone(e2) {
  if ("object" != typeof e2 || null === e2)
    return e2;
  const r = Array.isArray(e2) ? [] : {};
  for (const t in e2) {
    const n2 = e2[t];
    r[t] = deepClone(n2);
  }
  return r;
}

// node_modules/@redocly/openapi-docs/lib-esm/utils/saveTextBeforeHeading.js
function saveTextBeforeHeading(e2) {
  if (!isString(e2) && (null == e2 ? void 0 : e2.result)) {
    const r2 = deepClone(e2), i3 = ast_default.fromJSON(JSON.stringify(null == r2 ? void 0 : r2.result));
    if (Array.isArray(i3))
      for (const e3 of i3)
        modifyNodeByHeading(e3);
    else
      modifyNodeByHeading(i3);
    return r2.result = JSON.stringify(i3), r2.raw = saveTextBeforeHeading(r2.raw), r2;
  }
  const r = new RegExp("^#{1,6}?\\s+", "m"), i2 = e2.search(r);
  return i2 > -1 ? e2.substring(0, i2) : e2;
}
function modifyNodeByHeading(e2) {
  if (!Array.isArray(e2.children))
    return;
  const r = e2.children.findIndex((e3) => "heading" === e3.type);
  return -1 === r || (e2.children = e2.children.slice(0, r)), e2;
}

// node_modules/@redocly/openapi-docs/lib-esm/utils/path.js
function pathIncludesLink(e2, t) {
  return !!t && tryDecodeURIComponent(e2.pathname + e2.hash).includes(tryDecodeURIComponent(t.toLowerCase()));
}
function pathMatchedLink(e2, t = "") {
  const o = tryDecodeURIComponent(t.toLowerCase());
  return tryDecodeURIComponent(e2.pathname) === o || tryDecodeURIComponent(e2.hash) === o || tryDecodeURIComponent(e2.pathname + e2.hash) === o;
}
function normalizePath(e2) {
  return e2.startsWith("/") || (e2 = "/" + e2), e2.endsWith("/") && (e2 = e2.slice(0, -1)), e2;
}

// node_modules/@redocly/openapi-docs/lib-esm/utils/queryString.js
var QueryString = class {
  parse(o) {
    const t = {};
    if (!o)
      return t;
    const n2 = o.startsWith("?") ? o.substring(1).split("&") : o.split("&");
    for (const o2 of n2) {
      const [n3, e2] = o2.split("=");
      if (n3 && e2) {
        const o3 = tryDecodeURIComponent(n3), r = tryDecodeURIComponent(e2);
        if (o3 in t)
          Array.isArray(t[o3]) ? t[o3].push(r) : t[o3] = [t[o3], r];
        else {
          const n4 = [",", "|"].find((o4) => r.includes(o4));
          t[o3] = n4 ? r.split(n4) : r;
        }
      }
    }
    return t;
  }
  stringify(o, t = { encode: true, sort: true }) {
    const n2 = [];
    for (const [e2, r] of Object.entries(o))
      if (Object.prototype.hasOwnProperty.call(o, e2)) {
        const o2 = t.encode ? encodeURIComponent(e2) : e2;
        if (Array.isArray(r)) {
          for (const e3 of r)
            if (e3) {
              const r2 = t.encode ? encodeURIComponent(e3) : e3;
              n2.push(`${o2}=${r2}`);
            }
        } else if (r) {
          const e3 = t.encode ? encodeURIComponent(r) : r;
          n2.push(`${o2}=${e3}`);
        }
      }
    return t.sort && n2.sort(), n2.join("&");
  }
};
var queryString = new QueryString();

// node_modules/@redocly/openapi-docs/lib-esm/utils/replaceVariables.js
function replaceVariables(e2) {
  let { url: r, variables: t } = e2;
  if (t)
    for (const e3 in t) {
      const a = t[e3];
      if (a.default) {
        const t2 = new RegExp(`{${e3}}`, "g");
        r = r.replace(t2, a.default);
      }
    }
  return r;
}

// node_modules/@redocly/openapi-docs/lib-esm/utils/areArraysEqual.js
function areArraysEqual(e2, r) {
  return e2.length === r.length && e2.every((e3, n2) => e3 === r[n2]);
}

// node_modules/jotai/esm/vanilla/utils.mjs
var RESET = Symbol(
  (import.meta.env ? import.meta.env.MODE : void 0) !== "production" ? "RESET" : ""
);
function atomFamily(initializeAtom, areEqual) {
  let shouldRemove = null;
  const atoms = /* @__PURE__ */ new Map();
  const listeners = /* @__PURE__ */ new Set();
  const createAtom = (param) => {
    let item;
    if (areEqual === void 0) {
      item = atoms.get(param);
    } else {
      for (const [key2, value] of atoms) {
        if (areEqual(key2, param)) {
          item = value;
          break;
        }
      }
    }
    if (item !== void 0) {
      if (shouldRemove == null ? void 0 : shouldRemove(item[1], param)) {
        createAtom.remove(param);
      } else {
        return item[0];
      }
    }
    const newAtom = initializeAtom(param);
    atoms.set(param, [newAtom, Date.now()]);
    notifyListeners("CREATE", param, newAtom);
    return newAtom;
  };
  function notifyListeners(type, param, atom2) {
    for (const listener of listeners) {
      listener({ type, param, atom: atom2 });
    }
  }
  createAtom.unstable_listen = (callback) => {
    listeners.add(callback);
    return () => {
      listeners.delete(callback);
    };
  };
  createAtom.getParams = () => atoms.keys();
  createAtom.remove = (param) => {
    if (areEqual === void 0) {
      if (!atoms.has(param))
        return;
      const [atom2] = atoms.get(param);
      atoms.delete(param);
      notifyListeners("REMOVE", param, atom2);
    } else {
      for (const [key2, [atom2]] of atoms) {
        if (areEqual(key2, param)) {
          atoms.delete(key2);
          notifyListeners("REMOVE", key2, atom2);
          break;
        }
      }
    }
  };
  createAtom.setShouldRemove = (fn) => {
    shouldRemove = fn;
    if (!shouldRemove)
      return;
    for (const [key2, [atom2, createdAt]] of atoms) {
      if (shouldRemove(createdAt, key2)) {
        atoms.delete(key2);
        notifyListeners("REMOVE", key2, atom2);
      }
    }
  };
  return createAtom;
}
var isPromiseLike3 = (x) => typeof (x == null ? void 0 : x.then) === "function";
function createJSONStorage(getStringStorage = () => {
  try {
    return window.localStorage;
  } catch (e2) {
    if ((import.meta.env ? import.meta.env.MODE : void 0) !== "production") {
      if (typeof window !== "undefined") {
        console.warn(e2);
      }
    }
    return void 0;
  }
}, options) {
  var _a;
  let lastStr;
  let lastValue;
  const storage = {
    getItem: (key2, initialValue) => {
      var _a2, _b;
      const parse4 = (str2) => {
        str2 = str2 || "";
        if (lastStr !== str2) {
          try {
            lastValue = JSON.parse(str2, options == null ? void 0 : options.reviver);
          } catch (e2) {
            return initialValue;
          }
          lastStr = str2;
        }
        return lastValue;
      };
      const str = (_b = (_a2 = getStringStorage()) == null ? void 0 : _a2.getItem(key2)) != null ? _b : null;
      if (isPromiseLike3(str)) {
        return str.then(parse4);
      }
      return parse4(str);
    },
    setItem: (key2, newValue) => {
      var _a2;
      return (_a2 = getStringStorage()) == null ? void 0 : _a2.setItem(
        key2,
        JSON.stringify(newValue, options == null ? void 0 : options.replacer)
      );
    },
    removeItem: (key2) => {
      var _a2;
      return (_a2 = getStringStorage()) == null ? void 0 : _a2.removeItem(key2);
    }
  };
  const createHandleSubscribe = (subscriber2) => (key2, callback, initialValue) => subscriber2(key2, (v) => {
    let newValue;
    try {
      newValue = JSON.parse(v || "");
    } catch (e2) {
      newValue = initialValue;
    }
    callback(newValue);
  });
  let subscriber;
  try {
    subscriber = (_a = getStringStorage()) == null ? void 0 : _a.subscribe;
  } catch (e2) {
  }
  if (!subscriber && typeof window !== "undefined" && typeof window.addEventListener === "function" && window.Storage) {
    subscriber = (key2, callback) => {
      if (!(getStringStorage() instanceof window.Storage)) {
        return () => {
        };
      }
      const storageEventCallback = (e2) => {
        if (e2.storageArea === getStringStorage() && e2.key === key2) {
          callback(e2.newValue);
        }
      };
      window.addEventListener("storage", storageEventCallback);
      return () => {
        window.removeEventListener("storage", storageEventCallback);
      };
    };
  }
  if (subscriber) {
    storage.subscribe = createHandleSubscribe(subscriber);
  }
  return storage;
}
var defaultStorage = createJSONStorage();
function atomWithStorage(key2, initialValue, storage = defaultStorage, options) {
  const getOnInit = options == null ? void 0 : options.getOnInit;
  const baseAtom = atom(
    getOnInit ? storage.getItem(key2, initialValue) : initialValue
  );
  if ((import.meta.env ? import.meta.env.MODE : void 0) !== "production") {
    baseAtom.debugPrivate = true;
  }
  baseAtom.onMount = (setAtom) => {
    setAtom(storage.getItem(key2, initialValue));
    let unsub;
    if (storage.subscribe) {
      unsub = storage.subscribe(key2, setAtom, initialValue);
    }
    return unsub;
  };
  const anAtom = atom(
    (get) => get(baseAtom),
    (get, set, update) => {
      const nextValue = typeof update === "function" ? update(get(baseAtom)) : update;
      if (nextValue === RESET) {
        set(baseAtom, initialValue);
        return storage.removeItem(key2);
      }
      if (nextValue instanceof Promise) {
        return nextValue.then((resolvedValue) => {
          set(baseAtom, resolvedValue);
          return storage.setItem(key2, resolvedValue);
        });
      }
      set(baseAtom, nextValue);
      return storage.setItem(key2, nextValue);
    }
  );
  return anAtom;
}

// node_modules/jotai/esm/react/utils.mjs
import { useCallback as useCallback2, useMemo } from "react";
"use client";
function useAtomCallback(callback, options) {
  const anAtom = useMemo(
    () => atom(null, (get, set, ...args) => callback(get, set, ...args)),
    [callback]
  );
  return useSetAtom(anAtom, options);
}

// node_modules/@redocly/openapi-docs/lib-esm/jotai/nexus.js
import { useCallback as useCallback3 } from "react";
var readAtom;
var writeAtom;
var JotaiNexus = () => useAtomCallback(useCallback3((t, e2) => (readAtom = t, writeAtom = e2, null), []))();
var nexus_default = JotaiNexus;

// node_modules/openapi-sampler/src/utils.js
function pad(number) {
  if (number < 10) {
    return "0" + number;
  }
  return number;
}
function toRFCDateTime(date, omitTime, omitDate, milliseconds) {
  var res = omitDate ? "" : date.getUTCFullYear() + "-" + pad(date.getUTCMonth() + 1) + "-" + pad(date.getUTCDate());
  if (!omitTime) {
    res += "T" + pad(date.getUTCHours()) + ":" + pad(date.getUTCMinutes()) + ":" + pad(date.getUTCSeconds()) + (milliseconds ? "." + (date.getUTCMilliseconds() / 1e3).toFixed(3).slice(2, 5) : "") + "Z";
  }
  return res;
}
function ensureMinLength(sample2, min) {
  if (min > sample2.length) {
    return sample2.repeat(Math.trunc(min / sample2.length) + 1).substring(0, min);
  }
  return sample2;
}
function mergeDeep(...objects) {
  const isObject4 = (obj) => obj && typeof obj === "object";
  return objects.reduce((prev, obj) => {
    Object.keys(obj || {}).forEach((key2) => {
      const pVal = prev[key2];
      const oVal = obj[key2];
      if (isObject4(pVal) && isObject4(oVal)) {
        prev[key2] = mergeDeep(pVal, oVal);
      } else {
        prev[key2] = oVal;
      }
    });
    return prev;
  }, Array.isArray(objects[objects.length - 1]) ? [] : {});
}
function uuid(str) {
  var hash = hashCode(str);
  var random = jsf32(hash, hash, hash, hash);
  var uuid2 = "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (c) => {
    var r = random() * 16 % 16 | 0;
    return (c == "x" ? r : r & 3 | 8).toString(16);
  });
  return uuid2;
}
function getResultForCircular(type) {
  return {
    value: type === "object" ? {} : type === "array" ? [] : void 0
  };
}
function popSchemaStack(seenSchemasStack2, context) {
  if (context)
    seenSchemasStack2.pop();
}
function getXMLAttributes(schema) {
  return {
    name: schema?.xml?.name || "",
    prefix: schema?.xml?.prefix || "",
    namespace: schema?.xml?.namespace || null,
    attribute: schema?.xml?.attribute ?? false,
    wrapped: schema?.xml?.wrapped ?? false
  };
}
function applyXMLAttributes(result, schema = {}, context = {}) {
  const { value: oldValue } = result;
  const { propertyName: oldPropertyName } = context;
  const { name, prefix, namespace, attribute, wrapped } = getXMLAttributes(schema);
  let propertyName = name || oldPropertyName ? `${prefix ? prefix + ":" : ""}${name || oldPropertyName}` : null;
  let value = typeof oldValue === "object" ? Array.isArray(oldValue) ? [...oldValue] : { ...oldValue } : oldValue;
  if (attribute && propertyName) {
    propertyName = `$${propertyName}`;
  }
  if (namespace) {
    if (typeof value === "object") {
      value[`$xmlns${prefix ? ":" + prefix : ""}`] = namespace;
    } else {
      value = { [`$xmlns${prefix ? ":" + prefix : ""}`]: namespace, ["#text"]: value };
    }
  }
  if (schema.type === "array") {
    if (wrapped && Array.isArray(value)) {
      value = { [propertyName]: [...value] };
    }
    if (!wrapped) {
      propertyName = null;
    }
    if (schema.example !== void 0 && !wrapped) {
      propertyName = schema.items?.xml?.name || propertyName;
    }
  }
  if (schema.oneOf || schema.anyOf || schema.allOf || schema.$ref) {
    propertyName = null;
  }
  return {
    propertyName,
    value
  };
}
function hashCode(str) {
  var hash = 0;
  if (str.length == 0)
    return hash;
  for (var i2 = 0; i2 < str.length; i2++) {
    var char = str.charCodeAt(i2);
    hash = (hash << 5) - hash + char;
    hash = hash & hash;
  }
  return hash;
}
function jsf32(a, b, c, d) {
  return function() {
    a |= 0;
    b |= 0;
    c |= 0;
    d |= 0;
    var t = a - (b << 27 | b >>> 5) | 0;
    a = b ^ (c << 17 | c >>> 15);
    b = c + d | 0;
    c = d + t | 0;
    d = a + t | 0;
    return (d >>> 0) / 4294967296;
  };
}

// node_modules/openapi-sampler/src/allOf.js
function allOfSample(into, children, options, spec, context) {
  let res = traverse(into, options, spec);
  const subSamples = [];
  for (let subSchema of children) {
    const { type, readOnly, writeOnly, value } = traverse({ type: res.type, ...subSchema }, options, spec, context);
    if (res.type && type && type !== res.type) {
      console.warn("allOf: schemas with different types can't be merged");
      res.type = type;
    }
    res.type = res.type || type;
    res.readOnly = res.readOnly || readOnly;
    res.writeOnly = res.writeOnly || writeOnly;
    if (value != null)
      subSamples.push(value);
  }
  if (res.type === "object") {
    res.value = mergeDeep(res.value || {}, ...subSamples.filter((sample2) => typeof sample2 === "object"));
    return res;
  } else {
    if (res.type === "array") {
      if (!options.quiet)
        console.warn('OpenAPI Sampler: found allOf with "array" type. Result may be incorrect');
    }
    const lastSample = subSamples[subSamples.length - 1];
    res.value = lastSample != null ? lastSample : res.value;
    return res;
  }
}

// node_modules/openapi-sampler/src/infer.js
var schemaKeywordTypes2 = {
  multipleOf: "number",
  maximum: "number",
  exclusiveMaximum: "number",
  minimum: "number",
  exclusiveMinimum: "number",
  maxLength: "string",
  minLength: "string",
  pattern: "string",
  items: "array",
  maxItems: "array",
  minItems: "array",
  uniqueItems: "array",
  additionalItems: "array",
  maxProperties: "object",
  minProperties: "object",
  required: "object",
  additionalProperties: "object",
  properties: "object",
  patternProperties: "object",
  dependencies: "object"
};
function inferType(schema) {
  if (schema.type !== void 0) {
    return Array.isArray(schema.type) ? schema.type.length === 0 ? null : schema.type[0] : schema.type;
  }
  const keywords = Object.keys(schemaKeywordTypes2);
  for (var i2 = 0; i2 < keywords.length; i2++) {
    let keyword = keywords[i2];
    let type = schemaKeywordTypes2[keyword];
    if (schema[keyword] !== void 0) {
      return type;
    }
  }
  return null;
}

// node_modules/openapi-sampler/src/traverse.js
var import_json_pointer2 = __toESM(require_json_pointer());
var $refCache = {};
var seenSchemasStack = [];
function clearCache() {
  $refCache = {};
  seenSchemasStack = [];
}
function inferExample(schema) {
  let example;
  if (schema.const !== void 0) {
    example = schema.const;
  } else if (schema.examples !== void 0 && schema.examples.length) {
    example = schema.examples[0];
  } else if (schema.enum !== void 0 && schema.enum.length) {
    example = schema.enum[0];
  } else if (schema.default !== void 0) {
    example = schema.default;
  }
  return example;
}
function tryInferExample(schema) {
  const example = inferExample(schema);
  if (example !== void 0) {
    return {
      value: example,
      readOnly: schema.readOnly,
      writeOnly: schema.writeOnly,
      type: null
    };
  }
  return;
}
function traverse(schema, options, spec, context) {
  if (context) {
    if (seenSchemasStack.includes(schema))
      return getResultForCircular(inferType(schema));
    seenSchemasStack.push(schema);
  }
  if (context && context.depth > options.maxSampleDepth) {
    popSchemaStack(seenSchemasStack, context);
    return getResultForCircular(inferType(schema));
  }
  if (schema.$ref) {
    if (!spec) {
      throw new Error("Your schema contains $ref. You must provide full specification in the third parameter.");
    }
    let ref = decodeURIComponent(schema.$ref);
    if (ref.startsWith("#")) {
      ref = ref.substring(1);
    }
    const referenced = import_json_pointer2.default.get(spec, ref);
    let result;
    if ($refCache[ref] !== true) {
      $refCache[ref] = true;
      const traverseResult = traverse(referenced, options, spec, context);
      if (options.format === "xml") {
        const { propertyName, value } = applyXMLAttributes(traverseResult, referenced, context);
        result = { ...traverseResult, value: { [propertyName || "root"]: value } };
      } else {
        result = traverseResult;
      }
      $refCache[ref] = false;
    } else {
      const referencedType = inferType(referenced);
      result = getResultForCircular(referencedType);
    }
    popSchemaStack(seenSchemasStack, context);
    return result;
  }
  if (schema.example !== void 0) {
    popSchemaStack(seenSchemasStack, context);
    return {
      value: schema.example,
      readOnly: schema.readOnly,
      writeOnly: schema.writeOnly,
      type: schema.type
    };
  }
  if (schema.allOf !== void 0) {
    popSchemaStack(seenSchemasStack, context);
    return tryInferExample(schema) || allOfSample(
      { ...schema, allOf: void 0 },
      schema.allOf,
      options,
      spec,
      context
    );
  }
  if (schema.oneOf && schema.oneOf.length) {
    if (schema.anyOf) {
      if (!options.quiet)
        console.warn("oneOf and anyOf are not supported on the same level. Skipping anyOf");
    }
    popSchemaStack(seenSchemasStack, context);
    const firstOneOf = Object.assign({
      readOnly: schema.readOnly,
      writeOnly: schema.writeOnly
    }, schema.oneOf[0]);
    return traverseOneOrAnyOf(schema, firstOneOf);
  }
  if (schema.anyOf && schema.anyOf.length) {
    popSchemaStack(seenSchemasStack, context);
    const firstAnyOf = Object.assign({
      readOnly: schema.readOnly,
      writeOnly: schema.writeOnly
    }, schema.anyOf[0]);
    return traverseOneOrAnyOf(schema, firstAnyOf);
  }
  if (schema.if && schema.then) {
    popSchemaStack(seenSchemasStack, context);
    const { if: ifSchema, then, ...rest } = schema;
    return traverse(mergeDeep(rest, ifSchema, then), options, spec, context);
  }
  let example = inferExample(schema);
  let type = null;
  if (example === void 0) {
    example = null;
    type = schema.type;
    if (Array.isArray(type) && schema.type.length > 0) {
      type = schema.type[0];
    }
    if (!type) {
      type = inferType(schema);
    }
    let sampler = _samplers[type];
    if (sampler) {
      example = sampler(schema, options, spec, context);
    }
  }
  popSchemaStack(seenSchemasStack, context);
  return {
    value: example,
    readOnly: schema.readOnly,
    writeOnly: schema.writeOnly,
    type
  };
  function traverseOneOrAnyOf(schema2, selectedSubSchema) {
    const inferred = tryInferExample(schema2);
    if (inferred !== void 0) {
      return inferred;
    }
    const localExample = traverse({ ...schema2, oneOf: void 0, anyOf: void 0 }, options, spec, context);
    const subSchemaExample = traverse(selectedSubSchema, options, spec, context);
    if (typeof localExample.value === "object" && typeof subSchemaExample.value === "object") {
      const mergedExample = mergeDeep(localExample.value, subSchemaExample.value);
      return { ...subSchemaExample, value: mergedExample };
    }
    return subSchemaExample;
  }
}

// node_modules/openapi-sampler/src/samplers/array.js
function sampleArray(schema, options = {}, spec, context) {
  const depth = context && context.depth || 1;
  let arrayLength = Math.min(schema.maxItems != void 0 ? schema.maxItems : Infinity, schema.minItems || 1);
  const items = schema.prefixItems || schema.items || schema.contains;
  if (Array.isArray(items)) {
    arrayLength = Math.max(arrayLength, items.length);
  }
  let itemSchemaGetter = (itemNumber) => {
    if (Array.isArray(items)) {
      return items[itemNumber] || {};
    }
    return items || {};
  };
  let res = [];
  if (!items)
    return res;
  for (let i2 = 0; i2 < arrayLength; i2++) {
    let itemSchema = itemSchemaGetter(i2);
    let { value: sample2 } = traverse(itemSchema, options, spec, { depth: depth + 1 });
    if (options?.format === "xml") {
      const { value, propertyName } = applyXMLAttributes({ value: sample2 }, itemSchema, context);
      if (propertyName) {
        if (!res?.[propertyName]) {
          res = { ...res, [propertyName]: [] };
        }
        res[propertyName].push(value);
      } else {
        res = { ...res, ...value };
      }
    } else {
      res.push(sample2);
    }
  }
  if (options?.format === "xml" && depth === 1) {
    const { value, propertyName } = applyXMLAttributes({ value: null }, schema, context);
    if (propertyName) {
      if (value) {
        res = Array.isArray(res) ? { [propertyName]: { ...value, ...res.map((item) => ({ ["#text"]: { ...item } })) } } : { [propertyName]: { ...res, ...value } };
      } else {
        res = { [propertyName]: res };
      }
    }
  }
  return res;
}

// node_modules/openapi-sampler/src/samplers/boolean.js
function sampleBoolean(schema) {
  return true;
}

// node_modules/openapi-sampler/src/samplers/number.js
function sampleNumber(schema) {
  let res = 0;
  if (schema.type === "number" && (schema.format === "float" || schema.format === "double")) {
    res = 0.1;
  }
  if (typeof schema.exclusiveMinimum === "boolean" || typeof schema.exclusiveMaximum === "boolean") {
    if (schema.maximum && schema.minimum) {
      res = schema.exclusiveMinimum ? Math.floor(schema.minimum) + 1 : schema.minimum;
      if (schema.exclusiveMaximum && res >= schema.maximum || !schema.exclusiveMaximum && res > schema.maximum) {
        res = (schema.maximum + schema.minimum) / 2;
      }
      return res;
    }
    if (schema.minimum) {
      if (schema.exclusiveMinimum) {
        return Math.floor(schema.minimum) + 1;
      } else {
        return schema.minimum;
      }
    }
    if (schema.maximum) {
      if (schema.exclusiveMaximum) {
        return schema.maximum > 0 ? 0 : Math.floor(schema.maximum) - 1;
      } else {
        return schema.maximum > 0 ? 0 : schema.maximum;
      }
    }
  } else {
    if (schema.minimum) {
      return schema.minimum;
    }
    if (schema.exclusiveMinimum) {
      res = Math.floor(schema.exclusiveMinimum) + 1;
      if (res === schema.exclusiveMaximum) {
        res = (res + Math.floor(schema.exclusiveMaximum) - 1) / 2;
      }
    } else if (schema.exclusiveMaximum) {
      res = Math.floor(schema.exclusiveMaximum) - 1;
    } else if (schema.maximum) {
      res = schema.maximum;
    }
  }
  return res;
}

// node_modules/openapi-sampler/src/samplers/object.js
function sampleObject(schema, options = {}, spec, context) {
  let res = {};
  const depth = context && context.depth || 1;
  if (schema && typeof schema.properties === "object") {
    const requiredProperties = Array.isArray(schema.required) ? schema.required : [];
    const requiredPropertiesMap = {};
    for (const requiredProperty of requiredProperties) {
      requiredPropertiesMap[requiredProperty] = true;
    }
    Object.keys(schema.properties).forEach((propertyName) => {
      if (options.skipNonRequired && !requiredPropertiesMap.hasOwnProperty(propertyName)) {
        return;
      }
      const sample2 = traverse(schema.properties[propertyName], options, spec, { propertyName, depth: depth + 1 });
      if (options.skipReadOnly && sample2.readOnly) {
        return;
      }
      if (options.skipWriteOnly && sample2.writeOnly) {
        return;
      }
      if (options?.format === "xml") {
        const { propertyName: newPropertyName, value } = applyXMLAttributes(sample2, schema.properties[propertyName], { propertyName });
        if (newPropertyName) {
          res[newPropertyName] = value;
        } else {
          res = { ...res, ...value };
        }
      } else {
        res[propertyName] = sample2.value;
      }
    });
  }
  if (schema && typeof schema.additionalProperties === "object") {
    const propertyName = schema.additionalProperties["x-additionalPropertiesName"] || "property";
    res[`${String(propertyName)}1`] = traverse(schema.additionalProperties, options, spec, { depth: depth + 1 }).value;
    res[`${String(propertyName)}2`] = traverse(schema.additionalProperties, options, spec, { depth: depth + 1 }).value;
  }
  if (schema && typeof schema.properties === "object" && schema.maxProperties !== void 0 && Object.keys(res).length > schema.maxProperties) {
    const filteredResult = {};
    let propertiesAdded = 0;
    const requiredProperties = Array.isArray(schema.required) ? schema.required : [];
    requiredProperties.forEach((propName) => {
      if (res[propName] !== void 0) {
        filteredResult[propName] = res[propName];
        propertiesAdded++;
      }
    });
    Object.keys(res).forEach((propName) => {
      if (propertiesAdded < schema.maxProperties && !filteredResult.hasOwnProperty(propName)) {
        filteredResult[propName] = res[propName];
        propertiesAdded++;
      }
    });
    res = filteredResult;
  }
  return res;
}

// node_modules/openapi-sampler/src/samplers/string-regex.js
function boolSample() {
  return true;
}
function intSample(min, _max) {
  return min;
}
function getRepetitionsBasedOnQuantifierParameters(quantifierSymbol, quantifierMin, quantifierMax) {
  let repetitions = 1;
  if (quantifierSymbol) {
    switch (quantifierSymbol) {
      case "?": {
        repetitions = boolSample() ? 0 : 1;
        break;
      }
      case "*": {
        const limit = 8;
        repetitions = intSample(0, limit);
        break;
      }
      case "+": {
        const limit = 8;
        repetitions = intSample(1, limit);
        break;
      }
      default:
        throw new Error("Unknown quantifier symbol provided.");
    }
  } else if (quantifierMin != null && quantifierMax != null) {
    repetitions = intSample(parseInt(quantifierMin), parseInt(quantifierMax));
  } else if (quantifierMin != null && quantifierMax == null) {
    repetitions = parseInt(quantifierMin);
  }
  return repetitions;
}
function regexSample(pattern) {
  let isCaseInsensitive = false;
  if (pattern instanceof RegExp) {
    isCaseInsensitive = pattern.flags.includes("i");
    pattern = pattern.toString();
    pattern = pattern.match(/\/(.+?)\//)?.[1] ?? "";
  }
  let min;
  let max;
  let repetitions;
  const SINGLE_CHAR_REG = /([.A-Za-z0-9])(?:\{(\d+)(?:\,(\d+)|)\}|(\?|\*|\+))(?![^[]*]|[^{]*})/;
  let token = pattern.match(SINGLE_CHAR_REG);
  while (token != null) {
    const quantifierMin = token[2];
    const quantifierMax = token[3];
    const quantifierSymbol = token[4];
    repetitions = getRepetitionsBasedOnQuantifierParameters(
      quantifierSymbol,
      quantifierMin,
      quantifierMax
    );
    pattern = pattern.slice(0, token.index) + token[1].repeat(repetitions) + pattern.slice(token.index + token[0].length);
    token = pattern.match(SINGLE_CHAR_REG);
  }
  const SINGLE_RANGE_REG = /(\d-\d|\w-\w|\d|\w|[-!@#$&()`.+,/"])/;
  const RANGE_ALPHANUMEMRIC_REG = /\[(\^|)(-|)(.+?)\](?:\{(\d+)(?:\,(\d+)|)\}|(\?|\*|\+)|)/;
  token = pattern.match(RANGE_ALPHANUMEMRIC_REG);
  while (token != null) {
    const isNegated = token[1] === "^";
    const includesDash = token[2] === "-";
    const quantifierMin = token[4];
    const quantifierMax = token[5];
    const quantifierSymbol = token[6];
    const rangeCodes = [];
    let ranges = token[3];
    let range = ranges.match(SINGLE_RANGE_REG);
    if (includesDash) {
      rangeCodes.push(45);
    }
    while (range != null) {
      if (range[0].indexOf("-") === -1) {
        if (isCaseInsensitive && isNaN(Number(range[0]))) {
          rangeCodes.push(range[0].toUpperCase().charCodeAt(0));
          rangeCodes.push(range[0].toLowerCase().charCodeAt(0));
        } else {
          rangeCodes.push(range[0].charCodeAt(0));
        }
      } else {
        const rangeMinMax = range[0].split("-").map((x) => x.charCodeAt(0));
        min = rangeMinMax[0];
        max = rangeMinMax[1];
        if (min > max) {
          throw new Error("Character range provided is out of order.");
        }
        for (let i2 = min; i2 <= max; i2++) {
          if (isCaseInsensitive && isNaN(Number(String.fromCharCode(i2)))) {
            const ch = String.fromCharCode(i2);
            rangeCodes.push(ch.toUpperCase().charCodeAt(0));
            rangeCodes.push(ch.toLowerCase().charCodeAt(0));
          } else {
            rangeCodes.push(i2);
          }
        }
      }
      ranges = ranges.substring(range[0].length);
      range = ranges.match(SINGLE_RANGE_REG);
    }
    repetitions = getRepetitionsBasedOnQuantifierParameters(
      quantifierSymbol,
      quantifierMin,
      quantifierMax
    );
    if (isNegated) {
      let index = -1;
      for (let i2 = 48; i2 <= 57; i2++) {
        index = rangeCodes.indexOf(i2);
        if (index > -1) {
          rangeCodes.splice(index, 1);
          continue;
        }
        rangeCodes.push(i2);
      }
      for (let i2 = 65; i2 <= 90; i2++) {
        index = rangeCodes.indexOf(i2);
        if (index > -1) {
          rangeCodes.splice(index, 1);
          continue;
        }
        rangeCodes.push(i2);
      }
      for (let i2 = 97; i2 <= 122; i2++) {
        index = rangeCodes.indexOf(i2);
        if (index > -1) {
          rangeCodes.splice(index, 1);
          continue;
        }
        rangeCodes.push(i2);
      }
    }
    const generatedString = Array.from(
      { length: repetitions },
      () => String.fromCharCode(rangeCodes[intSample(0, rangeCodes.length - 1)])
    ).join("");
    pattern = pattern.slice(0, token.index) + generatedString + pattern.slice(token.index + token[0].length);
    token = pattern.match(RANGE_ALPHANUMEMRIC_REG);
  }
  const RANGE_REP_REG = /(.)\{(\d+)\,(\d+)\}/;
  token = pattern.match(RANGE_REP_REG);
  while (token != null) {
    min = parseInt(token[2]);
    max = parseInt(token[3]);
    if (min > max) {
      throw new Error("Numbers out of order in {} quantifier.");
    }
    repetitions = intSample(min, max);
    pattern = pattern.slice(0, token.index) + token[1].repeat(repetitions) + pattern.slice(token.index + token[0].length);
    token = pattern.match(RANGE_REP_REG);
  }
  const REP_REG = /(.)\{(\d+)\}/;
  token = pattern.match(REP_REG);
  while (token != null) {
    repetitions = parseInt(token[2]);
    pattern = pattern.slice(0, token.index) + token[1].repeat(repetitions) + pattern.slice(token.index + token[0].length);
    token = pattern.match(REP_REG);
  }
  return pattern;
}

// node_modules/openapi-sampler/src/samplers/string.js
var passwordSymbols = "qwerty!@#$%^123456";
function emailSample() {
  return "user@example.com";
}
function idnEmailSample() {
  return "\u043F\u043E\u0448\u0442\u0430@\u0443\u043A\u0440.\u043D\u0435\u0442";
}
function passwordSample(min, max) {
  let res = "pa$$word";
  if (min > res.length) {
    res += "_";
    res += ensureMinLength(passwordSymbols, min - res.length).substring(0, min - res.length);
  }
  return res;
}
function commonDateTimeSample({ min, max, omitTime, omitDate }) {
  let res = toRFCDateTime(/* @__PURE__ */ new Date("2019-08-24T14:15:22.123Z"), omitTime, omitDate, false);
  if (res.length < min) {
    console.warn(`Using minLength = ${min} is incorrect with format "date-time"`);
  }
  if (max && res.length > max) {
    console.warn(`Using maxLength = ${max} is incorrect with format "date-time"`);
  }
  return res;
}
function dateTimeSample(min, max) {
  return commonDateTimeSample({ min, max, omitTime: false, omitDate: false });
}
function dateSample(min, max) {
  return commonDateTimeSample({ min, max, omitTime: true, omitDate: false });
}
function timeSample(min, max) {
  return commonDateTimeSample({ min, max, omitTime: false, omitDate: true }).slice(1);
}
function defaultSample(min, max, _propertyName, pattern, enablePatterns = false) {
  if (pattern && enablePatterns) {
    return regexSample(pattern);
  }
  let res = ensureMinLength("string", min);
  if (max && res.length > max) {
    res = res.substring(0, max);
  }
  return res;
}
function ipv4Sample() {
  return "192.168.0.1";
}
function ipv6Sample() {
  return "2001:0db8:85a3:0000:0000:8a2e:0370:7334";
}
function hostnameSample() {
  return "example.com";
}
function idnHostnameSample() {
  return "\u043F\u0440\u0438\u043A\u043B\u0430\u0434.\u0443\u043A\u0440";
}
function uriSample() {
  return "http://example.com";
}
function uriReferenceSample() {
  return "../dictionary";
}
function uriTemplateSample() {
  return "http://example.com/{endpoint}";
}
function iriSample() {
  return "http://example.com/entity/1";
}
function iriReferenceSample() {
  return "/entity/1";
}
function uuidSample(_min, _max, propertyName) {
  return uuid(propertyName || "id");
}
function jsonPointerSample() {
  return "/json/pointer";
}
function relativeJsonPointerSample() {
  return "1/relative/json/pointer";
}
function regexSample2() {
  return "/regex/";
}
var stringFormats = {
  "email": emailSample,
  "idn-email": idnEmailSample,
  // https://tools.ietf.org/html/rfc6531#section-3.3
  "password": passwordSample,
  "date-time": dateTimeSample,
  "date": dateSample,
  "time": timeSample,
  // full-time in https://tools.ietf.org/html/rfc3339#section-5.6
  "ipv4": ipv4Sample,
  "ipv6": ipv6Sample,
  "hostname": hostnameSample,
  "idn-hostname": idnHostnameSample,
  // https://tools.ietf.org/html/rfc5890#section-2.3.2.3
  "iri": iriSample,
  // https://tools.ietf.org/html/rfc3987
  "iri-reference": iriReferenceSample,
  "uri": uriSample,
  "uri-reference": uriReferenceSample,
  // either a URI or relative-reference https://tools.ietf.org/html/rfc3986#section-4.1
  "uri-template": uriTemplateSample,
  "uuid": uuidSample,
  "default": defaultSample,
  "json-pointer": jsonPointerSample,
  "relative-json-pointer": relativeJsonPointerSample,
  // https://tools.ietf.org/html/draft-handrews-relative-json-pointer-01
  "regex": regexSample2
};
function sampleString(schema, options, spec, context) {
  let format8 = schema.format || "default";
  let sampler = stringFormats[format8] || defaultSample;
  let propertyName = context && context.propertyName;
  return sampler(
    schema.minLength || 0,
    schema.maxLength,
    propertyName,
    schema.pattern,
    options?.enablePatterns
  );
}

// node_modules/openapi-sampler/src/openapi-sampler.js
var import_fast_xml_parser = __toESM(require_fxp());
var _samplers = {};
var defaults = {
  skipReadOnly: false,
  maxSampleDepth: 15
};
function convertJsonToXml(obj, schema) {
  if (!obj) {
    throw new Error("Unknown format output for building XML.");
  }
  if (Array.isArray(obj) || Object.keys(obj).length > 1) {
    obj = { [schema?.xml?.name || "root"]: obj };
  }
  const builder = new import_fast_xml_parser.XMLBuilder({
    ignoreAttributes: false,
    format: true,
    attributeNamePrefix: "$",
    textNodeName: "#text"
  });
  return builder.build(obj);
}
function sample(schema, options, spec) {
  let opts = Object.assign({}, defaults, options);
  clearCache();
  let result = traverse(schema, opts, spec).value;
  if (opts?.format === "xml") {
    return convertJsonToXml(result, schema);
  }
  return result;
}
function _registerSampler(type, sampler) {
  _samplers[type] = sampler;
}
_registerSampler("array", sampleArray);
_registerSampler("boolean", sampleBoolean);
_registerSampler("integer", sampleNumber);
_registerSampler("number", sampleNumber);
_registerSampler("object", sampleObject);
_registerSampler("string", sampleString);

// node_modules/@redocly/openapi-docs/lib-esm/models/schema.js
init_src();
init_lib_esm();

// node_modules/@redocly/openapi-docs/lib-esm/services/OpenAPIParser.js
init_src();

// node_modules/@redocly/openapi-docs/lib-esm/services/config-options/normalizeOptions.js
init_src();

// node_modules/@redocly/openapi-docs/lib-esm/services/config-options/helpers.js
function normalizeShowExtensions(e2) {
  if (void 0 === e2)
    return false;
  if ("" === e2)
    return true;
  if ("string" != typeof e2)
    return e2;
  switch (e2) {
    case "true":
      return true;
    case "false":
      return false;
    default:
      return e2.split(",").map((e3) => e3.trim());
  }
}
function normalizeScrollYOffset(e2) {
  if ("string" == typeof e2 && !isNumeric(e2)) {
    const t = querySelector(e2);
    t || console.warn("scrollYOffset value is a selector to non-existing element. Using offset 0 by default");
    const r = t && t.getBoundingClientRect().bottom || 0;
    return () => r;
  }
  return "number" == typeof e2 || isNumeric(e2) ? () => "number" == typeof e2 ? e2 : parseFloat(e2) : "function" == typeof e2 ? () => {
    const t = e2();
    return "number" != typeof t && console.warn(`scrollYOffset should return number but returned value "${t}" of type ${typeof t}`), t;
  } : (void 0 !== e2 && console.warn("Wrong value for scrollYOffset ReDoc option: should be string, number or function"), () => 0);
}

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/constants.js
var Languages = { curl: "curl", JavaScript: "JavaScript", NodeJs: "Node.js", Python: "Python", Java: "Java", CSharp: "C#", PHP: "PHP", Go: "Go", Ruby: "Ruby", R: "R", Payload: "Payload" };

// node_modules/@redocly/openapi-docs/lib-esm/services/config-options/normalizeOptions.js
function normalizeOptions(e2, o) {
  var a, n2, i2, s, l, r, t, d, u, c, m;
  e2 = Object.assign(Object.assign(Object.assign({}, o), e2), { markdocOptions: Object.assign(Object.assign({}, null == e2 ? void 0 : e2.markdocOptions), { components: Object.assign(Object.assign({}, null === (a = null == o ? void 0 : o.markdocOptions) || void 0 === a ? void 0 : a.components), null === (n2 = null == e2 ? void 0 : e2.markdocOptions) || void 0 === n2 ? void 0 : n2.components), tags: Object.assign(Object.assign({}, null === (i2 = null == o ? void 0 : o.markdocOptions) || void 0 === i2 ? void 0 : i2.tags), null === (s = null == e2 ? void 0 : e2.markdocOptions) || void 0 === s ? void 0 : s.tags), nodes: Object.assign(Object.assign(Object.assign({}, null === (l = null == o ? void 0 : o.markdocOptions) || void 0 === l ? void 0 : l.nodes), null === (r = null == e2 ? void 0 : e2.markdocOptions) || void 0 === r ? void 0 : r.nodes), { heading: (null === (d = null === (t = null == o ? void 0 : o.markdocOptions) || void 0 === t ? void 0 : t.nodes) || void 0 === d ? void 0 : d.heading) || (null === (u = null == e2 ? void 0 : e2.markdocOptions) || void 0 === u ? void 0 : u.nodes.heading) }) }) });
  const p = Array.isArray(e2.ignoreNamedSchemas) ? e2.ignoreNamedSchemas : null === (c = e2.ignoreNamedSchemas) || void 0 === c ? void 0 : c.split(",").map((e3) => e3.trim());
  return { downloadUrls: e2.downloadUrls, schemaDefinitionsTagName: e2.schemaDefinitionsTagName, corsProxyUrl: e2.corsProxyUrl && addTrailingSlash(e2.corsProxyUrl), hideSidebar: argValueToBoolean(e2.hideSidebar, false), jsonSamplesExpandLevel: argValueToExpandLevel(e2.jsonSamplesExpandLevel, 2), generatedSamplesMaxDepth: argValueToInt(e2.generatedSamplesMaxDepth, 8), hideDownloadButtons: argValueToBoolean(e2.hideDownloadButtons, false), hideInfoMetadata: argValueToBoolean(e2.hideInfoMetadata, false), hideLoading: argValueToBoolean(e2.hideLoading, false), hideSchemaTitles: argValueToBoolean(e2.hideSchemaTitles, false), maxDisplayedEnumValues: argValueToNumber(e2.maxDisplayedEnumValues), mockServer: (null === (m = e2.mockServer) || void 0 === m ? void 0 : m.url) ? { url: e2.mockServer.url, position: e2.mockServer.position || "first", description: e2.mockServer.description || "Mock server" } : void 0, hideReplay: argValueToBoolean(e2.hideReplay, false), oAuth2RedirectURI: e2.oAuth2RedirectURI || null, onlyRequiredInSamples: argValueToBoolean(e2.onlyRequiredInSamples, false), onDeepLinkClick: e2.onDeepLinkClick || getWindowReferenceOptions(WindowReferenceOptions.ON_DEEP_LINK_CLICK), requestInterceptor: e2.requestInterceptor || getWindowReferenceOptions(WindowReferenceOptions.REQUEST_INTERCEPTOR), routingBasePath: isUndefined(e2.disableRouter) ? "" : e2.routingBasePath && normalizePath(e2.routingBasePath) || "", schemasExpansionLevel: argValueToExpandLevel(e2.schemasExpansionLevel), feedback: e2.feedback || { hide: false }, sortRequiredPropsFirst: argValueToBoolean(e2.sortRequiredPropsFirst, false), scrollYOffset: normalizeScrollYOffset(e2.scrollYOffset), showExtensions: normalizeShowExtensions(e2.showExtensions), sanitize: argValueToBoolean(e2.sanitize, false), skipBundle: argValueToBoolean(e2.skipBundle, false), ignoreNamedSchemas: new Set(p), markdocOptions: null == e2 ? void 0 : e2.markdocOptions, codeSamples: e2.codeSamples || { languages: Object.values(Languages).map((e3) => ({ lang: e3 })) }, layout: e2.layout || LayoutVariant.THREE_PANEL, events: e2.events || {}, unstable_hooks: e2.unstable_hooks || getWindowReferenceOptions(WindowReferenceOptions.HOOKS) || {}, unstable_skipSamples: argValueToBoolean(e2.unstable_skipSamples, false), unstable_externalCodeSamples: e2.unstable_externalCodeSamples || [], hidePropertiesPrefix: argValueToBoolean(null == e2 ? void 0 : e2.hidePropertiesPrefix, false) };
}

// node_modules/@redocly/openapi-docs/lib-esm/services/OpenAPIParser.js
var __rest = function(e2, t) {
  var i2 = {};
  for (var r in e2)
    Object.prototype.hasOwnProperty.call(e2, r) && t.indexOf(r) < 0 && (i2[r] = e2[r]);
  if (null != e2 && "function" == typeof Object.getOwnPropertySymbols) {
    var n2 = 0;
    for (r = Object.getOwnPropertySymbols(e2); n2 < r.length; n2++)
      t.indexOf(r[n2]) < 0 && Object.prototype.propertyIsEnumerable.call(e2, r[n2]) && (i2[r[n2]] = e2[r[n2]]);
  }
  return i2;
};
function pushRef(e2, t) {
  return t && e2[e2.length - 1] !== t ? [...e2, t] : e2;
}
function concatRefStacks(e2, t) {
  return t ? e2.concat(t) : e2;
}
var OpenAPIParser = class {
  constructor(e2, t, i2 = normalizeOptions({})) {
    Object.defineProperty(this, "options", { enumerable: true, configurable: true, writable: true, value: i2 }), Object.defineProperty(this, "definitionUrl", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "definition", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "allowMergeRefs", { enumerable: true, configurable: true, writable: true, value: false }), Object.defineProperty(this, "byRef", { enumerable: true, configurable: true, writable: true, value: (e3) => {
      let t2;
      if (this.definition) {
        "#" !== e3.charAt(0) && (e3 = "#" + e3), e3 = tryDecodeURIComponent(e3);
        try {
          t2 = JsonPointer.get(this.definition, e3);
        } catch (e4) {
        }
        return t2 || {};
      }
    } }), this.definition = Object.assign({}, e2), this.validate(e2), this.definition = e2, this.allowMergeRefs = e2.openapi.startsWith("3.1");
    const r = IS_BROWSER ? window.location.href : "";
    isString(t) && (this.definitionUrl = new URL(t, r).href);
  }
  validate(e2) {
    if (isUndefined(e2.openapi))
      throw new Error("Document must be valid OpenAPI 3.0.0 definition");
  }
  isRef(e2) {
    return !!e2 && (void 0 !== e2.$ref && null !== e2.$ref);
  }
  deref(e2, t = [], i2 = false) {
    const r = null == e2 ? void 0 : e2["x-refsStack"];
    if ((t = concatRefStacks(t, r)).length > 100)
      return { resolved: Object.assign({}, e2, { "x-complex": true }), refsStack: t };
    if (this.isRef(e2)) {
      const r2 = getDefinitionName(e2.$ref);
      if (r2 && this.options.ignoreNamedSchemas.has(r2))
        return { resolved: { type: "object", title: r2 }, refsStack: t };
      let n2 = this.byRef(e2.$ref);
      if (!n2)
        throw new Error(`Failed to resolve $ref "${e2.$ref}"`);
      if (t.includes(e2.$ref))
        n2 = Object.assign({}, n2, { "x-circular-ref": true });
      else if (this.isRef(n2)) {
        n2 = this.deref(n2, t, i2).resolved;
      }
      return this.allowMergeRefs && (n2 = this.mergeRefs(e2, n2, i2)), { resolved: n2, refsStack: pushRef(t, e2.$ref) };
    }
    return { resolved: e2, refsStack: concatRefStacks(t, r) };
  }
  mergeRefs(e2, t, i2) {
    const { $ref: r } = e2, n2 = __rest(e2, ["$ref"]), s = Object.keys(n2);
    if (0 === s.length)
      return t;
    if (i2 && s.some((e3) => !["description", "title", "externalDocs", "x-refsStack", "x-parentRefs", "readOnly", "writeOnly", "x-complex"].includes(e3))) {
      const e3 = n2, { description: i3, title: r2, readOnly: s2, writeOnly: o } = e3;
      return { allOf: [{ description: i3, title: r2, readOnly: s2, writeOnly: o }, t, __rest(e3, ["description", "title", "readOnly", "writeOnly"])] };
    }
    return Object.assign(Object.assign({}, t), n2);
  }
  mergeAllOf(e2, t, i2, r = "") {
    var n2;
    if (e2["x-circular-ref"])
      return e2;
    if (void 0 === (e2 = this.hoistOneOfs(e2)).allOf)
      return Object.assign({ absolutePointer: r }, e2);
    let s = Object.assign(Object.assign({}, e2), { "x-parentRefs": [], absolutePointer: JsonPointer.join(r, ["allOf"]), allOf: void 0, title: e2.title || getDefinitionName(t) });
    !isUndefined(s.properties) && isObject(s.properties) && (s.properties = Object.assign({}, s.properties)), !isUndefined(s.items) && isObject(s.items) && (s.items = Object.assign({}, s.items));
    const o = e2.allOf.map((e3, t2) => {
      var n3;
      const { resolved: o2, refsStack: f } = this.deref(e3, i2, true), l = e3.$ref, a = l || JsonPointer.join(r, [String(t2)]);
      if (o2["x-complex"])
        return { $ref: l, refsStack: pushRef(f, l), schema: { "x-complex": true }, absolutePointer: a };
      const c = this.mergeAllOf(o2, l, f, a);
      return c["x-circular-ref"] && c.allOf ? void 0 : (l && (null === (n3 = s["x-parentRefs"]) || void 0 === n3 || n3.push(...c["x-parentRefs"] || [], l)), { $ref: l, refsStack: pushRef(f, l), schema: c, absolutePointer: a });
    }).filter(Boolean);
    for (const [e3, { schema: i3, refsStack: r2, absolutePointer: f }] of o.entries()) {
      const o2 = i3 || {}, { type: l, enum: a, properties: c, items: d, required: p, title: O, description: u, readOnly: m, writeOnly: y, oneOf: b, anyOf: h, "x-circular-ref": g, "x-complex": x } = o2, j = __rest(o2, ["type", "enum", "properties", "items", "required", "title", "description", "readOnly", "writeOnly", "oneOf", "anyOf", "x-circular-ref", "x-complex"]);
      if (s.type === l || isUndefined(s.type) || isUndefined(l)) {
        if (isUndefined(l) || (Array.isArray(l) && Array.isArray(s.type) ? s.type = [...l, ...s.type] : s.type = l), isUndefined(a) || (Array.isArray(a) && Array.isArray(s.enum) ? s.enum = Array.from(/* @__PURE__ */ new Set([...a, ...s.enum])) : s.enum = a), !isUndefined(c) && isObject(c)) {
          s.properties = s.properties || {};
          for (const i4 in c) {
            const o3 = concatRefStacks(r2, null === (n2 = c[i4]) || void 0 === n2 ? void 0 : n2["x-refsStack"]);
            if (s.properties[i4]) {
              if (!g) {
                const r3 = this.mergeAllOf({ allOf: [s.properties[i4], c[i4]], "x-refsStack": o3 }, t + "/properties/" + i4, o3, JsonPointer.join(f, ["allOf", String(e3), "properties", i4]));
                s.properties[i4] = r3;
              }
            } else
              s.properties[i4] = Object.assign(Object.assign({}, c[i4]), { absolutePointer: JsonPointer.join(f, ["properties", i4]), "x-refsStack": o3 });
          }
        }
        if (!isUndefined(d) && !g && !x) {
          const e4 = "boolean" == typeof s.items ? {} : Object.assign({}, s.items), n3 = "boolean" == typeof i3.items ? {} : Object.assign({}, i3.items);
          s.items = this.mergeAllOf({ allOf: [e4, n3] }, t + "/items", r2);
        }
        isUndefined(b) || (s.oneOf = b), isUndefined(h) || (s.anyOf = h), Array.isArray(p) && (s.required = [...s.required || [], ...p]), s = Object.assign(Object.assign(Object.assign({}, s), { title: s.title || O, description: s.description || u, readOnly: isUndefined(s.readOnly) ? m : s.readOnly, writeOnly: isUndefined(s.writeOnly) ? y : s.writeOnly, "x-circular-ref": s["x-circular-ref"] || g, "x-complex": s["x-complex"] || x }), j);
      }
    }
    return s;
  }
  findDerived(e2) {
    const t = {}, i2 = this.definition.components && this.definition.components.schemas || {};
    for (const r in i2) {
      const { resolved: n2 } = this.deref(i2[r]);
      !isUndefined(n2.allOf) && n2.allOf.find((t2) => !isUndefined(t2.$ref) && e2.indexOf(t2.$ref) > -1) && (t["#/components/schemas/" + r] = [n2["x-discriminator-value"] || r]);
    }
    return t;
  }
  hoistOneOfs(e2) {
    if (isUndefined(e2.allOf))
      return e2;
    const { allOf: t } = e2, i2 = __rest(e2, ["allOf"]);
    for (let e3 = 0; e3 < t.length; e3++) {
      const r = t[e3], { oneOf: n2 } = r, s = __rest(r, ["oneOf"]);
      if (n2 && Array.isArray(n2)) {
        const r2 = t.slice(0, e3), o = t.slice(e3 + 1), f = Object.keys(s).length > 0 ? [s] : [];
        return Object.assign(Object.assign({}, i2), { oneOf: n2.map((e4) => ({ allOf: [...r2, ...f, e4, ...o] })) });
      }
    }
    return e2;
  }
};

// node_modules/@redocly/openapi-docs/lib-esm/models/field.js
init_lib_esm();

// node_modules/@redocly/openapi-docs/lib-esm/models/example.js
function getExamples({ parser: e2, infoOrRef: r, mime: n2, encoding: o }) {
  const { resolved: a } = e2.deref(r), i2 = a.value;
  return { value: a.value, rawValue: i2, summary: getValueFromMdParsedExtension(a, "summary"), description: getValueFromMdParsedExtension(a, "description"), mime: n2, encoding: o };
}

// node_modules/@redocly/openapi-docs/lib-esm/models/field.js
var DEFAULT_SERIALIZATION = { path: { style: "simple", explode: false }, query: { style: "form", explode: true }, header: { style: "simple", explode: false }, cookie: { style: "form", explode: true } };
function getField(e2, o, t, i2, n2, s, l = t) {
  var r, a, d, m, p, c, x;
  const { resolved: u } = e2.deref(o), v = o.kind || "field", E = o.name || u.name, f = u.in, h = !!u.required;
  let A, g, O = u.schema, R = "";
  if (!O && u.in && u.content) {
    R = Object.keys(u.content)[0];
    const o2 = u.content[R];
    O = o2 && (null == o2 ? void 0 : o2.example) ? Object.assign(Object.assign({}, e2.deref(o2.schema, s, true).resolved), { example: u.example || o2.example }) : o2.schema;
  }
  const F = joinWithSeparator(n2.parentFieldFullPath, removePercentChart(E || "")), S = getSchema({ parser: e2, schemaOrRef: O || {}, pointer: t, options: i2, baseRefsStack: s, absolutePointer: o.$ref || (null === (r = u.schema) || void 0 === r ? void 0 : r.absolutePointer) || l, deps: Object.assign(Object.assign({}, n2), { parentFieldFullPath: F, in: f }) }), y = void 0 === u.description ? getValueFromMdParsedExtension(S, "description") || "" : getValueFromMdParsedExtension(u, "description"), _ = u.example || S.example, C = u.examples || (null === (d = null === (a = u.content) || void 0 === a ? void 0 : a[R]) || void 0 === d ? void 0 : d.examples), L = C ? mapValues(C, (o2, t2) => getExamples({ parser: e2, infoOrRef: o2, mime: t2, encoding: u.encoding })) : void 0;
  R ? A = R : u.style ? g = u.style : f && (g = null !== (p = null === (m = DEFAULT_SERIALIZATION[f]) || void 0 === m ? void 0 : m.style) && void 0 !== p ? p : "form");
  const P = void 0 === u.explode && f ? null === (x = null === (c = DEFAULT_SERIALIZATION[f]) || void 0 === c ? void 0 : c.explode) || void 0 === x || x : !!u.explode;
  return { deps: n2 || {}, schema: S, name: E, required: h, description: y, example: _, examples: L, deprecated: void 0 === u.deprecated ? S.deprecated : u.deprecated, in: f, kind: v, extensions: i2.showExtensions ? extractExtensions(u, i2.showExtensions) : void 0, explode: P, style: g, const: (null == S ? void 0 : S.const) || (null == u ? void 0 : u.const) || "", serializationMime: A, fieldFullPath: F, [REDOCLY_TEAMS_RBAC]: u[REDOCLY_TEAMS_RBAC] || S[REDOCLY_TEAMS_RBAC] };
}

// node_modules/@redocly/openapi-docs/lib-esm/models/schema.js
var __rest2 = function(e2, i2) {
  var t = {};
  for (var r in e2)
    Object.prototype.hasOwnProperty.call(e2, r) && i2.indexOf(r) < 0 && (t[r] = e2[r]);
  if (null != e2 && "function" == typeof Object.getOwnPropertySymbols) {
    var n2 = 0;
    for (r = Object.getOwnPropertySymbols(e2); n2 < r.length; n2++)
      i2.indexOf(r[n2]) < 0 && Object.prototype.propertyIsEnumerable.call(e2, r[n2]) && (t[r[n2]] = e2[r[n2]]);
  }
  return t;
};
function getSchema({ parser: e2, schemaOrRef: i2, pointer: t, options: r, isChild: n2 = false, baseRefsStack: s = [], deps: o, absolutePointer: a }) {
  var l, p, d, m, c, f, y, u, O;
  const { resolved: h, refsStack: v } = e2.deref(i2, s, true), b = i2.$ref || t || a || "", P = pushRef(v, b), g = e2.mergeAllOf(h, b, P, i2.$ref || a), x = g.type || detectType(g), F = { operationPointer: (null === (l = o.operation) || void 0 === l ? void 0 : l.pointer) || a || "", schemaOrRef: i2, isChild: n2, typePrefix: "", pointer: b, absolutePointer: a, refsStack: P, rawSchema: h, type: x, isCircular: !!g["x-circular-ref"], isComplex: !!g["x-complex"], title: g.title || isNamedDefinition(b) && JsonPointer.baseName(b) || "", description: getValueFromMdParsedExtension(g, "description") || "", format: g.format, enum: g.enum || [], example: g.example, deprecated: !!g.deprecated, pattern: g.pattern, externalDocs: g.externalDocs, displayFormat: g.format, isPrimitive: isPrimitiveType(g, x), constraints: humanizeConstraints(g), default: g.default, readOnly: !!g.readOnly, writeOnly: !!g.writeOnly, const: g.const || "", contentEncoding: g.contentEncoding, contentMediaType: g.contentMediaType, minItems: g.minItems, maxItems: g.maxItems, nullable: g.nullable || g["x-nullable"], schema: g, displayType: "", items: void 0, extensions: void 0, oneOfType: "", discriminatorProp: void 0, oneOf: void 0, [REDOCLY_TEAMS_RBAC]: g[REDOCLY_TEAMS_RBAC], "x-enumDescriptions": getValueFromMdParsedExtension(g, "x-enumDescriptions"), get fields() {
    if (!F.isCircular && !F.isComplex && (hasType(F, "object") || hasType(F, "array") && (Array.isArray(g.items) || Array.isArray(g.prefixItems))))
      return buildFields(e2, g, b, r, P, o);
  } };
  if ((g.nullable || g["x-nullable"]) && (Array.isArray(F.type) && !F.type.some((e3) => null === e3 || "null" === e3) ? F.type = [...F.type, "null"] : Array.isArray(F.type) || null === F.type && "null" === F.type || (F.type = [F.type, "null"])), F.displayType = Array.isArray(F.type) ? F.type.map((e3) => null === e3 ? "null" : e3).join(" or ") : F.type, F.isCircular)
    return F;
  if (g.if && g.then || g.if && g.else) {
    const { oneOf: i3, oneOfType: t2 } = initConditionalOperators({ schema: g, parser: e2, pointer: b, options: r, deps: o, refsStack: P });
    return F.oneOf = i3, F.oneOfType = t2, F;
  }
  if (!n2 && void 0 !== getDiscriminator(g)) {
    const { oneOf: i3, discriminatorProp: t2 } = initDiscriminator({ schema: g, parser: e2, deps: o, mergedSchema: g, options: r, pointer: b, refsStack: P });
    return F.oneOf = i3, F.discriminatorProp = t2, F;
  }
  if (n2 && Array.isArray(g.oneOf) && g.oneOf.find((e3) => e3.$ref === b) && delete g.oneOf, void 0 !== g.oneOf) {
    const { oneOf: i3, displayType: t2 } = initOneOf({ schemaOneOf: g.oneOf, parser: e2, deps: o, options: r, pointer: b, refsStack: P, schema: g });
    return F.oneOfType = "One of", i3 && (F.oneOf = i3), F.displayType = t2, void 0 !== g.anyOf && console.warn(`oneOf and anyOf are not supported on the same level. Skipping anyOf at ${b}`), F;
  }
  if (void 0 !== g.anyOf) {
    const { oneOf: i3, displayType: t2 } = initOneOf({ schemaOneOf: g.anyOf, parser: e2, deps: o, options: r, pointer: b, refsStack: P, schema: g });
    return i3 && (F.oneOf = i3), F.displayType = t2, F.oneOfType = "Any of", F;
  }
  if (hasType(F, "array") && (g.items && (F.items = getSchema({ parser: e2, schemaOrRef: g.items, pointer: b + "/items", options: r, baseRefsStack: P, deps: o, absolutePointer: JsonPointer.join(g.absolutePointer || "", ["items"]) })), F.displayType = g.prefixItems || Array.isArray(g.items) ? "items" : pluralizeType((null === (p = F.items) || void 0 === p ? void 0 : p.displayType) || F.displayType), F.displayFormat = (null === (d = F.items) || void 0 === d ? void 0 : d.format) || "", F.typePrefix = (null === (m = F.items) || void 0 === m ? void 0 : m.typePrefix) || "Array of ", F.title = F.title || (null === (c = F.items) || void 0 === c ? void 0 : c.title) || "", F.isPrimitive = void 0 !== (null === (f = F.items) || void 0 === f ? void 0 : f.isPrimitive) ? null === (y = F.items) || void 0 === y ? void 0 : y.isPrimitive : F.isPrimitive, void 0 === F.example && void 0 !== (null === (u = F.items) || void 0 === u ? void 0 : u.example) && (F.example = [F.items.example]), (null === (O = F.items) || void 0 === O ? void 0 : O.isPrimitive) && (F.enum = F.items.enum, F["x-enumDescriptions"] = getValueFromMdParsedExtension(F.items, "x-enumDescriptions")), Array.isArray(F.type))) {
    const e3 = F.type.filter((e4) => "array" !== e4);
    e3.length && (F.displayType += ` or ${e3.join(" or ")}`);
  }
  return r.showExtensions && (F.extensions = extractExtensions(g, r.showExtensions)), F;
}
function initDiscriminator({ schema: e2, parser: i2, pointer: t, options: r, refsStack: n2, deps: s, mergedSchema: o }) {
  const a = getDiscriminator(e2), l = null == a ? void 0 : a.propertyName, p = i2.findDerived([...o["x-parentRefs"] || [], t]);
  if (e2.oneOf)
    for (const i3 of e2.oneOf) {
      if (void 0 === i3.$ref)
        continue;
      const e3 = JsonPointer.baseName(i3.$ref);
      p[i3.$ref] = e3;
    }
  const d = (null == a ? void 0 : a.mapping) || {};
  let m = (null == a ? void 0 : a["x-explicitMappingOnly"]) || false;
  0 === Object.keys(d).length && (m = false);
  const c = {};
  for (const e3 in d) {
    const i3 = d[e3];
    Array.isArray(c[i3]) ? c[i3].push(e3) : c[i3] = [e3];
  }
  const f = m ? Object.assign({}, c) : Object.assign(Object.assign({}, p), c);
  let y = [];
  for (const e3 of Object.keys(f)) {
    const i3 = f[e3];
    if (Array.isArray(i3))
      for (const t2 of i3)
        y.push({ $ref: e3, name: t2 });
    else
      y.push({ $ref: e3, name: i3 });
  }
  const u = Object.keys(d);
  0 !== u.length && (y = y.sort((e3, i3) => {
    const t2 = u.indexOf(e3.name), r2 = u.indexOf(i3.name);
    return t2 < 0 && r2 < 0 ? e3.name.localeCompare(i3.name) : t2 < 0 ? 1 : r2 < 0 ? -1 : t2 - r2;
  }));
  return { oneOf: y.map(({ $ref: e3, name: t2 }, a2) => {
    const l2 = getSchema({ parser: i2, schemaOrRef: { $ref: e3 }, pointer: e3, options: r, isChild: true, baseRefsStack: n2.slice(0, -1), deps: Object.assign(Object.assign({}, s), { parentFieldFullPath: s.parentFieldFullPath ? s.parentFieldFullPath + "&d=" + a2 : "&d=" + a2.toString() }), absolutePointer: o.absolutePointer });
    return l2.title = t2, l2;
  }), discriminatorProp: l };
}
function initOneOf({ schemaOneOf: e2, parser: i2, refsStack: t, pointer: r, schema: n2, options: s, deps: o }) {
  const a = e2.map((e3, a2) => {
    const { resolved: l2, refsStack: p } = i2.deref(e3, t, true), d = i2.mergeAllOf(l2, r + "/oneOf/" + a2, p), m = isNamedDefinition(e3.$ref) && !d.title ? JsonPointer.baseName(e3.$ref) : `${d.title || ""}${d.const && JSON.stringify(d.const) || ""}`;
    return getSchema({ parser: i2, schemaOrRef: Object.assign(Object.assign({}, d), { title: m, allOf: [Object.assign(Object.assign({}, n2), { oneOf: void 0, anyOf: void 0 })], discriminator: l2.allOf ? void 0 : d.discriminator }), pointer: e3.$ref || r + "/oneOf/" + a2, options: s, baseRefsStack: p, deps: Object.assign(Object.assign({}, o), { parentFieldFullPath: o.parentFieldFullPath ? o.parentFieldFullPath + "&oneOf=" + a2 : "&oneOf=" + a2.toString() }) });
  }), l = a.map((e3) => {
    let i3 = e3.typePrefix + (e3.title ? `${e3.title} (${e3.displayType})` : e3.displayType);
    return i3.indexOf(" or ") > -1 && (i3 = `(${i3})`), i3;
  }).join(" or ");
  return { oneOf: a, displayType: l };
}
function initConditionalOperators({ schema: e2, parser: i2, pointer: t, options: r, refsStack: n2, deps: s }) {
  const { if: o, else: a = {}, then: l = {} } = e2, p = __rest2(e2, ["if", "else", "then"]);
  return { oneOf: [{ allOf: [p, l, o], title: o && o["x-displayName"] || (null == o ? void 0 : o.title) || "case 1" }, { allOf: [p, a], title: a && a["x-displayName"] || (null == a ? void 0 : a.title) || "case 2" }].map((e3, o2) => getSchema({ parser: i2, schemaOrRef: Object.assign({}, e3), pointer: t + "/oneOf/" + o2, options: r, baseRefsStack: n2, deps: Object.assign(Object.assign({}, s), { parentFieldFullPath: s.parentFieldFullPath ? s.parentFieldFullPath + "&oneOf=" + o2 : "&oneOf=" + o2.toString() }) })), oneOfType: "One of" };
}
function normalizeField(e2, i2, t) {
  return e2 || (console.warn(`Field "${i2}" is invalid, skipping.
 Field must be an object but got ${typeof e2} at "${t}"`), {});
}
function buildFields(e2, i2, t, r, n2, s) {
  let o = i2.properties || (hasType(i2, "array") ? i2.prefixItems || i2.items : void 0) || {};
  const a = i2.patternProperties || {}, l = i2.additionalProperties || i2.unevaluatedProperties, p = i2.prefixItems ? i2.items : i2.additionalItems, d = i2.default || {};
  let m = Object.keys(o).map((a2) => {
    var l2;
    const p2 = normalizeField(o[a2], a2, t), m2 = void 0 !== i2.required && i2.required.indexOf(a2) > -1;
    return getField(e2, { name: i2.properties ? a2 : `[${a2}]`, required: m2, schema: Object.assign(Object.assign({}, p2), { example: (null === (l2 = i2.example) || void 0 === l2 ? void 0 : l2[a2]) || p2.example, default: void 0 === p2.default && d ? d[a2] : p2.default }) }, t + "/properties/" + a2, r, s, n2, JsonPointer.join(i2.absolutePointer || "", ["properties", a2]));
  });
  return r.sortRequiredPropsFirst && (m = sortByRequired(m, i2.required)), m.push(...Object.keys(a).map((i3) => {
    const o2 = normalizeField(a[i3], i3, t);
    return getField(e2, { name: i3, required: false, schema: o2, kind: "patternProperties" }, `${t}/patternProperties/${i3}`, r, s, n2);
  })), (isObject(l) || true === l) && m.push(getField(e2, { name: (isObject(l) && l["x-additionalPropertiesName"] || "property name").concat("*"), required: false, schema: true === l ? {} : l, kind: "additionalProperties" }, t + "/additionalProperties", r, s, n2, JsonPointer.join(i2.absolutePointer || "", ["additionalProperties"]))), m.push(...buildAdditionalItems({ parser: e2, schema: p, fieldsCount: m.length, $ref: t, options: r, refsStack: n2, deps: s })), sortByDeprecated(m);
}
function buildAdditionalItems({ parser: e2, schema: i2 = false, fieldsCount: t, $ref: r, options: n2, refsStack: s, deps: o }) {
  return "boolean" == typeof i2 ? i2 ? [getField(e2, { name: `[${t}...]`, schema: {}, kind: "additionalItems" }, `${r}/additionalItems`, n2, o, s)] : [] : Array.isArray(i2) ? [...i2.map((i3, a) => getField(e2, { name: `[${t + a}]`, schema: i3, kind: "additionalItems" }, `${r}/additionalItems/${a}`, n2, o, s))] : isObject(i2) ? [getField(e2, { name: `[${t}...]`, schema: i2, kind: "additionalItems" }, `${r}/additionalItems`, n2, o, s)] : [];
}
function getDiscriminator(e2) {
  return e2.discriminator || e2["x-discriminator"];
}
function hasType(e2, i2) {
  return e2.type === i2 || Array.isArray(e2.type) && e2.type.includes(i2);
}

// node_modules/@redocly/openapi-docs/lib-esm/models/mediaType.js
function generateExamples({ parser: e2, info: { encoding: a, schema: i2 }, schema: s, mime: o, options: { isRequestType: n2, onlyRequiredInSamples: r, generatedSamplesMaxDepth: m, format: t = "json" } }) {
  const p = { skipReadOnly: n2, skipWriteOnly: !n2, skipNonRequired: n2 && r, maxSampleDepth: m, quiet: true, format: t };
  let l = {};
  if (s && s.oneOf)
    for (const i3 of s.oneOf) {
      const n3 = sample(i3.rawSchema, p, e2.definition);
      s.discriminatorProp && "object" == typeof n3 && n3 && n3[s.discriminatorProp] && (n3[s.discriminatorProp] = i3.title), l[i3.title] = getExamples({ parser: e2, infoOrRef: { value: n3 }, mime: o, encoding: a });
    }
  else
    l = s ? { default: getExamples({ parser: e2, infoOrRef: { value: sample(i2, p, e2.definition) }, mime: o, encoding: a }) } : { default: { value: null, rawValue: "null" } };
  return l;
}
function getMediaType(e2, a, i2, s, o, { operation: n2, type: r, response: m, absolutePointer: t = "" }) {
  let p, l;
  const d = s.schema && getSchema({ parser: e2, schemaOrRef: s.schema, pointer: "", absolutePointer: JsonPointer.join(t, ["content", a, "schema"]), options: o, deps: { operation: n2, type: r, response: m } }), { onlyRequiredInSamples: f, generatedSamplesMaxDepth: u } = o, { encoding: c, examples: g, example: x } = s;
  return o.unstable_skipSamples || (void 0 !== g ? p = mapValues(g, (i3) => getExamples({ parser: e2, infoOrRef: i3, mime: a, encoding: c })) : void 0 !== x ? p = { default: getExamples({ parser: e2, infoOrRef: { value: e2.deref(x).resolved }, mime: a, encoding: c }) } : isJsonLike(a) || isXmlLike(a) ? p = generateExamples({ parser: e2, info: s, schema: d, mime: a, options: { isRequestType: i2, onlyRequiredInSamples: f, generatedSamplesMaxDepth: u, format: isXmlLike(a) ? "xml" : "json" } }) : (isFormUrlEncoded(a) || isMultipartFormData(a)) && (l = generateExamples({ parser: e2, info: s, schema: d, mime: a, options: { isRequestType: i2, onlyRequiredInSamples: f, generatedSamplesMaxDepth: u } }))), { examples: p, schema: d, name: a, isRequestType: i2, formExamples: l, onlyRequiredInSamples: f, operation: n2 };
}

// node_modules/@redocly/openapi-docs/lib-esm/jotai/app.js
init_src();

// node_modules/@redocly/openapi-docs/lib-esm/utils/cookies.js
function setCookie(e2, o, t = { path: "/" }) {
  if ("undefined" == typeof document)
    return;
  "number" == typeof t.expires && (t.expires = new Date(Date.now() + 864e5 * t.expires)), t.expires && (t.expires = t.expires instanceof Date ? t.expires.toUTCString() : t.expires), e2 = encodeURIComponent(e2).replace(/%(2[346B]|5E|60|7C)/g, tryDecodeURIComponent).replace(/[()]/g, escape);
  let n2 = "";
  for (const e3 in t)
    t[e3] && (n2 += "; " + e3, true !== t[e3] && (n2 += "=" + String(t[e3]).split(";")[0]));
  return document.cookie = e2 + "=" + encode(o) + n2;
}
function getCookie(e2, o) {
  const t = "undefined" != typeof document ? document.cookie : o, n2 = t ? t.split("; ") : [], r = {};
  for (let o2 = 0; o2 < n2.length; o2++) {
    const t2 = n2[o2].split("="), i2 = t2.slice(1).join("=");
    try {
      const o3 = tryDecodeURIComponent(t2[0]);
      if (o3 in r || (r[o3] = decode(i2)), e2 === o3)
        break;
    } catch (e3) {
    }
  }
  return e2 ? r[e2] : r;
}
function removeCookie(e2, o = { path: "/" }) {
  setCookie(e2, "", Object.assign(Object.assign({}, o), { expires: -1 }));
}
function decode(e2) {
  return '"' === e2[0] && (e2 = e2.slice(1, -1)), e2.replace(/(%[\dA-F]{2})+/gi, tryDecodeURIComponent);
}
function encode(e2) {
  return encodeURIComponent(e2).replace(/%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g, tryDecodeURIComponent);
}

// node_modules/@redocly/openapi-docs/lib-esm/jotai/store.js
var globalStoreAtom = atom({ parser: {}, options: {} });
var globalParserAtom = atom((o) => o(globalStoreAtom).parser);
var globalOptionsAtom = atom((o) => o(globalStoreAtom).options);

// node_modules/@redocly/openapi-docs/lib-esm/utils/environments.js
function mergeEnvData(e2, r) {
  if (!r)
    return e2;
  return Array.from(/* @__PURE__ */ new Set([...Object.keys(e2), ...Object.keys(r)])).reduce((t, n2) => (t[n2] = Object.assign(Object.assign({}, e2[n2]), r[n2]), t), {});
}
function getServerEnvName(e2) {
  return e2.description || e2.url;
}

// node_modules/@redocly/openapi-docs/lib-esm/jotai/app.js
var __rest3 = function(e2, t) {
  var o = {};
  for (var n2 in e2)
    Object.prototype.hasOwnProperty.call(e2, n2) && t.indexOf(n2) < 0 && (o[n2] = e2[n2]);
  if (null != e2 && "function" == typeof Object.getOwnPropertySymbols) {
    var r = 0;
    for (n2 = Object.getOwnPropertySymbols(e2); r < n2.length; r++)
      t.indexOf(n2[r]) < 0 && Object.prototype.propertyIsEnumerable.call(e2, n2[r]) && (o[n2[r]] = e2[n2[r]]);
  }
  return o;
};
var defaultAppStoreValue = { isSidebarOpened: true, activeMimeName: "", layout: LayoutVariant.THREE_PANEL, language: "", environment: "", environments: {} };
var customStorage = { getItem: (e2) => {
  var t, o;
  const n2 = safeJsonParse(getCookie(e2, null === (o = null === (t = globalThis.redoclyCookieStorage) || void 0 === t ? void 0 : t.getStore) || void 0 === o ? void 0 : o.call(t))), r = safeJsonParse(fromSessionStorage(e2));
  return Object.assign(Object.assign(Object.assign({}, defaultAppStoreValue), r), n2);
}, setItem: (e2, t) => {
  const { environments: o } = t, n2 = __rest3(t, ["environments"]), r = { environments: o };
  setCookie(e2, JSON.stringify(n2)), toSessionStorage(e2, JSON.stringify(r));
}, removeItem: (e2) => {
  removeCookie(e2), sessionStorage.removeItem(e2);
} };
var appStore = atomWithStorage("redoc.appStore", defaultAppStoreValue, customStorage);
var appStoreOverrideAtom = atom({});
var environmentsAtom = atom((e2) => {
  const t = e2(appStore), o = e2(appStoreOverrideAtom);
  return mergeEnvData(t.environments, (null == o ? void 0 : o.environments) || {});
});
var environmentAtom = atom((e2) => {
  const t = e2(appStore), o = e2(appStoreOverrideAtom), n2 = mergeEnvData(t.environments, (null == o ? void 0 : o.environments) || {}), r = (null == o ? void 0 : o.environment) || t.environment, a = n2[r] ? r : Object.keys(n2)[0];
  return [n2[a] || {}, a || ""];
}, (e2, t, { environment: o, environments: n2 }) => {
  const r = e2(appStore);
  t(appStore, Object.assign(Object.assign({}, r), { environment: o || r.environment, environments: mergeEnvData(r.environments || {}, n2) }));
});
var isSidebarOpenedAtom = atom((e2) => e2(appStore).isSidebarOpened, (e2, t, o) => {
  const n2 = e2(appStore);
  t(appStore, Object.assign(Object.assign({}, n2), { isSidebarOpened: o }));
});
var activeMimeNameAtom = atom((e2) => e2(appStore).activeMimeName, (e2, t, o) => {
  const n2 = e2(appStore);
  t(appStore, Object.assign(Object.assign({}, n2), { activeMimeName: o }));
});
var layoutAtom = atom((e2) => e2(appStore).layout, (e2, t, o = LayoutVariant.STACKED) => {
  const n2 = e2(appStore);
  t(appStore, Object.assign(Object.assign({}, n2), { layout: o }));
});
var appSessionStore = atomWithStorage("redoc.appSessionStore", { collapsedSidebar: false, unsupportedFeatureScreen: false }, IS_BROWSER ? createJSONStorage(() => sessionStorage) : void 0);
var collapsedSidebarAtom = atom((e2) => e2(appSessionStore).collapsedSidebar, (e2, t, o) => {
  const n2 = e2(appSessionStore);
  t(appSessionStore, Object.assign(Object.assign({}, n2), { collapsedSidebar: o }));
});
function getLangKey({ lang: e2, label: t }) {
  return (t || e2).toLowerCase();
}
var languageAtom = atom((e2) => {
  var t;
  const { codeSamples: o } = e2(globalOptionsAtom), n2 = o.languages.map(({ lang: e3, label: t2 }, o2) => ({ key: getLangKey({ lang: e3, label: t2 }), lang: e3, title: t2 || e3, order: o2 })), r = e2(appStore).language || n2[0].key;
  return { languages: n2, activeLanguage: (null === (t = n2.find(({ key: e3 }) => e3 === r)) || void 0 === t ? void 0 : t.key) || n2[0].key };
}, (e2, t, o) => {
  const n2 = e2(appStore);
  t(appStore, Object.assign(Object.assign({}, n2), { language: o }));
});

// node_modules/@redocly/openapi-docs/lib-esm/models/mediaContent.js
function getMediaContent({ parser: e2, info: t, isRequestType: o, options: a, data: { operation: i2, type: p, response: r, absolutePointer: m = "" } }) {
  const n2 = Object.keys(t).map((n3) => getMediaType(e2, n3, o, t[n3], a, { operation: i2, type: p, response: r, absolutePointer: m })), s = n2.filter((e3) => !!e3.examples || !!e3.formExamples).length > 0;
  return { mediaTypes: n2, isRequestType: o, hasSample: s, operation: i2 };
}
function getActiveMediaType(e2, t) {
  const o = t || readAtom(activeMimeNameAtom);
  return o && e2.mediaTypes.find((e3) => e3.name === o) || e2.mediaTypes[0] || {};
}

// node_modules/@redocly/openapi-docs/lib-esm/services/history/helpers.js
function getContentTypeName(e2) {
  var o, n2, t, i2, d, s, r, p, l, a, v, u, c;
  if (!e2.in)
    return "request" === e2.deps.type && (null === (t = null === (n2 = null === (o = e2.deps.operation) || void 0 === o ? void 0 : o.requestBody) || void 0 === n2 ? void 0 : n2.content) || void 0 === t ? void 0 : t.mediaTypes) ? (null === (s = null === (d = null === (i2 = e2.deps.operation) || void 0 === i2 ? void 0 : i2.requestBody) || void 0 === d ? void 0 : d.content) || void 0 === s ? void 0 : s.mediaTypes.length) > 1 ? (null === (p = null === (r = e2.deps.operation) || void 0 === r ? void 0 : r.requestBody) || void 0 === p ? void 0 : p.content) && getActiveMediaType(e2.deps.operation.requestBody.content).name : void 0 : "response" === e2.deps.type && (null === (a = null === (l = e2.deps.response) || void 0 === l ? void 0 : l.content) || void 0 === a ? void 0 : a.mediaTypes) && (null === (u = null === (v = e2.deps.response) || void 0 === v ? void 0 : v.content) || void 0 === u ? void 0 : u.mediaTypes.length) > 1 ? (null === (c = e2.deps.response) || void 0 === c ? void 0 : c.content) && getActiveMediaType(e2.deps.response.content).name : void 0;
}
function constructFieldDeepFragment(e2) {
  var o, n2;
  if (!e2)
    return "";
  const t = { t: e2.deps.type, in: e2.in || e2.deps.in, c: "response" === e2.deps.type ? null === (o = e2.deps.response) || void 0 === o ? void 0 : o.code : void 0, cb: (null === (n2 = e2.deps.operation) || void 0 === n2 ? void 0 : n2.isCallback) ? e2.deps.operation.callbackId : void 0, ct: getContentTypeName(e2), path: e2.fieldFullPath };
  return queryString.stringify(t, { encode: false, sort: false });
}
function joinWithSeparator(e2 = "", o = "", n2 = "/") {
  return e2.endsWith(n2) && (e2 = e2.slice(0, -n2.length)), o.startsWith(n2) && (o = o.slice(n2.length)), e2 && o ? e2 + n2 + o : e2 + o;
}
function makeDeepLink(e2, o) {
  return (`/${e2 = encodeBackSlashes(e2)}#` + joinWithSeparator(e2, o)).toLowerCase();
}

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/generator.js
var import_deepmerge2 = __toESM(require_cjs());
init_src();

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/index.js
import * as url from "url";

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/targets/javascript/fetch.js
var import_stringify_object = __toESM(require_stringify_object());

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/helpers/code-builder.js
import * as util from "util";

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/helpers/constants.js
var Lang;
!function(a) {
  a.NODEJS = "Node.js", a.JAVASCRIPT = "javascript", a.PYTHON = "Python", a.JAVA8 = "Java8+Apache", a.JAVA = "Java", a.CSHARP = "C#", a.CSHARPNEWTONSOFT = "C#+Newtonsoft", a.CURL = "curl", a.GO = "Go", a.PHP = "PHP", a.RUBY = "Ruby", a.R = "R";
}(Lang || (Lang = {}));
var NamingVariableConventions;
!function(a) {
  a.UNDER_SCORES = "under_scores", a.CAMEL_CASE = "camelCase", a.PASCAL_CASE = "PascalCase";
}(NamingVariableConventions || (NamingVariableConventions = {}));
var VariableType;
!function(a) {
  a.IMPORT = "import", a.CUSTOM = "custom", a.PATH = "path";
}(VariableType || (VariableType = {}));

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/helpers/lodash-int.js
var rsAstralRange = "\\ud800-\\udfff";
var rsComboRange = "\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff\\u1ab0-\\u1aff\\u1dc0-\\u1dff";
var rsDingbatRange = "\\u2700-\\u27bf";
var rsLowerRange = "a-z\\xdf-\\xf6\\xf8-\\xff";
var rsMathOpRange = "\\xac\\xb1\\xd7\\xf7";
var rsNonCharRange = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf";
var rsSpaceRange = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000";
var rsUpperRange = "A-Z\\xc0-\\xd6\\xd8-\\xde";
var rsVarRange = "\\ufe0e\\ufe0f";
var rsBreakRange = rsMathOpRange + rsNonCharRange + "\\u2000-\\u206f" + rsSpaceRange;
var reQuotes = /['\u2019]/g;
var rsBreak = `[${rsBreakRange}]`;
var rsCombo = `[${rsComboRange}]`;
var rsDingbat = `[${rsDingbatRange}]`;
var rsLower = `[${rsLowerRange}]`;
var rsMisc = `[^${rsAstralRange}${rsBreakRange + "\\d" + rsDingbatRange + rsLowerRange + rsUpperRange}]`;
var rsFitz = "\\ud83c[\\udffb-\\udfff]";
var rsModifier = `(?:${rsCombo}|${rsFitz})`;
var rsNonAstral = `[^${rsAstralRange}]`;
var rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}";
var rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]";
var rsUpper = `[${rsUpperRange}]`;
var rsZWJ = "\\u200d";
var rsMiscLower = `(?:${rsLower}|${rsMisc})`;
var rsMiscUpper = `(?:${rsUpper}|${rsMisc})`;
var rsOptContrLower = "(?:['\u2019](?:d|ll|m|re|s|t|ve))?";
var rsOptContrUpper = "(?:['\u2019](?:D|LL|M|RE|S|T|VE))?";
var reOptMod = `${rsModifier}?`;
var rsOptVar = `[${rsVarRange}]?`;
var rsOptJoin = `(?:${rsZWJ}(?:${[rsNonAstral, rsRegional, rsSurrPair].join("|")})${rsOptVar + reOptMod})*`;
var rsOrdLower = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])";
var rsOrdUpper = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])";
var rsSeq = rsOptVar + reOptMod + rsOptJoin;
var rsEmoji = `(?:${[rsDingbat, rsRegional, rsSurrPair].join("|")})${rsSeq}`;
var reUnicodeWords = RegExp([`${rsUpper}?${rsLower}+${rsOptContrLower}(?=${[rsBreak, rsUpper, "$"].join("|")})`, `${rsMiscUpper}+${rsOptContrUpper}(?=${[rsBreak, rsUpper + rsMiscLower, "$"].join("|")})`, `${rsUpper}?${rsMiscLower}+${rsOptContrLower}`, `${rsUpper}+${rsOptContrUpper}`, rsOrdUpper, rsOrdLower, "\\d+", rsEmoji].join("|"), "g");
var unicodeWords = (r) => r.match(reUnicodeWords);
var reHasUnicode = RegExp(`[${rsZWJ + rsAstralRange + rsComboRange + rsVarRange}]`);
var hasUnicode = (r) => reHasUnicode.test(r);
var rsAstral = `[${rsAstralRange}]`;
var rsNonAstralCombo = `${rsNonAstral}${rsCombo}?`;
var rsSymbol = `(?:${[rsNonAstralCombo, rsCombo, rsRegional, rsSurrPair, rsAstral].join("|")})`;
var reUnicode = RegExp(`${rsFitz}(?=${rsFitz})|${rsSymbol + rsSeq}`, "g");
var unicodeToArray = (r) => r.match(reUnicode) || [];
var asciiToArray = (r) => r.split("");
var getTag = (r) => {
  const e2 = Object.prototype.toString;
  return null == r ? void 0 === r ? "[object Undefined]" : "[object Null]" : e2.call(r);
};
var isSymbol = (r) => {
  const e2 = typeof r;
  return "symbol" == e2 || "object" === e2 && null != r && "[object Symbol]" == getTag(r);
};
var INFINITY = 1 / 0;
var toString = (r) => {
  if (null == r)
    return "";
  if ("string" == typeof r)
    return r;
  if (Array.isArray(r))
    return `${r.map((r2) => null == r2 ? r2 : toString(r2))}`;
  if (isSymbol(r))
    return r.toString();
  const e2 = `${r}`;
  return "0" == e2 && 1 / r == -Infinity ? "-0" : e2;
};
var hasUnicodeWord = RegExp.prototype.test.bind(/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/);
var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
var asciiWords = (r) => r.match(reAsciiWord);
var slice = (r, e2, s) => {
  let o = null == r ? 0 : r.length;
  if (!o)
    return [];
  (e2 = null == e2 ? 0 : e2) < 0 && (e2 = -e2 > o ? 0 : o + e2), (s = (s = void 0 === s ? o : s) > o ? o : s) < 0 && (s += o), o = e2 > s ? 0 : s - e2 >>> 0, e2 >>>= 0;
  let a = -1;
  const t = new Array(o);
  for (; ++a < o; )
    t[a] = r[a + e2];
  return t;
};
var words = (r) => (hasUnicodeWord(r) ? unicodeWords(r) : asciiWords(r)) || [];
var castSlice = (r, e2) => {
  const { length: s } = r;
  return !e2 && s >= s ? r : slice(r, e2, s);
};
var stringToArray = (r) => hasUnicode(r) ? unicodeToArray(r) : asciiToArray(r);
var createCaseFirst = (r) => (e2) => {
  if (!e2)
    return "";
  const s = hasUnicode(e2) ? stringToArray(e2) : void 0, o = s ? s[0] : e2[0], a = s ? castSlice(s, 1).join("") : e2.slice(1);
  return o[r]() + a;
};
var upperFirst = createCaseFirst("toUpperCase");
var camelCase = (r) => words(toString(r).replace(/['\u2019]/g, "")).reduce((r2, e2, s) => (e2 = e2.toLowerCase(), r2 + (s ? upperFirst(e2) : e2)), "");
var lowerCase = (r) => words(toString(r).replace(reQuotes, "")).reduce((r2, e2, s) => r2 + (s ? " " : "") + e2.toLowerCase(), "");
var snakeCase = (r) => words(toString(r).replace(/['\u2019]/g, "")).reduce((r2, e2, s) => r2 + (s ? "_" : "") + e2.toLowerCase(), "");
var startCase = (r) => words(`${r}`.replace(/['\u2019]/g, "")).reduce((r2, e2, s) => r2 + (s ? " " : "") + upperFirst(e2), "");

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/helpers/string-utility.js
var StringUtility = class {
  static toCamelCase(a) {
    return camelCase(a);
  }
  static toTitleCase(a) {
    return startCase(camelCase(a));
  }
  static toPascalCase(a) {
    return startCase(camelCase(a)).replace(/ /g, "");
  }
  static toLowerCase(a) {
    return lowerCase(a).replace(/ /g, "");
  }
  static toSnakeCase(a) {
    return snakeCase(a);
  }
};

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/helpers/code-builder.js
var langToVarNameConvention = { [Lang.NODEJS]: NamingVariableConventions.CAMEL_CASE, [Lang.JAVASCRIPT]: NamingVariableConventions.CAMEL_CASE, [Lang.PYTHON]: NamingVariableConventions.UNDER_SCORES, [Lang.JAVA8]: NamingVariableConventions.CAMEL_CASE, [Lang.JAVA]: NamingVariableConventions.CAMEL_CASE, [Lang.CSHARP]: NamingVariableConventions.PASCAL_CASE, [Lang.CSHARPNEWTONSOFT]: NamingVariableConventions.PASCAL_CASE, [Lang.CURL]: NamingVariableConventions.CAMEL_CASE, [Lang.GO]: NamingVariableConventions.CAMEL_CASE, [Lang.PHP]: NamingVariableConventions.CAMEL_CASE, [Lang.RUBY]: NamingVariableConventions.UNDER_SCORES, [Lang.R]: NamingVariableConventions.UNDER_SCORES };
var langOptions = { default: { joinSymbol: "", variableWrapperFn: (a) => a, stringLiteral: (a) => a, variableDeclaration: (a) => a, urlFieldName: "url" }, [Lang.CSHARP]: { joinSymbol: " + ", stringLiteral: (a) => `"${a}"`, variableDeclaration: (a) => `var ${a} = "%s";`, urlFieldName: "fullUrl" }, [Lang.CSHARPNEWTONSOFT]: { joinSymbol: " + ", stringLiteral: (a) => `"${a}"`, variableDeclaration: (a) => `var ${a} = "%s";`, urlFieldName: "fullUrl" }, [Lang.GO]: { joinSymbol: " + ", stringLiteral: (a) => `"${a}"`, variableDeclaration: (a) => `${a} := "%s";` }, [Lang.JAVA]: { joinSymbol: " + ", stringLiteral: (a) => `"${a}"`, variableDeclaration: (a) => `var ${a} = "%s";`, urlFieldName: "pathname" }, [Lang.JAVA8]: { joinSymbol: " + ", stringLiteral: (a) => `"${a}"`, variableDeclaration: (a) => `String ${a} = "%s";`, urlFieldName: "fullUrl" }, [Lang.JAVASCRIPT]: { variableWrapperFn: (a) => "${" + a + "}", variableDeclaration: (a) => `const ${a} = '%s';` }, [Lang.NODEJS]: { variableWrapperFn: (a) => "${" + a + "}", variableDeclaration: (a) => `const ${a} = '%s';` }, [Lang.PHP]: { joinSymbol: " . ", stringLiteral: (a) => `"${a}"`, variableDeclaration: (a) => `const ${a} = "%s";` }, [Lang.PYTHON]: { stringLiteral: (a) => `"${a}"`, joinSymbol: " + ", variableDeclaration: (a) => `${a} = "%s"` }, [Lang.RUBY]: { joinSymbol: " + ", stringLiteral: (a) => `'${a}'`, variableDeclaration: (a) => `${a} = '%s'` }, [Lang.CURL]: { variableWrapperFn: (a, i2) => i2 || `{${a}}`, urlFieldName: "fullUrl", rawName: true }, [Lang.R]: { joinSymbol: " %&% ", variableDeclaration: (a) => `${a} = "%s"`, urlFieldName: "fullUrl", stringLiteral: (a) => `"${a}"`, variableWrapperFn: (a) => `${a}` } };
var reservedVariableNames = ["response", "request", "requests", "data", "url", "payload", "main", "accessToken", "resp", "Program", "client", "postData", "App", "httpClient", "params", "pathname", "host", "body", "fetch", "query"];
var CodeBuilder = class {
  constructor({ indentation: a, lineJoin: i2 = "\n", variablesPrefix: e2 = "", capitalize: n2 = false, lang: r = Lang.CURL }) {
    Object.defineProperty(this, "code", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "indentation", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "variablesPrefix", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "lineJoin", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "capitalize", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "lang", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "langOptions", { enumerable: true, configurable: true, writable: true, value: void 0 }), this.code = [], this.indentation = a, this.variablesPrefix = e2, this.lineJoin = i2 || "\n", this.capitalize = n2, this.lang = r, this.langOptions = Object.assign(Object.assign({}, langOptions.default), langOptions[r]);
  }
  buildLine(a, i2) {
    let e2 = "", n2 = 2;
    if ("string" == typeof a)
      n2 = 1, i2 = a, a = 0;
    else if (null === a)
      return null;
    for (; a; )
      e2 += this.indentation, a--;
    const r = Array.prototype.slice.call(arguments, n2, arguments.length);
    return r.unshift(e2 + i2), util.format.apply(this, r);
  }
  unshift(...a) {
    return this.code.unshift(this.buildLine.apply(this, a)), this;
  }
  push(...a) {
    return this.code.push(this.buildLine.apply(this, a)), this;
  }
  blank() {
    return this.code.push(null), this;
  }
  join() {
    return this.code.join(this.lineJoin);
  }
  clean() {
    this.code.splice(1);
  }
  var(a, i2 = VariableType.CUSTOM) {
    if (i2 === VariableType.PATH) {
      let i3 = this.variablesPrefix + a;
      switch (reservedVariableNames.includes(i3) && (i3 = `${i3}_path`), langToVarNameConvention[this.lang]) {
        case NamingVariableConventions.UNDER_SCORES:
          i3 = StringUtility.toSnakeCase(i3);
          break;
        case NamingVariableConventions.PASCAL_CASE:
          i3 = StringUtility.toPascalCase(i3);
          break;
        case NamingVariableConventions.CAMEL_CASE:
        default:
          i3 = StringUtility.toCamelCase(i3);
      }
      return i3;
    }
    return this.variablesPrefix ? this.variablesPrefix + (this.capitalize ? StringUtility.toPascalCase(a) : a) : a;
  }
};

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/helpers/code-helpers.js
function getPreserveTransformer({ body: e2, authorizationHeader: r }) {
  return function(n2, t, a) {
    return e2 && "body" === t && "string" == typeof n2.body ? n2.body : r && "Authorization" === t && "string" == typeof n2.Authorization ? n2.Authorization : a;
  };
}
function addIndentation(e2, { level: r = 0, indent: n2 = "  ", firstLine: t = true } = {}) {
  const a = n2.repeat(r), i2 = e2.replace(/(\r\n|\n|\r)/gm, `
${a}`);
  return t ? a.concat(i2) : i2;
}
function parseUrlIntoOperands(e2, r) {
  const n2 = Object.keys(r).map((r2) => ({ name: r2, idx: e2.indexOf(`{${r2}}`) })).filter(({ idx: e3 }) => e3 > -1).sort((e3, r2) => e3.idx - r2.idx), t = [];
  let a = 0;
  for (const { name: r2, idx: i2 } of n2)
    i2 > a && t.push({ type: "string", value: e2.substring(a, i2) }), t.push({ type: "variable", name: r2 }), a = i2 + r2.length + 2;
  return a < e2.length && t.push({ type: "string", value: e2.substring(a) }), t;
}
function buildUrlExpression(e2, r) {
  const { joinSymbol: n2, variableWrapperFn: t, stringLiteral: a, urlFieldName: i2, rawName: o } = r.langOptions, { pathParameters: s = {}, serverVariables: p = {} } = e2, l = Object.assign(Object.assign({}, s), p);
  return parseUrlIntoOperands(e2[i2] || "", l).map((e3) => {
    if ("variable" === e3.type) {
      const n3 = l[e3.name], a2 = o ? e3.name : r.var(e3.name, VariableType.PATH);
      return t(a2, n3);
    }
    return a(e3.value);
  }).join(n2);
}
function printUrlVariablesDeclarations({ pathParameters: e2 = {}, serverVariables: r = {} }, n2, t) {
  Object.entries(Object.assign(Object.assign({}, e2), r)).forEach(([e3, r2]) => {
    if ("server" === e3)
      return;
    const a = r2 || `YOUR_${e3}_PARAMETER`, i2 = n2.var(e3, VariableType.PATH);
    void 0 !== t ? n2.push(t, n2.langOptions.variableDeclaration(i2), a) : n2.push(n2.langOptions.variableDeclaration(i2), a);
  });
}

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/targets/javascript/fetch.js
var handler = function(e2, t, { target: a, client: n2 }) {
  var s, r, i2, o, d;
  const l = Object.assign({ indent: "  ", credentials: null }, t), p = new CodeBuilder({ indentation: l.indent, variablesPrefix: l.variablesPrefix, capitalize: true, lang: Lang.JAVASCRIPT }), c = { method: e2.method.toUpperCase() };
  Object.keys(e2.headersObj).length && (c.headers = e2.headersObj);
  let h = false;
  if (l.withComments && addComments(p), null === (s = e2.securityOAuth2ExtraCalls) || void 0 === s ? void 0 : s.length) {
    const t2 = new HTTPSnippet(null === (r = e2.securityOAuth2ExtraCalls) || void 0 === r ? void 0 : r[0]).convert(a, n2, Object.assign(Object.assign({}, l), { withImports: false, withComments: false, variablesPrefix: "oAuth2" }));
    p.push(t2), p.blank(), c.headers = c.headers || {}, c.headers.Authorization = "'Bearer ' + oAuth2Data.access_token", h = true;
  }
  null !== l.credentials && (c.credentials = l.credentials);
  const m = Object.getOwnPropertyNames(e2.queryObj).length;
  if (m && p.push(`const ${p.var("query")} = new URLSearchParams(${(0, import_stringify_object.default)(e2.queryObj, { indent: l.indent, inlineCharacterLimit: 25 })}).toString();`).blank(), e2.postData)
    switch (normalizeMimeType(e2.postData.mimeType)) {
      case MediaTypes.URL_ENCODED:
        c.body = e2.postData.paramsObj ? `new URLSearchParams(${p.var("formData")}).toString()` : e2.postData.text, e2.postData.paramsObj && p.push(`const ${p.var("formData")} = ${addIndentation((0, import_stringify_object.default)(e2.postData.paramsObj, { indent: l.indent, inlineCharacterLimit: 25 }), { level: 0, firstLine: false })};`).blank();
        break;
      case MediaTypes.JSON:
        e2.postData.jsonObj && (c.body = `JSON.stringify(${addIndentation((0, import_stringify_object.default)(e2.postData.jsonObj, { indent: l.indent, inlineCharacterLimit: 25 }), { level: 1, firstLine: false })})`);
        break;
      case MediaTypes.MULTIPART:
        p.push(`const ${p.var("form")} = new FormData();`), null === (i2 = null == c ? void 0 : c.headers) || void 0 === i2 || delete i2["Content-Type"], e2.postData.params.forEach(function(e3) {
          p.push(`${p.var("form")}.append(%s, %s);`, JSON.stringify(e3.name), JSON.stringify(e3.value || e3.fileName || ""));
        }), c.body = p.var("form"), p.blank();
        break;
      default:
        e2.postData.text && (c.body = `\`${addIndentation(e2.postData.text, { level: 2, indent: l.indent, firstLine: false }).trim()}\``);
    }
  const u = c.headers && c.headers.Accept && normalizeMimeType(c.headers.Accept) === MediaTypes.JSON || normalizeMimeType(null === (o = e2.postData) || void 0 === o ? void 0 : o.mimeType) === MediaTypes.JSON;
  if (e2.basicAuth) {
    const { username: t2, password: a2 } = e2.basicAuth;
    c.headers = c.headers || {}, c.headers.Authorization = `'Basic ' + btoa('${t2}:${a2}')`, h = true;
  }
  printUrlVariablesDeclarations(e2, p);
  const b = buildUrlExpression(e2, p);
  return p.push(`const ${p.var("resp")} = await fetch(`).push(1, "`" + b + (m ? "?${" + p.var("query") + "}" : "") + "`,").push(addIndentation((0, import_stringify_object.default)(c, { indent: l.indent, inlineCharacterLimit: 25, transform: getPreserveTransformer({ body: true, authorizationHeader: h }) }), { level: 1, indent: l.indent })).push(");").blank(), (null === (d = e2.allResponseCodes) || void 0 === d ? void 0 : d.includes("204")) ? (p.push("if (resp.status === 204) {").push(1, "console.log('success');").push("} else {"), p.push(1, `const ${p.var("data")} = await ${p.var("resp")}.${u ? "json()" : "text()"};`).push(1, `console.log(${p.var("data")});`).push("}")) : p.push(`const ${p.var("data")} = await ${p.var("resp")}.${u ? "json()" : "text()"};`).push(`console.log(${p.var("data")});`), p.join();
};
function addComments(e2) {
  e2.push("/**"), e2.push(" * Requires ES8-compatible browser: https://caniuse.com/async-functions"), e2.push(" */"), e2.blank();
}
var fetch_default = handler;

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/targets/javascript/index.js
var javascript_default = { info: { key: "javascript", title: "JavaScript", extname: ".js", default: "fetch" }, fetch: fetch_default };

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/targets/node/fetch.js
var import_stringify_object2 = __toESM(require_stringify_object());
var handler2 = function(e2, t, { target: a, client: n2 }) {
  var s, i2, r, o, d;
  const l = Object.assign({ indent: "  ", showBoilerplate: true, level: 1 }, t), { level: p } = l;
  let h = false;
  const c = new CodeBuilder({ indentation: l.indent, variablesPrefix: l.variablesPrefix, capitalize: true, lang: Lang.NODEJS });
  l.withComments && addComments2(c), l.withImports && (c.push("import fetch from 'node-fetch';"), c.blank()), l.showBoilerplate && c.push("async function run() {");
  const m = { method: e2.method.toUpperCase() };
  Object.keys(e2.headersObj).length && (m.headers = e2.headersObj);
  let u = false;
  if (null === (s = e2.securityOAuth2ExtraCalls) || void 0 === s ? void 0 : s.length) {
    const t2 = new HTTPSnippet(null === (i2 = e2.securityOAuth2ExtraCalls) || void 0 === i2 ? void 0 : i2[0]).convert(a, n2, Object.assign(Object.assign({}, l), { withImports: false, withComments: false, variablesPrefix: "oAuth2", showBoilerplate: false, level: 1 }));
    c.push(t2), c.blank(), m.headers = m.headers || {}, m.headers.Authorization = "'Bearer ' + oAuth2Data.access_token", u = true;
  }
  const f = Object.getOwnPropertyNames(e2.queryObj).length;
  if (f && c.push(p, `const ${c.var("query")} = new URLSearchParams(${addIndentation((0, import_stringify_object2.default)(e2.queryObj, { indent: l.indent, inlineCharacterLimit: 25 }), { level: p, indent: l.indent, firstLine: false })}).toString();`).blank(), e2.postData)
    switch (normalizeMimeType(e2.postData.mimeType)) {
      case MediaTypes.URL_ENCODED:
        m.body = e2.postData.paramsObj ? `new URLSearchParams(${c.var("formData")}).toString()` : e2.postData.text, e2.postData.paramsObj && c.push(p, `const ${c.var("formData")} = ${addIndentation((0, import_stringify_object2.default)(e2.postData.paramsObj, { indent: l.indent, inlineCharacterLimit: 25 }), { level: p, firstLine: false })};`).blank();
        break;
      case MediaTypes.JSON:
        e2.postData.jsonObj && (m.body = `JSON.stringify(${addIndentation((0, import_stringify_object2.default)(e2.postData.jsonObj, { indent: l.indent, inlineCharacterLimit: 25 }), { level: p, firstLine: false })})`);
        break;
      case MediaTypes.MULTIPART:
        null === (r = null == m ? void 0 : m.headers) || void 0 === r || delete r["Content-Type"], l.withImports && c.unshift("import FormData from 'form-data';"), c.push(p, `const ${c.var("form")} = new FormData();`), e2.postData.params.forEach(function(e3) {
          e3.fileName || e3.fileName || e3.contentType ? e3.fileName && (h = true, c.blank(), c.push(p, `${c.var("form")}.append('" + param.name + "', fs.createReadStream('" + param.fileName + "'));`)) : c.push(p, "form.append('" + e3.name + "','" + e3.value + "');");
        }), m.body = c.var("form"), c.blank();
        break;
      default:
        e2.postData.text && (m.body = `\`${addIndentation(e2.postData.text, { level: p + 1, indent: l.indent, firstLine: false }).trim()}\``);
    }
  if (e2.cookies.length) {
    let t2 = "";
    e2.cookies.forEach(function(e3) {
      t2 = t2 + encodeURIComponent(e3.name) + "=" + encodeURIComponent(e3.value) + "; ";
    }), t2 = t2.trim(), m.headers || (m.headers = {}), m.headers.cookie = t2;
  }
  if (e2.basicAuth) {
    const { username: t2, password: a2 } = e2.basicAuth;
    m.headers = m.headers || {}, m.headers.Authorization = `'Basic ' + Buffer.from('${t2}:${a2}').toString('base64')`, u = true;
  }
  h && l.withImports && c.unshift("import fs from 'fs';");
  const b = m.headers && m.headers.Accept && normalizeMimeType(m.headers.Accept) === MediaTypes.JSON || normalizeMimeType(null === (o = e2.postData) || void 0 === o ? void 0 : o.mimeType) === MediaTypes.JSON;
  printUrlVariablesDeclarations(e2, c, p);
  const v = buildUrlExpression(e2, c);
  return c.push(p, `const ${c.var("resp")} = await fetch(`).push(p + 1, "`" + v + (f ? "?${" + c.var("query") + "}" : "") + "`,").push(p + 1, addIndentation((0, import_stringify_object2.default)(m, { indent: l.indent, inlineCharacterLimit: 25, transform: getPreserveTransformer({ body: true, authorizationHeader: u }) }), { level: p + 1, indent: l.indent, firstLine: false })).push(p, ");").blank(), (null === (d = e2.allResponseCodes) || void 0 === d ? void 0 : d.includes("204")) ? (c.push(p, "if (resp.status === 204) {").push(p + 1, "console.log('success');").push(p, "} else {"), c.push(p + 1, `const ${c.var("data")} = await ${c.var("resp")}.${b ? "json()" : "text()"};`).push(p + 1, `console.log(${c.var("data")});`).push(p, "}")) : c.push(p, `const ${c.var("data")} = await ${c.var("resp")}.${b ? "json()" : "text()"};`).push(p, `console.log(${c.var("data")});`), l.showBoilerplate && c.push("}").blank().push("run();"), c.join().replace(/"fs\.createReadStream\(\\"(.+)\\"\)"/, 'fs.createReadStream("$1")');
};
function addComments2(e2) {
  e2.push("/**"), e2.push(" * Requires Node.js >= 14"), e2.push(" *"), e2.push(' * Requires module "node-fetch" >= 2.6.1'), e2.push(" * See here for installation details:"), e2.push(" *   https://www.npmjs.com/package/node-fetch"), e2.push(" */"), e2.blank();
}
var fetch_default2 = handler2;

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/targets/node/index.js
var node_default = { info: { key: "node", title: "Node.js", extname: ".js", default: "fetch" }, fetch: fetch_default2 };

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/targets/python/requests.js
import { format as format3 } from "util";
var handler3 = function(e2, t, { target: a, client: s }) {
  var o, r, n2, i2;
  const l = Object.assign({ indent: "  " }, t), { level: p = 0 } = l, u = new CodeBuilder({ indentation: l.indent, variablesPrefix: l.variablesPrefix, lang: Lang.PYTHON });
  l.withComments && addComments3(u), l.withImports && u.push("import requests").blank();
  let d, h, c, m = false, b = e2.allHeaders;
  if (null === (o = e2.securityOAuth2ExtraCalls) || void 0 === o ? void 0 : o.length) {
    const t2 = new HTTPSnippet(null === (r = e2.securityOAuth2ExtraCalls) || void 0 === r ? void 0 : r[0]).convert(a, s, Object.assign(Object.assign({}, l), { withImports: false, withComments: false, variablesPrefix: "oauth2_" }));
    u.push(t2), u.blank(), b = b || {}, b.Authorization = '"Bearer " + oauth2_data["access_token"]', m = true;
  }
  if (printUrlVariablesDeclarations(e2, u), u.push(`${u.var("url").toLowerCase()} = %s`, buildUrlExpression(e2, u)).blank(), Object.keys(e2.queryObj || {}).length) {
    d = "query = " + jsObjectToPythonDict(e2.queryObj, l.indent), u.push(d).blank();
  }
  const f = normalizeMimeType(null === (n2 = e2.postData) || void 0 === n2 ? void 0 : n2.mimeType);
  if (e2.postData)
    switch (f) {
      case MediaTypes.URL_ENCODED:
        h = e2.postData.paramsObj ? `${addIndentation(jsObjectToPythonDict(e2.postData.paramsObj, l.indent), { level: 0, firstLine: false })}` : e2.postData.text;
        break;
      case MediaTypes.JSON:
        e2.postData.jsonObj && (h = addIndentation(jsObjectToPythonDict(e2.postData.jsonObj, l.indent), { level: 0, firstLine: false }));
        break;
      case MediaTypes.MULTIPART:
        const t2 = [];
        if (e2.postData.params)
          for (const a2 of e2.postData.params)
            t2.push(`"${a2.name}": "${a2.value}"`);
        if (t2.length) {
          c = `data = {
${t2.map((e3) => `  ${e3}`).join(",\n")}
}`;
        }
        c && u.push(c).blank();
        break;
      default:
        e2.postData.text && (h = `'''
${addIndentation(e2.postData.text.trim(), { level: 1, indent: l.indent, firstLine: true })}
'''`);
    }
  let v;
  h && u.push(`${u.var("payload").toLowerCase()} = %s`, h).blank();
  const $ = Object.keys(b).length, C = (e3, t2) => "Authorization" === e3 && m ? t2 : `"${t2}"`;
  if (1 === $)
    for (v in b)
      u.push(`${u.var("headers").toLowerCase()} = {"${v}": ${C(v, b[v])}}`).blank();
  else if ($ > 1) {
    let e3 = 1;
    for (v in u.push(`${u.var("headers").toLowerCase()} = {`), b)
      e3++ !== $ ? u.push(1, `"${v}": ${C(v, b[v])},`) : u.push(1, `"${v}": ${C(v, b[v])}`);
    u.push(0, "}").blank();
  }
  const L = e2.method.toLowerCase();
  let j = format3(`${u.var("response").toLowerCase()} = requests.${L}(${u.var("url").toLowerCase()}`);
  if (f === MediaTypes.MULTIPART && c && (j += ", data=data"), h) {
    j += `, ${f === MediaTypes.JSON ? "json" : "data"}=${u.var("payload").toLowerCase()}`;
  }
  return $ > 0 && (j += `, headers=${u.var("headers").toLowerCase()}`), d && (j += `, params=${u.var("query").toLowerCase()}`), e2.basicAuth && (j += `, auth=('${e2.basicAuth.username}','${e2.basicAuth.password}')`), j += ")", u.push(j).blank(), (null === (i2 = e2.allResponseCodes) || void 0 === i2 ? void 0 : i2.includes("204")) ? u.push("if response.status_code == 204:").push(p + 1, 'print("success")').push("else:").push(p + 1, `${u.var("data").toLowerCase()} = ${u.var("response").toLowerCase()}.json()`).push(p + 1, `print(${u.var("data").toLowerCase()})`) : u.push(`${u.var("data").toLowerCase()} = ${u.var("response").toLowerCase()}.json()`).push(`print(${u.var("data").toLowerCase()})`), u.join();
};
var requests_default = handler3;
function addComments3(e2) {
  e2.push('"""'), e2.push("Requires python >= 3"), e2.blank(), e2.push('Requires module "requests" >= 2.25.1'), e2.push("See here for installation details:"), e2.push("  https://requests.readthedocs.io/"), e2.push('"""'), e2.blank();
}
function jsObjectToPythonDict(e2, t) {
  return JSON.stringify(e2, function(e3, t2) {
    return e3 && "boolean" == typeof t2 ? t2 ? "__REDOCLY_<True>__" : "__REDOCLY_<False>__" : null === t2 ? "__REDOCLY_<None>__" : t2;
  }, t).replace(/"__REDOCLY_<(\w+)>__"/g, "$1");
}

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/targets/python/index.js
var python_default = { info: { key: "python", title: "Python", extname: ".py", default: "python3" }, requests: requests_default };

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/targets/shell/curl.js
import { format as format5 } from "util";

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/helpers/shell.js
import { format as format4 } from "util";
var shell_default = { quote: function(e2) {
  return /^[a-z0-9-_/.@%^=:]+$/i.test(e2) ? e2 : format4("'%s'", e2.replace(/'/g, "'\\''"));
}, escape: function(e2) {
  return e2.replace(/\r/g, "\\r").replace(/\n/g, "\\n");
} };

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/targets/shell/curl.js
var handler4 = function(e2, t, { target: s, client: a }) {
  var r, o;
  const n2 = Object.assign({ indent: "  ", short: false, binary: false }, t), i2 = new CodeBuilder({ indentation: n2.indent, lineJoin: n2.indent ? " \\\n" + n2.indent : " " }), l = (null === (r = e2.securityOAuth2ExtraCalls) || void 0 === r ? void 0 : r.length) ? new HTTPSnippet(null === (o = e2.securityOAuth2ExtraCalls) || void 0 === o ? void 0 : o[0]).convert(s, a, Object.assign(Object.assign({}, n2), { withComments: false })) : "";
  i2.push(0, "curl -i %s %s", n2.short ? "-X" : "--request", e2.method.toUpperCase()), e2.basicAuth && i2.push(format5("-u %s:%s", e2.basicAuth.username, e2.basicAuth.password));
  const p = buildUrlExpression(e2, i2);
  if (i2.push(format5("%s%s", n2.short ? "" : "--url ", shell_default.quote(p))), "HTTP/1.0" === e2.httpVersion && i2.push(n2.short ? "-0" : "--http1.0"), Object.keys(e2.headersObj).sort().forEach(function(t2) {
    const s2 = format5("%s: %s", t2, e2.headersObj[t2]);
    i2.push("%s %s", n2.short ? "-H" : "--header", shell_default.quote(s2));
  }), e2.allHeaders.cookie && i2.push("%s %s", n2.short ? "-b" : "--cookie", shell_default.quote(e2.allHeaders.cookie)), e2.postData)
    switch (normalizeMimeType(e2.postData.mimeType)) {
      case MediaTypes.MULTIPART:
        e2.postData.params.map(function(e3) {
          let t2;
          t2 = e3.fileName ? format5("%s=@%s", e3.name, e3.fileName) : format5("%s=%s", e3.name, e3.value), i2.push("%s %s", n2.short ? "-F" : "--form", shell_default.quote(t2));
        });
        break;
      case MediaTypes.URL_ENCODED:
        e2.postData.params ? e2.postData.params.map(function(e3) {
          i2.push("%s %s", n2.binary ? "--data-binary" : n2.short ? "-d" : "--data", shell_default.quote(format5("%s=%s", e3.name, e3.value)));
        }) : i2.push("%s %s", n2.binary ? "--data-binary" : n2.short ? "-d" : "--data", shell_default.quote(e2.postData.text));
        break;
      case MediaTypes.JSON:
        e2.postData.jsonObj && i2.push("%s %s", n2.binary ? "--data-binary" : n2.short ? "-d" : "--data", addIndentation(shell_default.quote(JSON.stringify(e2.postData.jsonObj, null, n2.indent)), { level: 1, indent: n2.indent, firstLine: false }));
        break;
      default:
        e2.postData.text && i2.push("%s %s", n2.binary ? "--data-binary" : n2.short ? "-d" : "--data", addIndentation(shell_default.quote(e2.postData.text), { level: 1, indent: n2.indent, firstLine: false }));
    }
  return (n2.withComments ? "# Requires curl >= 7.2\n\n" : "") + (l ? l + "\n\n" + i2.join() : i2.join());
};
var curl_default = handler4;

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/targets/shell/index.js
var shell_default2 = { info: { key: "shell", title: "Shell", extname: ".sh", default: "curl" }, curl: curl_default };

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/targets/java8/apachehttp.js
var handler5 = function(t, e2, { target: s, client: a }) {
  var i2, r;
  const p = Object.assign({ indent: "  ", withWrapper: true }, e2), n2 = new CodeBuilder({ indentation: p.indent, variablesPrefix: p.variablesPrefix, capitalize: true, lang: Lang.JAVA8 }), o = formatHttpMethod(t.method);
  if (p.withComments && addComments4(n2), p.withImports && addImports(n2, t), p.withWrapper && (n2.push("public class App {"), n2.push(1, "public static void main(String[] args ) throws java.io.IOException {"), n2.push(2, "HttpClient httpClient = HttpClientBuilder.create().build();"), n2.blank()), null === (i2 = t.securityOAuth2ExtraCalls) || void 0 === i2 ? void 0 : i2.length) {
    const e3 = new HTTPSnippet(null === (r = t.securityOAuth2ExtraCalls) || void 0 === r ? void 0 : r[0]).convert(s, a, Object.assign(Object.assign({}, p), { withImports: false, withWrapper: false, withComments: false, variablesPrefix: "oauth2" }));
    n2.push(e3), n2.push(2, "JSONObject %s = new JSONObject(EntityUtils.toString(httpClient.execute(%s).getEntity()));", "oauth2Response", "oauth2Request"), n2.push(2, 'String accessToken = %s.getString("access_token");', "oauth2Response"), n2.blank();
  }
  printUrlVariablesDeclarations(t, n2, 2);
  const u = buildUrlExpression(t, n2);
  n2.push(2, `%s ${n2.var("request")} = new %s(%s);`, o, o, u);
  const h = Object.keys(t.allHeaders);
  if (!h.length || t.postData && t.postData.mimeType == MediaTypes.MULTIPART || h.forEach((e3) => {
    var s2;
    n2.push(2, '%s.setHeader("%s", %s);', n2.var("request"), e3, (null === (s2 = t.securityOAuth2ExtraCalls) || void 0 === s2 ? void 0 : s2.length) ? '"Bearer " + accessToken' : `"${t.allHeaders[e3]}"`);
  }), t.basicAuth) {
    const { username: e3, password: s2 } = t.basicAuth;
    n2.push(2, `String encodedString = Base64.getEncoder().encodeToString("${e3}:${s2}".getBytes());`), n2.push(2, '%s.setHeader("%s", "%s"+encodedString);', n2.var("request"), "Authorization", "Basic ");
  }
  if (t.postData)
    switch (normalizeMimeType(t.postData.mimeType)) {
      case MediaTypes.URL_ENCODED:
        t.postData.params && (n2.blank(), n2.push(2, "List<NameValuePair> params = new ArrayList<NameValuePair>();"), t.postData.params.forEach((t2) => {
          n2.push(2, 'params.add(new BasicNameValuePair("%s", "%s"));', t2.name, t2.value);
        }), n2.push(2, "%s.setEntity(new UrlEncodedFormEntity(params));", n2.var("request")), n2.blank());
        break;
      case MediaTypes.MULTIPART:
        t.postData.params && (n2.push(2, "MultipartEntity reqEntity = new MultipartEntity();"), t.postData.params.forEach((t2) => {
          n2.push(2, 'reqEntity.addPart("%s", %s);', t2.name, isString2(t2.value) ? `new StringBody("${t2.value}")` : t2.value);
        }), n2.push(2, "%s.setEntity(reqEntity);", n2.var("request")));
        break;
      case MediaTypes.JSON:
        if (t.postData.jsonObj) {
          n2.push(2, "JSONObject payload = new JSONObject();");
          for (const [e3, s2] of Object.entries(t.postData.jsonObj))
            Array.isArray(s2) ? (n2.push(2, 'payload.put("%s", new JSONArray()', e3), s2.forEach((t2) => {
              isObject2(t2) ? (n2.push(3, ".put(new JSONObject()"), l(t2, 4), n2.push(3, ")")) : n2.push(3, ".put(%s)", formatValue(t2));
            }), n2.push(2, ");")) : isObject2(s2) ? (n2.push(2, 'payload.put("%s", new JSONObject()%s', e3, isEmptyObject(s2) ? ");" : ""), l(s2, 3), isEmptyObject(s2) || n2.push(2, ");")) : n2.push(2, 'payload.put("%s", %s);', e3, formatValue(s2));
          n2.push(2, "%s.setEntity(new StringEntity(payload.toString()));", n2.var("request"));
        }
        break;
      case MediaTypes.XML:
        t.postData.text && (n2.push(2, 'String payload = String.join("\\n"'), t.postData.text.trim().split("\n").forEach((t2) => {
          const e3 = t2.replace(/"/g, '\\"');
          n2.push(3, `"${e3}", `);
        }), n2.push(2, ");"), n2.push(2, "%s.setEntity(new StringEntity(payload));", n2.var("request")));
    }
  return p.withWrapper && (n2.push(2, `String ${n2.var("response")} = EntityUtils.toString(httpClient.execute(request).getEntity());`), n2.blank(), n2.push(2, "System.out.println(response);"), n2.push(1, "}"), n2.push("}")), n2.join();
  function l(t2, e3) {
    for (const [s2, a2] of Object.entries(t2))
      isObject2(a2) ? (n2.push(e3, '.put("%s", new JSONObject()', s2), l(a2, e3 + 1), n2.push(e3, ")")) : n2.push(e3, '.put("%s", %s)', s2, formatValue(a2));
  }
};
var apachehttp_default = handler5;
function addComments4(t) {
  t.push("/**"), t.push(" * Requires JDK >= 8"), t.push(" *"), t.push(" * Requires Apache HttpComponents Client >= 4.3.5"), t.push(" * See here for installation details:"), t.push(" *   https://search.maven.org/artifact/org.apache.httpcomponents/httpcomponents-client"), t.push(" *"), t.push(' * Requires package "junit4"'), t.push(" * See here for installation details:"), t.push(" *   https://junit.org/junit4"), t.push(" *"), t.push(' * Requires package "org.json" >= 20180130'), t.push(" * See here for installation details:"), t.push(" *   https://search.maven.org/artifact/org.json/json"), t.push(" */"), t.blank();
}
function addImports(t, e2) {
  var s, a, i2;
  t.push("import org.apache.http.util.EntityUtils;"), t.push("import org.apache.http.NameValuePair;"), t.push("import org.apache.http.client.HttpClient;"), t.push("import org.apache.http.client.entity.UrlEncodedFormEntity;"), e2.method && addHttpMethodImport(t, e2.method), (null === (s = e2.securityOAuth2ExtraCalls) || void 0 === s ? void 0 : s.length) && (null === (a = e2.securityOAuth2ExtraCalls) || void 0 === a ? void 0 : a[0].method.toLowerCase()) !== e2.method.toLowerCase() && addHttpMethodImport(t, null === (i2 = e2.securityOAuth2ExtraCalls) || void 0 === i2 ? void 0 : i2[0].method), t.push("import org.apache.http.impl.client.HttpClientBuilder;"), t.push("import org.apache.http.message.BasicNameValuePair;"), t.push("import org.apache.http.entity.StringEntity;"), t.push("import org.json.JSONObject;"), t.push("import org.json.JSONArray;"), t.push("import java.util.ArrayList;"), t.push("import java.util.List;"), t.push("import org.apache.http.entity.mime.MultipartEntity;"), t.push("import org.apache.http.entity.mime.content.StringBody;"), e2.basicAuth && t.push("import java.util.Base64;"), t.blank();
}
function addHttpMethodImport(t, e2) {
  const s = formatHttpMethod(e2);
  t.push(`import org.apache.http.client.methods.${s};`);
}
function formatHttpMethod(t) {
  return "Http" + capitalizeFirst(t.toLowerCase());
}
function isString2(t) {
  return "[object String]" === Object.prototype.toString.call(t);
}
function isObject2(t) {
  const e2 = typeof t;
  return "function" === e2 || "object" === e2 && !!t;
}
function formatValue(t) {
  return isString2(t) ? JSON.stringify(t) : null == t ? "JSONObject.NULL" : t;
}

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/targets/java8/index.js
var java8_default = { info: { key: "java8", title: "Java8+Apache", extname: ".java", default: "apachehttp" }, apachehttp: apachehttp_default };

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/targets/java/httpclient.js
var hasQueryParams = (t) => !(!t.uriObj.query || !Object.keys(t.uriObj.query).length);
var getBody = (t) => t.postData && t.postData.mimeType === MediaTypes.URL_ENCODED ? "HttpRequest.BodyPublishers.ofString(form)" : t.postData ? "HttpRequest.BodyPublishers.ofString(payload)" : ["POST", "PUT", "PATCH"].includes(t.method.toUpperCase()) ? 'HttpRequest.BodyPublishers.ofString("some body text")' : "";
var handler6 = function(t, e2, { target: a, client: s }) {
  var r, o, p;
  const i2 = Object.assign({ indent: "  ", withWrapper: true }, e2), n2 = new CodeBuilder({ indentation: i2.indent, variablesPrefix: i2.variablesPrefix, capitalize: true, lang: Lang.JAVA });
  if (i2.withComments && addComments5(n2, t), i2.withImports && addImports2(n2, t), i2.withWrapper && (n2.push("public class App {"), n2.push(1, "public static void main(String[] args) throws Exception {"), n2.push(2, "var httpClient = HttpClient.newBuilder().build();"), n2.blank()), null === (r = t.securityOAuth2ExtraCalls) || void 0 === r ? void 0 : r.length) {
    const e3 = new HTTPSnippet(null === (o = t.securityOAuth2ExtraCalls) || void 0 === o ? void 0 : o[0]).convert(a, s, Object.assign(Object.assign({}, i2), { withImports: false, withWrapper: false, withComments: false, variablesPrefix: "oauth2" }));
    n2.push(e3), n2.blank(), n2.push(2, "var oauth2Response = httpClient.send(oauth2Request, HttpResponse.BodyHandlers.ofString());"), n2.push(2, 'var accessToken = new JSONObject(oauth2Response.body()).getString("access_token");'), n2.blank();
  }
  if (t.postData)
    switch (normalizeMimeType(t.postData.mimeType)) {
      case MediaTypes.URL_ENCODED:
        t.postData.params && (n2.push(2, "HashMap<String, String> params = new HashMap<>();"), t.postData.params.forEach((t2) => {
          n2.push(2, 'params.put("%s", "%s");', t2.name, t2.value);
        }), n2.blank(), n2.push(2, "var form = params.keySet().stream()"), n2.push(3, '.map(key -> key + "=" + URLEncoder.encode(params.get(key), StandardCharsets.UTF_8))'), n2.push(3, '.collect(Collectors.joining("&"));'), n2.blank());
        break;
      case MediaTypes.JSON:
        t.postData.jsonObj && (n2.push(2, `var payload = String.join("\\n"
      ${addIndentation(JSON.stringify(t.postData.jsonObj, null, 1).replace(/"/g, '\\"').replace(/^/gm, ', "').replace(/$/gm, '"'), { level: 3, indent: i2.indent, firstLine: false })}`), n2.push(2, ");"), n2.blank());
        break;
      case MediaTypes.XML:
        t.postData.text && (n2.push(2, 'var payload = String.join("\\n"'), t.postData.text.trim().split("\n").forEach((t2) => {
          const e3 = t2.replace(/"/g, '\\"');
          n2.push(3, `"${e3}", `);
        }), n2.push(2, ");"), n2.blank());
        break;
      case MediaTypes.MULTIPART:
        t.postData.params && (n2.push(2, "var multipartBody = MultipartBodyPublisher.newBuilder();"), t.postData.params && t.postData.params.forEach((t2) => {
          n2.push(2, 'multipartBody.append("%s", "%s");', t2.name, t2.value);
        }), n2.push(2, "var body = multipartBody.build();"), n2.blank());
    }
  if (hasQueryParams(t)) {
    n2.push(2, "HashMap<String, String> params = new HashMap<>();");
    for (const [e3, a2] of Object.entries(t.uriObj.query))
      n2.push(2, 'params.put("%s", "%s");', e3, a2);
    n2.blank(), n2.push(2, "var query = params.keySet().stream()"), n2.push(3, '.map(key -> key + "=" + URLEncoder.encode(params.get(key), StandardCharsets.UTF_8))'), n2.push(3, '.collect(Collectors.joining("&"));'), n2.blank();
  }
  n2.push(2, `var ${n2.var("host")} = "%s";`, t.uriObj.protocol + "//" + t.uriObj.host), printUrlVariablesDeclarations(t, n2, 2);
  const l = Object.assign(Object.assign({}, t), { pathname: t.uriObj.pathname });
  n2.push(2, `var ${n2.var("pathname")} = %s;`, buildUrlExpression(l, n2)), n2.push(2, `var ${n2.var("request")} = HttpRequest.newBuilder()`), "PATCH" === t.method.toUpperCase() ? n2.push(3, '.method("PATCH", %s)', getBody(t)) : n2.push(3, ".%s(%s)", t.method.toUpperCase(), getBody(t)), n2.push(3, `.uri(URI.create(${n2.var("host")} + ${n2.var("pathname")} %s))`, hasQueryParams(t) ? "+ '?' + query" : ""), (null === (p = t.securityOAuth2ExtraCalls) || void 0 === p ? void 0 : p.length) && (t.allHeaders.Authorization = '"Bearer " + accessToken');
  const u = Object.keys(t.allHeaders);
  if (u.length && u.forEach((e3) => {
    var a2;
    n2.push(3, '.header("%s", %s)', e3, "Authorization" === e3 && (null === (a2 = t.securityOAuth2ExtraCalls) || void 0 === a2 ? void 0 : a2.length) ? t.allHeaders[e3] : `"${t.allHeaders[e3]}"`);
  }), t.basicAuth) {
    const { username: e3, password: a2 } = t.basicAuth;
    n2.push(3, `.header("Authorization", "Basic " + Base64.getEncoder().encodeToString(("${e3}:${a2}").getBytes()))`);
  }
  return n2.push(3, ".build();"), i2.withWrapper && (n2.blank(), n2.push(2, "var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());"), n2.blank(), n2.push(2, "System.out.println(response.body());"), n2.push(1, "}"), n2.push("}")), n2.join();
};
var httpclient_default = handler6;
function addComments5(t, e2) {
  var a;
  t.push("/**"), t.push(" * Requires JDK >= 11"), (null === (a = e2.securityOAuth2ExtraCalls) || void 0 === a ? void 0 : a.length) && (t.push(" *"), t.push(' * Requires package "org.json" >= 20201115'), t.push(" * See here for installation details:"), t.push(" *  https://search.maven.org/artifact/org.json/json")), t.push(" */"), t.blank();
}
function addImports2(t, e2) {
  var a, s, r, o;
  t.push("import java.net.*;"), t.push("import java.net.http.*;"), t.push("import java.util.*;"), (normalizeMimeType(null === (a = e2.postData) || void 0 === a ? void 0 : a.mimeType) === MediaTypes.URL_ENCODED && (null === (s = e2.postData) || void 0 === s ? void 0 : s.params) || (null === (r = e2.securityOAuth2ExtraCalls) || void 0 === r ? void 0 : r.length) || hasQueryParams(e2)) && (t.push("import java.nio.charset.StandardCharsets;"), t.push("import java.util.stream.Collectors;")), (null === (o = e2.securityOAuth2ExtraCalls) || void 0 === o ? void 0 : o.length) && t.push("import org.json.JSONObject;"), t.blank();
}

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/targets/java/index.js
var java_default = { info: { key: "java", title: "Java", extname: ".java", default: "httpclient" }, httpclient: httpclient_default };

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/targets/csharp/httpclient.js
init_src();
var handler7 = function(t, e2, { target: s, client: a }) {
  var n2, i2, r, o;
  const p = Object.assign({ indent: "  ", withWrapper: true }, e2), u = new CodeBuilder({ indentation: p.indent, variablesPrefix: p.variablesPrefix, capitalize: true, lang: Lang.CSHARP }), l = formatHttpMethod2(t.method);
  if (p.withComments && addComments6(u), p.withWrapper && (u.push("using System;"), u.push("using System.Net.Http;"), u.push("using System.Threading.Tasks;"), (c(MediaTypes.JSON) || c(MediaTypes.XML) || t.basicAuth) && u.push("using System.Text;"), (c(MediaTypes.URL_ENCODED) || (null === (n2 = t.securityOAuth2ExtraCalls) || void 0 === n2 ? void 0 : n2.length)) && u.push("using System.Collections.Generic;"), (c(MediaTypes.JSON) || (null === (i2 = t.securityOAuth2ExtraCalls) || void 0 === i2 ? void 0 : i2.length)) && u.push("using System.Text.Json;"), m() && u.push("using System.IO;"), (m() || t.basicAuth) && u.push("using System.Net.Http.Headers;"), u.blank(), u.push("public class Program"), u.push("{"), u.push(1, "public static async Task Main()"), u.push(1, "{")), null === (r = t.securityOAuth2ExtraCalls) || void 0 === r ? void 0 : r.length) {
    const e3 = new HTTPSnippet(null === (o = t.securityOAuth2ExtraCalls) || void 0 === o ? void 0 : o[0]).convert(s, a, Object.assign(Object.assign({}, p), { withImports: false, withWrapper: false, withComments: false, variablesPrefix: "oauth2" }));
    u.push(e3), u.push(2, "var oauth2Response = await oauth2Request.Content.ReadAsStringAsync();"), u.push(2, "JObject inputJObject = JObject.Parse(oauth2Response);"), u.push(2, 'var accessToken = inputJObject["access_token"].ToString();'), u.blank();
  }
  const h = Object.keys(t.allHeaders).filter((t2) => {
    switch (t2.toLowerCase()) {
      case "content-type":
      case "content-length":
      case "accept-encoding":
        return false;
      default:
        return true;
    }
  });
  if (h.length ? (u.push(2, "System.Net.Http.HttpClient client = new()"), u.push(2, "{"), u.push(3, "DefaultRequestHeaders ="), u.push(3, "{"), h.forEach((e3) => {
    var s2;
    u.push(4, '{"%s", %s},', e3, (null === (s2 = t.securityOAuth2ExtraCalls) || void 0 === s2 ? void 0 : s2.length) ? '"Bearer " + accessToken' : `"${t.allHeaders[e3]}"`);
  }), u.push(3, "}"), u.push(2, "};")) : u.push(2, "System.Net.Http.HttpClient client = new();"), u.blank(), t.basicAuth) {
    const { username: e3, password: s2 } = t.basicAuth;
    u.push(2, `string base64String = Convert.ToBase64String(Encoding.ASCII.GetBytes("${e3}:${s2}"));`), u.push(2, 'client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(@"Basic", base64String);'), u.blank();
  }
  if (t.postData)
    switch (normalizeMimeType(t.postData.mimeType)) {
      case MediaTypes.URL_ENCODED:
        t.postData.params && (u.blank(), u.push(2, "List<KeyValuePair<string, string>> postData = new List<KeyValuePair<string, string>>();"), t.postData.params.forEach((t2) => {
          u.push(2, 'postData.Add(new KeyValuePair<string, string>("%s", "%s"));', t2.name, t2.value);
        }), u.blank());
        break;
      case MediaTypes.MULTIPART:
        t.postData.params && (u.blank(), u.push(2, "MultipartFormDataContent postData = new MultipartFormDataContent();"), t.postData.params.forEach((t2) => {
          u.push(2, 'postData.Add(new StringContent("%s"), "%s");', t2.value, t2.name);
        }));
        break;
      case MediaTypes.JSON:
        t.postData.jsonObj && (u.push(2, "string json = JsonSerializer.Serialize(new"), u.push(2, "{"), y(t.postData.jsonObj, 3), u.push(2, "});"), u.blank(), u.push(2, 'using StringContent postData = new(json, Encoding.UTF8, "%s");', t.postData.mimeType));
        break;
      case MediaTypes.XML:
        t.postData.text && (t.postData.text.trim().split("\n").forEach((t2, e3) => {
          const s2 = (0 === e3 ? 'string xml = @"' : "") + t2.replace(/"/g, '""');
          u.push(0 === e3 ? 2 : 3, s2);
        }), u.push(2, '";'), u.push(2, 'using StringContent postData = new StringContent(xml, Encoding.UTF8, "%s");', t.postData.mimeType));
    }
  else
    m() && (u.push(2, "var ms = new MemoryStream();"), u.push(2, "var postData = new StreamContent(ms);"), u.push(2, 'postData.Headers.ContentType = new MediaTypeHeaderValue("application/octet-stream");'));
  return printUrlVariablesDeclarations(t, u, 3), u.push(2, "using HttpResponseMessage %s = await client.%sAsync(%s%s);", u.var("request"), l, buildUrlExpression(t, u), p.withImports ? isDataMethod(t.method) ? normalizeMimeType(t.postData && t.postData.mimeType) === MediaTypes.URL_ENCODED ? ", new FormUrlEncodedContent(postData)" : "delete" === t.method ? "" : t.postData && t.postData.params || m() ? ", postData" : ", null" : "" : ", new FormUrlEncodedContent(postData)"), p.withWrapper && (u.push(2, "string response = await request.Content.ReadAsStringAsync();"), u.blank(), u.push(2, "Console.WriteLine(response);"), u.push(1, "}"), u.push("}")), u.join();
  function c(e3) {
    return t.postData && normalizeMimeType(t.postData.mimeType) === e3;
  }
  function m() {
    return t.headersObj && t.headersObj["Content-Type"] === MediaTypes.OCTET_STREAM;
  }
  function d(t2, e3) {
    t2.forEach((s2, a2) => {
      const n3 = !isLastInArray(t2, a2);
      Array.isArray(s2) ? d(s2, e3 + 1) : isObject(s2) ? (u.push(e3 + 1, "new {"), y(s2, e3 + 2), u.push(e3 + 1, "}%s", n3 ? "," : "")) : u.push(e3 + 1, '"%s"%s', s2, n3 ? "," : "");
    }), u.push(e3, "},");
  }
  function y(t2, e3) {
    for (const [s2, a2] of Object.entries(t2)) {
      const n3 = !isLastProperty(t2, s2);
      if (Array.isArray(a2))
        u.push(e3, "%s = new[] {", s2), d(a2, e3);
      else if (isObject(a2)) {
        const t3 = isEmptyObject(a2);
        u.push(e3, "%s = new %s", s2, t3 ? "{}," : "{"), t3 || (y(a2, e3 + 1), u.push(e3, "}%s", n3 ? "," : ""));
      } else
        u.push(e3, '%s = "%s"%s', s2, a2, n3 ? "," : "");
    }
  }
};
var httpclient_default2 = handler7;
function addComments6(t) {
  t.push("// Requires >= .NET 5"), t.blank();
}
function formatHttpMethod2(t) {
  return capitalizeFirst(t.toLowerCase());
}
function isDataMethod(t) {
  return t && ["POST", "PUT", "DELETE", "PATCH"].includes(t.toUpperCase());
}

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/targets/csharp/index.js
var csharp_default = { info: { key: "csharp", title: "CSharp", extname: ".cs", default: "httpclient" }, httpclient: httpclient_default2 };

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/targets/csharpNewtonsoft/httpclient.js
var import_stringify_object3 = __toESM(require_stringify_object());
var handler8 = function(t, e2, { target: s, client: a }) {
  var n2, i2, r, o;
  const p = Object.assign({ indent: "  ", withWrapper: true }, e2), u = new CodeBuilder({ indentation: p.indent, variablesPrefix: p.variablesPrefix, capitalize: true, lang: Lang.CSHARPNEWTONSOFT }), l = formatHttpMethod3(t.method);
  if (p.withComments && addComments7(u), p.withWrapper && (u.push("using System;"), u.push("using System.Net.Http;"), u.push("using System.Threading.Tasks;"), (h(MediaTypes.JSON) || h(MediaTypes.XML) || t.basicAuth) && u.push("using System.Text;"), (h(MediaTypes.URL_ENCODED) || (null === (n2 = t.securityOAuth2ExtraCalls) || void 0 === n2 ? void 0 : n2.length)) && u.push("using System.Collections.Generic;"), (h(MediaTypes.JSON) || (null === (i2 = t.securityOAuth2ExtraCalls) || void 0 === i2 ? void 0 : i2.length)) && u.push("using Newtonsoft.Json.Linq;"), d() && u.push("using System.IO;"), (d() || t.basicAuth) && u.push("using System.Net.Http.Headers;"), u.blank(), u.push("public class Program"), u.push("{"), u.push(1, "private readonly IHttpClientFactory _httpClientFactory;"), u.push(1, "public static async Task Main(string[] args)"), u.push(1, "{"), u.push(2, "var client = _httpClientFactory.CreateClient();")), null === (r = t.securityOAuth2ExtraCalls) || void 0 === r ? void 0 : r.length) {
    const e3 = new HTTPSnippet(null === (o = t.securityOAuth2ExtraCalls) || void 0 === o ? void 0 : o[0]).convert(s, a, Object.assign(Object.assign({}, p), { withImports: false, withWrapper: false, withComments: false, variablesPrefix: "oauth2" }));
    u.push(e3), u.push(2, "var oauth2Response = await oauth2Request.Content.ReadAsStringAsync();"), u.push(2, "JObject inputJObject = JObject.Parse(oauth2Response);"), u.push(2, 'var accessToken = inputJObject["access_token"].ToString();'), u.blank();
  }
  const c = Object.keys(t.allHeaders).filter((t2) => {
    switch (t2.toLowerCase()) {
      case "content-type":
      case "content-length":
      case "accept-encoding":
        return false;
      default:
        return true;
    }
  });
  if (c.length && c.forEach((e3) => {
    var s2;
    u.push(2, 'client.DefaultRequestHeaders.Add("%s", %s);', e3, (null === (s2 = t.securityOAuth2ExtraCalls) || void 0 === s2 ? void 0 : s2.length) ? '"Bearer " + accessToken' : `"${t.allHeaders[e3]}"`);
  }), t.basicAuth) {
    const { username: e3, password: s2 } = t.basicAuth;
    u.push(2, `var base64String = Convert.ToBase64String(Encoding.ASCII.GetBytes("${e3}:${s2}"));`), u.push(2, 'client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(@"Basic", base64String);');
  }
  if (t.postData)
    switch (normalizeMimeType(t.postData.mimeType)) {
      case MediaTypes.URL_ENCODED:
        t.postData.params && (u.blank(), u.push(2, "List<KeyValuePair<string, string>> postData = new List<KeyValuePair<string, string>>();"), t.postData.params.forEach((t2) => {
          u.push(2, 'postData.Add(new KeyValuePair<string, string>("%s", "%s"));', t2.name, t2.value);
        }), u.blank());
        break;
      case MediaTypes.MULTIPART:
        t.postData.params && (u.blank(), u.push(2, "MultipartFormDataContent postData = new MultipartFormDataContent();"), t.postData.params.forEach((t2) => {
          u.push(2, 'postData.Add(new StringContent("%s"), "%s");', t2.value, t2.name);
        }));
        break;
      case MediaTypes.JSON:
        t.postData.jsonObj && (u.push(2, `JObject json = JObject.Parse(@"${addIndentation((0, import_stringify_object3.default)(t.postData.jsonObj, { indent: p.indent, inlineCharacterLimit: 25 }).replace(/"/g, '""'), { level: 3, firstLine: false })}");`), u.push(2, 'var postData = new StringContent(json.ToString(), Encoding.UTF8, "%s");', t.postData.mimeType));
        break;
      case MediaTypes.XML:
        t.postData.text && (t.postData.text.trim().split("\n").forEach((t2, e3) => {
          const s2 = (0 === e3 ? 'string xml = @"' : "") + t2.replace(/"/g, '""');
          u.push(0 === e3 ? 3 : 4, s2);
        }), u.push(2, '";'), u.push(2, 'var postData = new StringContent(xml, Encoding.UTF8, "%s");', t.postData.mimeType));
    }
  else
    d() && (u.push(2, "var ms = new MemoryStream();"), u.push(2, "var postData = new StreamContent(ms);"), u.push(2, 'postData.Headers.ContentType = new MediaTypeHeaderValue("application/octet-stream");'));
  return printUrlVariablesDeclarations(t, u, 3), u.push(2, "var %s = await client.%sAsync(%s%s);", u.var("request"), l, buildUrlExpression(t, u), p.withImports ? isDataMethod2(t.method) ? normalizeMimeType(t.postData && t.postData.mimeType) === MediaTypes.URL_ENCODED ? ", new FormUrlEncodedContent(postData)" : "delete" === t.method ? "" : t.postData && t.postData.params || d() ? ", postData" : ", null" : "" : ", new FormUrlEncodedContent(postData)"), p.withWrapper && (u.push(2, "var response = await request.Content.ReadAsStringAsync();"), u.blank(), u.push(2, "Console.WriteLine(response);"), u.push(1, "}"), u.push("}")), u.join();
  function h(e3) {
    return t.postData && normalizeMimeType(t.postData.mimeType) === e3;
  }
  function d() {
    return t.headersObj && t.headersObj["Content-Type"] === MediaTypes.OCTET_STREAM;
  }
};
var httpclient_default3 = handler8;
function addComments7(t) {
  t.push("/*"), t.push(" * Requires >= .NET 5"), t.push(" *"), t.push(' * Requires package "Newtonsoft.Json" >= 9.01'), t.push(" * See here for installation details:"), t.push(" *  https://www.newtonsoft.com/json"), t.push(" */"), t.blank();
}
function formatHttpMethod3(t) {
  return capitalizeFirst(t.toLowerCase());
}
function isDataMethod2(t) {
  return t && ["POST", "PUT", "DELETE", "PATCH"].includes(t.toUpperCase());
}

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/targets/csharpNewtonsoft/index.js
var csharpNewtonsoft_default = { info: { key: "csharpNewtonsoft", title: "CSharpNewtonsoft", extname: ".cs", default: "httpclient" }, httpclient: httpclient_default3 };

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/targets/go/native.js
function hasMimeType(e2 = {}, s) {
  return normalizeMimeType(e2.mimeType) === s;
}
var handler9 = function(e2, s, { target: a, client: r }) {
  var t, i2, p, o, n2, l;
  const u = Object.assign({ capitalize: true, showBoilerplate: true, checkErrors: true, printBody: true, timeout: -1, indent: "  " }, s), h = null === (t = e2.securityOAuth2ExtraCalls) || void 0 === t ? void 0 : t[0], d = u.checkErrors ? "err" : "_", c = e2.method.toUpperCase(), y = new CodeBuilder({ indentation: u.indent, variablesPrefix: u.variablesPrefix, capitalize: u.capitalize, lang: Lang.GO }), v = () => {
    u.checkErrors && y.push(1, "if err != nil {").push(2, "panic(err)").push(1, "}");
  };
  if (u.showBoilerplate && (y.push("package main").blank().push("import (").push(1, '"fmt"'), u.timeout > 0 && y.push(1, '"time"'), h && y.push(1, '"encoding/json"'), hasMimeType(e2.postData, MediaTypes.MULTIPART) && (y.push(1, '"mime/multipart"'), y.push(1, '"io"'), y.push(1, '"bytes"')), (hasMimeType(e2.postData, MediaTypes.URL_ENCODED) || hasMimeType(null === (p = null === (i2 = e2.securityOAuth2ExtraCalls) || void 0 === i2 ? void 0 : i2[0]) || void 0 === p ? void 0 : p.postData, MediaTypes.URL_ENCODED)) && (y.push(1, '"net/url"'), y.push(1, '"strconv"')), (hasMimeType(e2.postData, MediaTypes.JSON) || hasMimeType(null === (n2 = null === (o = e2.securityOAuth2ExtraCalls) || void 0 === o ? void 0 : o[0]) || void 0 === n2 ? void 0 : n2.postData, MediaTypes.JSON)) && y.push(1, '"bytes"'), (e2.postData && !hasMimeType(e2.postData, MediaTypes.JSON) || h) && y.push(1, '"strings"'), y.push(1, '"net/http"'), u.printBody && y.push(1, '"io/ioutil"'), y.push(")").blank().push("func main() {")), Object.keys(e2.allHeaders).length && Object.keys(e2.allHeaders).forEach((s2) => {
    e2.allHeaders[s2] = `"${e2.allHeaders[s2]}"`;
  }), h) {
    const s2 = "oAuth2", t2 = u.checkErrors ? `${d} := ` : "", i3 = u.capitalize ? "Res" : "res", p2 = new HTTPSnippet(h).convert(a, r, Object.assign(Object.assign({}, u), { printBody: false, variablesPrefix: s2, showBoilerplate: false }));
    y.push(p2).blank().push(1, `var ${s2}${i3}Body struct {`).push(2, "Access_token string").push(1, "}").push(1, `${t2}json.NewDecoder(${s2}${i3}.Body).Decode(&${s2}${i3}Body)`).blank(), v(), e2.allHeaders.Authorization = `"Bearer " + ${s2}${i3}Body.Access_token`;
  }
  if (printUrlVariablesDeclarations(e2, y, 1), u.timeout > 0 && (r = y.var("client"), y.push(1, "%s := http.Client{", r).push(2, "Timeout: time.Duration(%s * time.Second),", u.timeout).push(1, "}").blank()), y.push(1, `${y.var("reqUrl")} := ${buildUrlExpression(e2, y)}`), e2.postData) {
    let s2;
    switch (normalizeMimeType(e2.postData.mimeType)) {
      case MediaTypes.URL_ENCODED:
        y.push(1, "%s := url.Values{}", y.var("data")), e2.postData.params.forEach((e3) => {
          y.push(1, '%s.Set("%s", "%s")', y.var("data"), e3.name, e3.value);
        }), y.push(1, '%s, %s := http.NewRequest("%s", %s, strings.NewReader(%s.Encode()))', y.var("req"), d, c, y.var("reqUrl"), y.var("data")), e2.allHeaders["Content-Length"] = `strconv.Itoa(len(${y.var("data")}.Encode()))`;
        break;
      case MediaTypes.JSON:
        s2 = JSON.stringify(e2.postData.jsonObj, null, 2).split("\n").map((e3) => u.indent + e3).join("\n").trim(), y.push(1, `var ${y.var("data")} = []byte(\`${s2}\`)`), y.push(1, '%s, %s := http.NewRequest("%s", %s, bytes.NewBuffer(%s))', y.var("req"), d, c, y.var("reqUrl"), y.var("data"));
        break;
      case MediaTypes.MULTIPART:
        y.push(1, "%s := &bytes.Buffer{}", y.var("data")).push(1, "writer := multipart.NewWriter(%s)", y.var("data")), e2.postData.params.forEach((e3) => {
          if (!e3.fileName && !e3.contentType)
            return y.push(1, '%s, _ := writer.CreateFormField("%s")', y.var(`${e3.name}Fw`), e3.name).push(1, '_, %s = io.Copy(%s, strings.NewReader("%s"))', d, y.var(`${e3.name}Fw`), e3.value), void v();
          e3.fileName && (y.push(1, '%s, %s = writer.CreateFormFile("%s", "%s")', y.var(`${e3.name}Fw`), d, e3.name, e3.fileName), v());
        }), y.push(1, "writer.Close()").blank().push(1, "%s := bytes.NewReader(%s.Bytes())", y.var("payload"), y.var("data")).push(1, '%s, %s := http.NewRequest("%s", %s, %s)', y.var("req"), d, c, y.var("reqUrl"), y.var("payload")), e2.allHeaders["Content-Type"] = "writer.FormDataContentType()";
        break;
      default:
        e2.postData.text && y.push(1, "%s := strings.NewReader(%s)", y.var("payload"), JSON.stringify(null === (l = e2.postData) || void 0 === l ? void 0 : l.text)).push(1, '%s, %s := http.NewRequest("%s", %s, %s)', y.var("req"), d, c, y.var("reqUrl"), y.var("payload"));
    }
  } else
    y.push(1, '%s, %s := http.NewRequest("%s", %s, nil)', y.var("req"), d, c, y.var("reqUrl"));
  if (Object.getOwnPropertyNames(e2.queryObj).length) {
    y.blank().push(1, `${y.var("query")} := ${y.var("req")}.URL.Query()`);
    for (const s2 in e2.queryObj) {
      const a2 = e2.queryObj[s2], r2 = "string" == typeof a2 && /^\[.*\]$/.test(a2) ? `\`${a2}\`` : `"${a2}"`;
      y.push(1, `${y.var("query")}.Add("${s2}", ${r2})`);
    }
    y.push(1, `${y.var("req")}.URL.RawQuery = ${y.var("query")}.Encode()`).blank();
  }
  if (v(), e2.basicAuth) {
    const { username: s2, password: a2 } = e2.basicAuth;
    y.push(1, `%s.SetBasicAuth("${s2}", "${a2}")`, y.var("req"));
  }
  return Object.keys(e2.allHeaders).length && Object.keys(e2.allHeaders).forEach((s2) => {
    y.push(1, '%s.Header.Add("%s", %s)', y.var("req"), s2, e2.allHeaders[s2]);
  }), y.push(1, "%s, %s := %s.Do(%s)", y.var("res"), d, r, y.var("req")), v(), u.printBody && (y.push(1, "defer %s.Body.Close()", y.var("res")).push(1, "%s, %s := ioutil.ReadAll(%s.Body)", y.var("body"), d, y.var("res")), v()), y.blank().push(1, "fmt.Println(%s)", y.var("res")), u.printBody && y.push(1, "fmt.Println(string(%s))", y.var("body")), u.showBoilerplate && y.push("}"), y.join();
};
var native_default = handler9;

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/targets/go/index.js
var go_default = { info: { key: "go", title: "Go", extname: ".go", default: "native" }, native: native_default };

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/targets/php/curl.js
import { format as format6 } from "util";

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/targets/php/utils.js
var simpleTypes = ["number", "boolean", "function", "symbol"];
function isRegexp(e2) {
  return "[object RegExp]" === Object.prototype.toString.call(e2);
}
function isObject3(e2) {
  const n2 = typeof e2;
  return null !== e2 && ("object" === n2 || "function" === n2);
}
function objectToPhpArray(e2, n2, r = "") {
  const t = [];
  return function e3(n3, r2 = {}, i2 = "") {
    r2.indent = r2.indent || "	";
    const a = { newLine: "\n", newLineOrSpace: "\n", pad: i2, indent: i2 + r2.indent }, p = (e4) => {
      if (void 0 === r2.inlineCharacterLimit)
        return e4;
      const n4 = e4.replace(new RegExp(a.newLine, "g"), "").replace(new RegExp(a.newLineOrSpace, "g"), " ").replace(new RegExp(a.pad + "|" + a.indent, "g"), "");
      return n4.length <= r2.inlineCharacterLimit ? n4 : e4.replace(new RegExp(a.newLine + "|" + a.newLineOrSpace, "g"), "\n").replace(new RegExp(a.pad, "g"), i2).replace(new RegExp(a.indent, "g"), i2 + r2.indent);
    };
    if (-1 !== t.indexOf(n3))
      return '"Circular"';
    if (null === n3)
      return "NULL";
    if (void 0 === n3 || simpleTypes.includes(typeof n3) || isRegexp(n3))
      return String(n3);
    if (n3 instanceof Date)
      return `date('${n3.toISOString()}')`;
    if (Array.isArray(n3)) {
      if (0 === n3.length)
        return "array()";
      t.push(n3);
      const o = "array(" + a.newLine + n3.map((t2, p2) => {
        const o2 = n3.length - 1 === p2 ? a.newLine : "," + a.newLineOrSpace;
        let c = e3(t2, r2, i2 + r2.indent);
        return r2.transform && (c = r2.transform(n3, p2, c)), a.indent + c + o2;
      }).join("") + a.pad + ")";
      return t.pop(), p(o);
    }
    if (isObject3(n3)) {
      let o = Object.keys(n3);
      if (r2.filter && (o = o.filter((e4) => {
        var t2;
        return null === (t2 = r2.filter) || void 0 === t2 ? void 0 : t2.call(r2, n3, e4);
      })), 0 === o.length)
        return Array.isArray(n3) ? "array()" : "(object)[]";
      t.push(n3);
      const c = "array(" + a.newLine + o.map((t2, p2) => {
        const c2 = o.length - 1 === p2 ? a.newLine : "," + a.newLineOrSpace, l = "symbol" == typeof t2, s = !l && /^[a-z$_][a-z$_0-9]*$/i.test(t2), u = l || s ? t2 : e3(t2, r2);
        let g = e3(n3[t2], r2, i2 + r2.indent);
        return r2.transform && (g = r2.transform(n3, t2, g)), `${a.indent}"${String(u)}" => ${g}${c2}`;
      }).join("") + a.pad + ")";
      return t.pop(), p(c);
    }
    return n3 = String(n3).replace(/[\r\n]/g, (e4) => "\n" === e4 ? "\\n" : "\\r"), false === r2.singleQuotes ? `"${n3 = n3.replace(/"/g, '\\"')}"` : `"${n3 = n3.replace(/\\?'/g, "\\'")}"`;
  }(e2, n2, r);
}

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/targets/php/curl.js
function getVariableName(e2, a) {
  return a ? `$${a}${startCase(e2)}` : `$${e2}`;
}
var handler10 = function(e2, a, { target: r, client: t }) {
  var n2;
  const s = Object.assign({ showBoilerplate: true, checkErrors: false, printBody: true, indent: "  ", noTags: true, shortTags: false, maxRedirects: 10, namedErrors: false, closingTag: false }, a);
  let o, i2 = false;
  const l = new CodeBuilder({ indentation: s.indent, capitalize: true, lang: Lang.PHP }), p = null === (n2 = e2.securityOAuth2ExtraCalls) || void 0 === n2 ? void 0 : n2[0], u = getVariableName("curl", s.variablesPrefix), c = getVariableName("response", s.variablesPrefix), h = getVariableName("error", s.variablesPrefix);
  if (s.noTags || l.push(s.shortTags ? "<?" : "<?php").blank(), p) {
    const a2 = "oAuth2", n3 = new HTTPSnippet(p).convert(r, t, Object.assign(Object.assign({}, s), { showBoilerplate: false, variablesPrefix: a2 }));
    l.push(n3), l.blank(), e2.allHeaders.Authorization = `Bearer " . ${getVariableName("response", a2)}.access_token`;
  }
  const d = Object.keys(e2.headersObj).sort().map(function(a2) {
    return "Authorization" === a2 && p ? format6('"%s: %s', a2, e2.allHeaders.Authorization) : format6('"%s: %s"', a2, e2.headersObj[a2]);
  });
  if (e2.basicAuth) {
    const { username: a2, password: r2 } = e2.basicAuth;
    d.push(`"Authorization: Basic " . base64_encode("${a2}:${r2}")`);
  }
  s.showBoilerplate && l.push("/**").push(" * Requires libcurl").push(" */").blank(), printUrlVariablesDeclarations(e2, l);
  let m = "";
  if (Object.keys(e2.queryObj || {}).length) {
    const a2 = objectToPhpArray(e2.queryObj || {}, { indent: s.indent });
    m = "$query", l.push(`${m} = ${a2};`).blank();
  }
  if (l.push(`${u} = curl_init();`), l.blank(), e2.postData)
    switch (normalizeMimeType(e2.postData.mimeType)) {
      case MediaTypes.JSON: {
        const a2 = objectToPhpArray(e2.postData.jsonObj || {}, { indent: s.indent });
        i2 = true, o = "json_encode($payload)", l.push(`$payload = ${a2};`).blank();
        break;
      }
      case MediaTypes.MULTIPART: {
        const a2 = e2.postData.params.map(({ name: e3, value: a3 }) => `${s.indent}"${e3}" => "${a3}",
`).join("");
        i2 = true, o = "$payload", l.push(`$payload = array(
${a2});`).blank();
        break;
      }
      case MediaTypes.URL_ENCODED: {
        const a2 = e2.postData.params.map(({ name: e3, value: a3 }) => `${e3}=${a3}`).join("&");
        i2 = true, o = "$payload", l.push(`$payload = "${a2}";`).blank();
        break;
      }
      default:
        o = e2.postData.text;
    }
  let b = buildUrlExpression(e2, l);
  m && (b.endsWith('"') ? b = b.slice(0, -1) + `?" . http_build_query(${m})` : b += ` . "?" . http_build_query(${m})`);
  const $ = [{ escape: !i2, name: "CURLOPT_POSTFIELDS", value: o }, { escape: true, name: "CURLOPT_PORT", value: e2.uriObj.port }, { escape: false, name: "CURLOPT_URL", value: b }, { escape: false, name: "CURLOPT_RETURNTRANSFER", value: "true" }, { escape: true, name: "CURLOPT_CUSTOMREQUEST", value: e2.method.toUpperCase() }];
  l.push(`curl_setopt_array(${u}, [`);
  const T = new CodeBuilder({ indentation: s.indent, lineJoin: `
${s.indent}`, variablesPrefix: s.variablesPrefix, capitalize: true, lang: Lang.PHP });
  d.length && T.push("CURLOPT_HTTPHEADER => [").push(1, d.join(",\n" + s.indent + s.indent)).push("],"), $.forEach(function(e3) {
    [null, void 0].includes(e3.value) || T.push(format6("%s => %s,", e3.name, e3.escape ? JSON.stringify(e3.value) : e3.value));
  });
  const f = e2.cookies.map(function(e3) {
    return encodeURIComponent(e3.name) + "=" + encodeURIComponent(e3.value);
  });
  return f.length && T.push(format6('CURLOPT_COOKIE => "%s",', f.join("; "))), l.push(1, T.join()).push("]);").blank().push(`${c} = curl_exec(${u});`).push(`${h} = curl_error(${u});`).blank().push(`curl_close(${u});`).blank().push(`if (${h}) {`), s.namedErrors ? l.push(1, `echo array_flip(get_defined_constants(true)["curl"])[${h}];`) : l.push(1, `echo "cURL Error #:" . ${h};`), l.push("} else {").push(1, `echo ${c};`).push("}"), !s.noTags && s.closingTag && l.blank().push("?>"), l.join();
};
var curl_default2 = handler10;

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/targets/php/index.js
var php_default = { info: { key: "php", title: "PHP", extname: ".php", default: "curl" }, curl: curl_default2 };

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/targets/ruby/native.js
var import_stringify_object4 = __toESM(require_stringify_object());
function hasMimeType2(e2 = {}, t) {
  return normalizeMimeType(e2.mimeType) === t;
}
var handler11 = function(e2, t, { target: a, client: s }) {
  var r, i2, n2, o, p;
  const l = e2.method.toUpperCase(), u = null === (r = e2.securityOAuth2ExtraCalls) || void 0 === r ? void 0 : r[0], d = Object.assign({ capitalize: true, showBoilerplate: true, indent: "  " }, t), h = new CodeBuilder({ indentation: d.indent, variablesPrefix: d.variablesPrefix, capitalize: d.capitalize, lang: Lang.RUBY });
  d.showBoilerplate && (h.push("require 'uri'").push("require 'net/http'"), "https:" === e2.uriObj.protocol && h.push("require 'openssl'"), (hasMimeType2(e2.postData, MediaTypes.JSON) || u) && h.unshift("require 'json'"), h.blank()), Object.keys(e2.allHeaders).length && Object.keys(e2.allHeaders).forEach((t2) => {
    e2.allHeaders[t2] = `'${e2.allHeaders[t2]}'`;
  });
  const c = l.charAt(0) + l.substring(1).toLowerCase();
  if (["GET", "POST", "HEAD", "DELETE", "PATCH", "PUT", "OPTIONS", "COPY", "LOCK", "UNLOCK", "MOVE", "TRACE"].indexOf(l) < 0 && h.push("class Net::HTTP::%s < Net::HTTPRequest", c).push("  METHOD = '%s'", l.toUpperCase()).push("  REQUEST_HAS_BODY = '%s'", (null === (i2 = e2.postData) || void 0 === i2 ? void 0 : i2.text) ? "true" : "false").push("  RESPONSE_HAS_BODY = true").push("end").blank(), u) {
    const t2 = "oAuth2", r2 = new HTTPSnippet(u).convert(a, s, Object.assign(Object.assign({}, d), { variablesPrefix: t2, showBoilerplate: false })), i3 = `${t2}${d.capitalize ? "Response" : "response"}`;
    h.push(r2).push(`access_token = JSON.parse(${i3}.body)['access_token']`).blank(), e2.allHeaders.Authorization = '"Bearer " + access_token';
  }
  printUrlVariablesDeclarations(e2, h), h.push(`${h.var("url")} = URI(${buildUrlExpression(e2, h)})`);
  if (Object.getOwnPropertyNames(e2.queryObj).length && (h.push(`${h.var("params")} = ${(0, import_stringify_object4.default)(e2.queryObj, { indent: d.indent, inlineCharacterLimit: 25 })}`), h.push(`${h.var("url")}.query = URI.encode_www_form(${h.var("params")})`)), h.blank().push(`${h.var("http")} = Net::HTTP.new(${h.var("url")}.host, ${h.var("url")}.port)`), "https:" === e2.uriObj.protocol && h.push(`${h.var("http")}.use_ssl = true`), h.blank().push(`${h.var("request")} = Net::HTTP::%s.new(${h.var("url")})`, c), Object.keys(e2.allHeaders).length && Object.keys(e2.allHeaders).forEach((t2) => {
    e2.allHeaders[t2] !== `'${MediaTypes.MULTIPART}'` && h.push(`${h.var("request")}['%s'] = %s`, t2, e2.allHeaders[t2]);
  }), null == e2 ? void 0 : e2.postData) {
    const t2 = {};
    switch (normalizeMimeType(null === (n2 = null == e2 ? void 0 : e2.postData) || void 0 === n2 ? void 0 : n2.mimeType)) {
      case MediaTypes.URL_ENCODED:
        e2.postData.params.forEach((e3) => {
          t2[e3.name] = e3.value;
        }), h.push(`${h.var("request")}.body = URI.encode_www_form(${(0, import_stringify_object4.default)(t2, { indent: d.indent, inlineCharacterLimit: 25 })})`);
        break;
      case MediaTypes.JSON:
        h.push(`${h.var("request")}.body = ${(0, import_stringify_object4.default)(e2.postData.jsonObj, { indent: d.indent, inlineCharacterLimit: 25 }).replace(/null/g, "nil")}.to_json`);
        break;
      case MediaTypes.MULTIPART:
        e2.postData.params && (h.push(`${h.var("form_data")} = [`), e2.postData.params.forEach((e3) => {
          h.push(1, `['${e3.name}', '${e3.value}'],`);
        }), h.push("]")), h.push(`${h.var("request")}.set_form(${h.var("form_data")}, '${MediaTypes.MULTIPART}')`);
        break;
      default:
        (null === (o = e2.postData) || void 0 === o ? void 0 : o.text) && h.push(`${h.var("request")}.body = ${JSON.stringify(null === (p = e2.postData) || void 0 === p ? void 0 : p.text)}`);
    }
  }
  if (e2.basicAuth) {
    const { username: t2, password: a2 } = e2.basicAuth;
    h.push(`${h.var("request")}.basic_auth('${t2}', '${a2}')`);
  }
  return h.blank().push(`${h.var("response")} = ${h.var("http")}.request(${h.var("request")})`).push(`puts ${h.var("response")}.read_body`).blank(), h.join();
};
var native_default2 = handler11;

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/targets/ruby/index.js
var ruby_default = { info: { key: "ruby", title: "Ruby", extname: ".rb", default: "native" }, native: native_default2 };

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/targets/r/utils.js
function objectToRString(n2, t) {
  return n2 ? "string" == typeof n2 ? JSON.stringify(n2) : JSON.stringify(n2, null, 1).split("\n").map((n3, i2, o) => i2 === o.length - 1 ? n3 : ((null == t ? void 0 : t.indent) || " ") + n3).join("\n").trim() : "";
}
function postDataToRListBody(n2, t) {
  return "\n" + n2.map(({ name: n3, value: i2 }) => ((null == t ? void 0 : t.indent) || "") + `${n3} = "${i2}"`).join(",\n") + "\n";
}

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/targets/r/httr.js
var handler12 = function(e2, a, { target: t, client: s }) {
  var o, r, i2, n2;
  const l = Object.assign({ indent: "  ", showBoilerplate: true, printBody: true }, a), p = new CodeBuilder({ indentation: l.indent, variablesPrefix: l.variablesPrefix, lang: Lang.R }), d = e2.method.toUpperCase(), c = null === (o = e2.securityOAuth2ExtraCalls) || void 0 === o ? void 0 : o[0];
  if (l.showBoilerplate && p.push("library(httr)").blank(), c) {
    const a2 = "oauth2_", o2 = new HTTPSnippet(c).convert(t, s, Object.assign(Object.assign({}, l), { variablesPrefix: a2, showBoilerplate: false })), r2 = `${a2}data_req`;
    p.push(o2).push(`access_token = content(${r2}, "parsed")$access_token`).blank(), e2.allHeaders.Authorization = 'paste("Bearer", access_token)';
  }
  let u, b = "";
  if (null == e2 ? void 0 : e2.postData)
    switch (normalizeMimeType(null === (r = null == e2 ? void 0 : e2.postData) || void 0 === r ? void 0 : r.mimeType)) {
      case MediaTypes.URL_ENCODED: {
        u = "form", b = p.var("body");
        const a2 = postDataToRListBody(e2.postData.params, l);
        p.push(`${b} <- list(${a2})`).blank();
        break;
      }
      case MediaTypes.JSON: {
        u = "json", b = p.var("body");
        const a2 = objectToRString(e2.postData.jsonObj, l);
        p.push(`${b} = '${a2}'`).blank();
        break;
      }
      case MediaTypes.MULTIPART: {
        u = "multipart", b = p.var("body");
        const a2 = postDataToRListBody(e2.postData.params, l);
        p.push(`${b} <- list(${a2})`).blank();
        break;
      }
      default:
        (null === (i2 = e2.postData) || void 0 === i2 ? void 0 : i2.text) && (b = p.var("body"), u = "raw", p.push(`${b} = ${objectToRString(null === (n2 = e2.postData) || void 0 === n2 ? void 0 : n2.text)}`).blank());
    }
  printUrlVariablesDeclarations(e2, p), Object.keys(Object.assign(Object.assign({}, e2.pathParameters), e2.serverVariables)).length && p.blank().push("# create you own operator").push('"%&%" <- function(x, y)paste0(x,y)').blank();
  const h = buildUrlExpression(e2, p);
  p.push(`url = ${h}`).blank();
  const m = p.var("data_req");
  if (p.push(`${m} <- ${d}(`), p.push(1, "url,"), e2.basicAuth) {
    const { username: a2, password: t2 } = e2.basicAuth;
    p.push(1, `authenticate("${a2}", "${t2}")`);
  }
  if (Object.keys(e2.allHeaders).length) {
    const a2 = `${Object.keys(e2.allHeaders).map((a3) => `"${a3}" = ${e2.allHeaders[a3].startsWith("paste") ? e2.allHeaders[a3] : `"${e2.allHeaders[a3]}"`}`).join(", ")}`;
    a2 && p.push(1, `add_headers(${a2}),`);
  }
  return b && (p.push(1, `body = ${b},`), p.push(1, `encode = "${u}",`)), p.push(1, "verbose()"), p.push(")"), l.printBody && p.blank().push(`content(${m}${"raw" === u ? ', "text"' : ""})`), p.join();
};
var httr_default = handler12;

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/targets/r/index.js
var r_default = { info: { key: "r", title: "R", extname: ".r", default: "httr" }, httr: httr_default };

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/targets/index.js
var targets = { javascript: javascript_default, node: node_default, python: python_default, shell: shell_default2, java8: java8_default, java: java_default, csharp: csharp_default, csharpNewtonsoft: csharpNewtonsoft_default, go: go_default, php: php_default, ruby: ruby_default, r: r_default };
var targets_default = targets;

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/helpers/reducer.js
function reducer_default(e2, n2) {
  if (void 0 === e2[n2.name])
    return e2[n2.name] = n2.value, e2;
  if (e2[n2.name] instanceof Array)
    return e2[n2.name].push(n2.value), e2;
  const a = [e2[n2.name], n2.value];
  return e2[n2.name] = a, e2;
}

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/httpsnippet/index.js
var HTTPSnippet = class {
  constructor(e2) {
    Object.defineProperty(this, "request", { enumerable: true, configurable: true, writable: true, value: void 0 });
    const r = Object.assign({}, e2);
    this.request = this.prepare(Object.assign(Object.assign({}, r), { httpVersion: r.httpVersion || "HTTP/1.1", queryString: r.queryString || [], headers: r.headers || [], cookies: r.cookies || [], postData: r.postData ? Object.assign(Object.assign({}, r.postData), { jsonObj: void 0, paramsObj: void 0 }) : void 0, bodySize: 0, headersSize: 0, queryObj: {}, headersObj: {}, cookiesObj: {}, allHeaders: {}, uriObj: {}, fullUrl: "", pathParameters: r.pathParameters || {}, serverVariables: r.serverVariables || {} }));
  }
  prepare(e2) {
    var r;
    if (e2.queryString && e2.queryString.length && (e2.queryObj = e2.queryString.reduce(reducer_default, {})), e2.headers && e2.headers.length) {
      const r2 = /^HTTP\/2/;
      e2.headersObj = e2.headers.reduce(function(t2, a) {
        let s = a.name;
        return e2.httpVersion.match(r2) && (s = s.toLowerCase()), t2[s] = a.value, t2;
      }, {});
    }
    e2.cookies && e2.cookies.length && (e2.cookiesObj = e2.cookies.reduceRight(function(e3, r2) {
      return e3[r2.name] = r2.value, e3;
    }, {}));
    const t = e2.cookies.map(function(e3) {
      return encodeURIComponent(e3.name) + "=" + encodeURIComponent(e3.value);
    });
    if (t.length && (e2.allHeaders.cookie = t.join("; ")), e2.postData)
      switch (normalizeMimeType(e2.postData.mimeType)) {
        case "multipart/mixed":
        case "multipart/related":
        case MediaTypes.MULTIPART:
        case "multipart/alternative":
          break;
        case MediaTypes.URL_ENCODED:
          (null === (r = e2.postData) || void 0 === r ? void 0 : r.params) ? (e2.postData.paramsObj = e2.postData.params.reduce(reducer_default, {}), e2.postData.text = queryString.stringify(e2.postData.paramsObj)) : e2.postData.text = "";
          break;
        case "text/json":
        case "text/x-json":
        case MediaTypes.JSON:
        case "application/x-json":
          if (e2.postData.text)
            try {
              e2.postData.jsonObj = JSON.parse(e2.postData.text);
            } catch (r2) {
              e2.postData.mimeType = "text/plain";
            }
      }
    return e2.allHeaders = Object.assign(e2.allHeaders, e2.headersObj), e2.uriObj = url.parse(e2.url, true, true), e2.queryObj = Object.assign(e2.queryObj, e2.uriObj.query), e2.uriObj.query = null, e2.uriObj.search = null, e2.uriObj.path = e2.uriObj.pathname = unescapeServerVariables(e2.uriObj.pathname), e2.url = unescapeServerVariables(url.format(e2.uriObj)), e2.uriObj.query = e2.queryObj, e2.uriObj.search = queryString.stringify(e2.queryObj), e2.uriObj.search && (e2.uriObj.path = e2.uriObj.pathname + "?" + e2.uriObj.search), e2.fullUrl = unescapeServerVariables(url.format(e2.uriObj)), e2;
  }
  convert(e2, r, t) {
    !t && r && (t = r);
    const a = this._matchTarget(e2, r);
    if (a) {
      const s = a(this.request, t, { target: e2, client: r });
      return 1 === s.length ? s[0] : s;
    }
    throw new Error("Can not match target");
  }
  _matchTarget(e2, r) {
    return !!Object.prototype.hasOwnProperty.call(targets_default, e2) && ("string" == typeof r && "function" == typeof targets_default[e2][r] ? targets_default[e2][r] : targets_default[e2][targets_default[e2].info.default]);
  }
};

// node_modules/@redocly/openapi-docs/lib-esm/services/code-samples/generator.js
function getSelectedSecurityScheme(e2, t) {
  return e2.find((e3) => {
    const a = e3.schemes.map((e4) => e4.id);
    return areArraysEqual(a, t || []);
  });
}
function mapOperationToHAR(e2, { exampleName: t = "", skipOptionalParameters: a = false, withOAuth2Call: r = false, spec: s, generatedPayloadSamplesMaxDepth: i2 = 8, pathParams: n2 = {}, properties: o = {} }, { environment: l, requestValues: u, activeSecuritySchemeIds: p }) {
  var c, d, m;
  const h = l.server, y = e2.servers.find((e3) => e3.url === h) || e2.servers[0], f = getSelectedSecurityScheme(e2.security, p), { securityHeaders: g, securityCookies: O, securityQueries: v, securityOAuth2ExtraCalls: S, basicAuth: T } = getSecurityData(f || (null === (c = e2.security) || void 0 === c ? void 0 : c[0]), r, l), C = (null === (d = null == e2 ? void 0 : e2.requestBody) || void 0 === d ? void 0 : d.content) && getActiveMediaType(e2.requestBody.content), b = { skipNonRequired: a, skipReadOnly: true, maxSampleDepth: i2, quiet: true }, E = u;
  let j = false;
  const _ = e2.parameters.filter((e3) => "header" === e3.in).filter((e3) => !(a && !e3.required)).map((e3) => {
    var t2;
    return { name: e3.name, value: (null === (t2 = E.header) || void 0 === t2 ? void 0 : t2[e3.name]) || getParameterValue("header", e3.name) || serializeParameterValue(e3, sample(e3.schema.rawSchema, b, s)) };
  }).map((e3) => ((null == C ? void 0 : C.name) && "content-type" === e3.name.toLowerCase() && (j = true, e3.value = C.name), e3)).concat(g);
  !j && (null == C ? void 0 : C.name) && _.unshift({ name: "Content-Type", value: null == C ? void 0 : C.name });
  const k = e2.parameters.filter((e3) => "cookie" === e3.in).filter((e3) => !(a && !e3.required)).map((e3) => queryString.parse(serializeParameterValue(e3, sample(e3.schema.rawSchema, b, s)))).reduce((e3, t2) => {
    var a2;
    for (const [r2, s2] of Object.entries(t2))
      e3.push({ name: r2, value: String((null === (a2 = E.cookie) || void 0 === a2 ? void 0 : a2[r2]) || s2) });
    return e3;
  }, []).concat(O), A = e2.parameters.filter((e3) => "query" === e3.in).filter((e3) => !(a && !e3.required)).map((e3) => queryString.parse(serializeParameterValue(e3, sample(e3.schema.rawSchema, b, s)))).reduce((e3, t2) => {
    var a2, r2, s2;
    for (const [i3, n3] of Object.entries(t2))
      e3.push({ name: i3, value: isArrayOfObjects(null === (a2 = E.query) || void 0 === a2 ? void 0 : a2[i3]) && JSON.stringify(deleteEmptyArrayItem(null === (r2 = E.query) || void 0 === r2 ? void 0 : r2[i3])) || String((null === (s2 = E.query) || void 0 === s2 ? void 0 : s2[i3]) || n3) });
    return e3;
  }, []).concat(v), P = `${null == y ? void 0 : y.url.replace(/\/$/, "")}/${e2.path.replace(/^\//, "")}`, w = e2.parameters.filter((e3) => "path" === e3.in).reduce((e3, t2) => {
    var a2;
    const { in: r2, name: s2 } = t2;
    return e3[s2] = (null === (a2 = E.path) || void 0 === a2 ? void 0 : a2[s2]) || n2[s2] || getParameterValue(r2, s2), e3;
  }, {}), R = null === (m = null == C ? void 0 : C.examples) || void 0 === m ? void 0 : m[t], D = (null == C ? void 0 : C.examples) || {}, [q] = Object.values(D), M = null == C ? void 0 : C.name.toLowerCase(), H = (null == E ? void 0 : E.body) || (null == R ? void 0 : R.value) || (null == q ? void 0 : q.value) || (null == C ? void 0 : C.schema) && sample(null == C ? void 0 : C.schema.rawSchema, Object.assign(Object.assign({}, b), { format: M === MediaTypes.XML ? "xml" : "json" }), s);
  let N = "", x = [];
  switch (normalizeMimeType(M)) {
    case MediaTypes.JSON:
      N = JSON.stringify(getDataRequest(H, o));
      break;
    case MediaTypes.XML:
      N = H;
      break;
    case MediaTypes.URL_ENCODED:
    case MediaTypes.MULTIPART:
      N = queryString.stringify(getDataRequest(H, o)), x = objectToHarParams(getDataRequest(H, o));
      break;
    default:
      N = String(H || "");
  }
  const U = N ? { mimeType: (null == C ? void 0 : C.name) || MediaTypes.OCTET_STREAM, text: N, params: x } : void 0, z = e2.responses.map((e3) => e3.code);
  return { method: e2.httpVerb, url: P, httpVersion: "HTTP/1.1", cookies: k, headers: _, queryString: A, postData: U, headersSize: -1, bodySize: -1, securityOAuth2ExtraCalls: S, basicAuth: T, pathParameters: w, serverVariables: l, allResponseCodes: z };
}
var defaultOptions = { withImports: true, withComments: false };
var langToSnippetConfig = { curl: { code: "shell", defaultTarget: "curl", defaultOptions: Object.assign(Object.assign({}, defaultOptions), { short: true }) }, JavaScript: { code: "javascript", defaultTarget: "fetch", defaultOptions: Object.assign(Object.assign({}, defaultOptions), { withImports: false }) }, "Node.js": { code: "node", defaultTarget: "fetch", defaultOptions: Object.assign({}, defaultOptions) }, Python: { code: "python", defaultTarget: "requests", defaultOptions: Object.assign({}, defaultOptions) }, "Java8+Apache": { code: "java8", defaultTarget: "apachehttp", defaultOptions: Object.assign({}, defaultOptions) }, Java: { code: "java", defaultTarget: "httpclient", defaultOptions: Object.assign({}, defaultOptions) }, "C#": { code: "csharp", defaultTarget: "httpclient", defaultOptions: Object.assign({}, defaultOptions) }, "C#+Newtonsoft": { code: "csharpNewtonsoft", defaultTarget: "httpclient", defaultOptions: Object.assign({}, defaultOptions) }, Go: { code: "go", defaultTarget: "http.DefaultClient", defaultOptions: Object.assign({}, defaultOptions) }, PHP: { code: "php", defaultTarget: "curl", defaultOptions: Object.assign({}, defaultOptions) }, Ruby: { code: "ruby", defaultTarget: "net::http", defaultOptions: Object.assign({}, defaultOptions) }, R: { code: "r", defaultTarget: "httr", defaultOptions: Object.assign({}, defaultOptions) } };
function getCodeSample({ lang: e2, operation: t, exampleName: a, pathParams: r, properties: s, options: i2 = {}, environment: n2, translate: o }) {
  try {
    const { skipOptionalParameters: l, withOAuth2Call: u, spec: p, generatedPayloadSamplesMaxDepth: c, store: d } = i2, m = mapOperationToHAR(t, { exampleName: a, pathParams: r, properties: s, skipOptionalParameters: l, withOAuth2Call: u, spec: p, generatedPayloadSamplesMaxDepth: c }, { environment: n2, requestValues: d.requestValues, activeSecuritySchemeIds: d.activeSecuritySchemeIds }), h = new HTTPSnippet(m);
    return langToSnippetConfig[e2] ? h.convert(langToSnippetConfig[e2].code, langToSnippetConfig[e2].defaultTarget, Object.assign(Object.assign({}, langToSnippetConfig[e2].defaultOptions), i2)) : o("openapi.unsupportedLanguage", "Language is not supported.");
  } catch (e3) {
    return console.error(e3), o("openapi.failedToGenerateCodeSample", "Failed to generate code sample.");
  }
}
function getSecurityData(e2, t, a) {
  var r, s, i2, n2, o;
  const l = { securityHeaders: [], securityCookies: [], securityQueries: [], securityOAuth2ExtraCalls: [], basicAuth: void 0 };
  for (const u of (null == e2 ? void 0 : e2.schemes) || []) {
    const e3 = getSecurityDetails(u.id, a);
    switch (u.type) {
      case "openIdConnect":
        null === (r = l.securityHeaders) || void 0 === r || r.push({ name: "Authorization", value: e3.token ? `${e3.token.token_type || "Bearer"} ${e3.token.access_token}` : "Bearer <YOUR_TOKEN_HERE>" });
        break;
      case "oauth2": {
        const a2 = e3.token ? `${e3.token.token_type || "Bearer"} ${e3.token.access_token}` : "Bearer <YOUR_TOKEN_HERE>";
        u.flows.clientCredentials && t ? l.securityOAuth2ExtraCalls.push(getOAuth2ClientCredsCallHar(u.flows.clientCredentials, u.scopes, e3)) : u.flows.password && t && l.securityOAuth2ExtraCalls.push(getOAuth2PasswordCallHar(u.flows.password, u.scopes, e3)), null === (s = l.securityHeaders) || void 0 === s || s.push({ name: "Authorization", value: a2 });
        break;
      }
      case "apiKey": {
        const t2 = e3.raw || "YOUR_API_KEY_HERE";
        "header" === u.in && (null === (i2 = l.securityHeaders) || void 0 === i2 || i2.push({ name: u.name, value: t2 })), "cookie" === u.in && l.securityCookies.push({ name: u.name, value: t2 }), "query" === u.in && l.securityQueries.push({ name: u.name, value: t2 });
        break;
      }
      case "http":
        if ("basic" === u.scheme)
          l.basicAuth = { username: e3.username || `<${StringUtility.toSnakeCase("Username")}>`, password: e3.password || `<${StringUtility.toSnakeCase("Password")}>` };
        else {
          const t2 = (null === (n2 = e3.token) || void 0 === n2 ? void 0 : n2.access_token) || `<YOUR_${u.bearerFormat || "TOKEN"}_HERE>`;
          null === (o = l.securityHeaders) || void 0 === o || o.push({ name: "Authorization", value: `${capitalizeFirst(u.scheme || "bearer")} ${t2}` });
        }
    }
  }
  return l;
}
function getOAuth2PasswordCallHar(e2, t, a) {
  return { method: "POST", url: e2.tokenUrl, httpVersion: "HTTP/1.1", headers: [{ name: "Content-Type", value: MediaTypes.URL_ENCODED }, { name: "Accept", value: MediaTypes.JSON }], queryString: [], postData: { mimeType: MediaTypes.URL_ENCODED, text: "", params: [{ name: "grant_type", value: "password" }, { name: "client_id", value: a.client_id || "YOUR_CLIENT_ID" }, { name: "client_secret", value: a.client_secret || "YOUR_CLIENT_SECRET" }, { name: "username", value: a.username || "<username>" }, { name: "password", value: a.password || "<password>" }, t.length ? { name: "scope", value: t.join(" ") } : void 0].filter(isDefined) }, cookies: [], headersSize: -1, bodySize: -1, securityOAuth2ExtraCalls: [] };
}
function getOAuth2ClientCredsCallHar(e2, t, a) {
  return { method: "POST", url: e2.tokenUrl, httpVersion: "HTTP/1.1", headers: [{ name: "Content-Type", value: MediaTypes.URL_ENCODED }, { name: "Accept", value: MediaTypes.JSON }], queryString: [], postData: { mimeType: MediaTypes.URL_ENCODED, text: "", params: [{ name: "grant_type", value: "client_credentials" }, { name: "client_id", value: a.client_id || "YOUR_CLIENT_ID" }, { name: "client_secret", value: a.client_secret || "YOUR_CLIENT_SECRET" }, t.length ? { name: "scope", value: t.join(" ") } : void 0].filter(isDefined) }, cookies: [], headersSize: -1, bodySize: -1, securityOAuth2ExtraCalls: [] };
}
function getDataRequest(e2, t) {
  if (e2) {
    if (isObject(e2))
      return Object.keys(e2).length > 0 && 0 === Object.keys(t).length ? e2 : (0, import_deepmerge2.default)(e2, t, { arrayMerge: arrayMergeStrategy });
    try {
      return (0, import_deepmerge2.default)(JSON.parse(e2), t, { arrayMerge: arrayMergeStrategy });
    } catch (e3) {
      return false;
    }
  }
  return false;
}
function objectToHarParams(e2, t = "") {
  const a = [];
  for (const [r, s] of Object.entries(e2)) {
    const e3 = t ? `${t}[${r}]` : r;
    "object" == typeof s && null !== s ? a.push(...objectToHarParams(s, e3)) : a.push({ name: e3, value: String(s) });
  }
  return a;
}
function isDefined(e2) {
  return void 0 !== e2;
}
function capitalizeFirst(e2) {
  return e2.charAt(0).toUpperCase() + e2.slice(1);
}

// node_modules/@redocly/openapi-docs/lib-esm/models/group.js
init_lib_esm();

// node_modules/@redocly/openapi-docs/lib-esm/services/menu/operation.js
init_lib_esm();
function getOperationsItems(e2, t, o) {
  if (0 === t.operations.length)
    return [];
  const r = [], a = [];
  for (const n2 of t.operations) {
    const t2 = getOperationId(n2, e2), p = { id: t2, type: "operation", parent: e2, operationDefinition: n2, depth: o, name: getOperationName(n2), httpVerb: n2.httpVerb, path: n2.pathName, items: [], isWebhook: n2.isWebhook, operationId: n2.operationId, badges: n2["x-badges"] || [], href: getHref({ id: t2 }), deprecated: !!n2.deprecated, [REDOCLY_TEAMS_RBAC]: n2[REDOCLY_TEAMS_RBAC] || (null == e2 ? void 0 : e2[REDOCLY_TEAMS_RBAC]) };
    n2.isWebhook ? a.push(p) : r.push(p);
  }
  return [...r.sort((e3, t2) => Number(e3.deprecated) - Number(t2.deprecated)), ...a.sort((e3, t2) => Number(e3.deprecated) - Number(t2.deprecated))];
}
function getHref({ id: e2 }) {
  return encodeBackSlashes(`/${e2}`.toLowerCase());
}

// node_modules/@redocly/openapi-docs/lib-esm/models/group.js
function getTagOrGroup(e2, i2, r) {
  let t;
  t = (null == r ? void 0 : r.id) && "schema" === e2 ? joinWithSeparator(r.id, safeSlugify(i2.name)) : i2.id || safeSlugify(i2.name);
  const o = i2["x-displayName"] || i2.name, a = i2.level || 1, s = i2.isSchema, n2 = i2.ast || void 0, m = saveTextBeforeHeading(getValueFromMdParsedExtension(i2, "description") || ""), d = i2.items || [], l = i2.externalDocs;
  return { id: t.toLowerCase(), type: e2, parent: r, name: o, level: a, depth: 0, isSchema: s, description: m, items: d, ast: n2, externalDocs: l, href: getHref({ id: t }), [REDOCLY_TEAMS_RBAC]: i2[REDOCLY_TEAMS_RBAC] || (null == r ? void 0 : r[REDOCLY_TEAMS_RBAC]) };
}

// node_modules/@redocly/openapi-docs/lib-esm/services/menu/markdown.js
init_dist();
init_src();

// node_modules/@redocly/openapi-docs/lib-esm/models/operation.js
init_src();
init_lib_esm();

// node_modules/@redocly/openapi-docs/lib-esm/models/callback.js
function getCallback(e2, t, r, o, a, s, i2) {
  const { resolved: n2 } = e2.deref(r), p = [];
  for (const r2 of Object.keys(n2)) {
    const c = n2[r2], m = Object.keys(c).filter(isOperationName);
    for (const n3 of m) {
      const m2 = c[n3], f = getOperation(e2, Object.assign(Object.assign({}, m2), { pathName: r2, pointer: JsonPointer.join(o, ["callbacks", t, n3]), httpVerb: n3, pathParameters: c.parameters || [], pathServers: c.servers }), i2, a, s, { isCallback: true, id: joinWithSeparator(t, n3) });
      p.push(f);
    }
  }
  return { name: t, operations: p };
}

// node_modules/@redocly/openapi-docs/lib-esm/models/request.js
function getRequestBody({ parser: e2, infoOrRef: t, options: o, isEvent: n2, operation: r }) {
  const { resolved: i2 } = e2.deref(t), s = getValueFromMdParsedExtension(i2, "description") || "", a = i2.required;
  let d;
  const p = !n2, u = getContentWithLegacyExamples(i2);
  return void 0 !== u && (d = getMediaContent({ parser: e2, info: u, isRequestType: p, options: o, data: { operation: r, type: "request", absolutePointer: t.$ref || JsonPointer.join(r.pointer, ["requestBody"]) } })), { description: s, required: a, content: d };
}

// node_modules/@redocly/openapi-docs/lib-esm/models/security.js
function getSecurity(e2 = [], t) {
  return e2.map((e3) => getSecurityRequirement({ requirement: e3, parser: t })).filter(({ schemes: e3 }) => e3.length > 0);
}
function getSecurityRequirement({ requirement: e2, parser: t }) {
  const r = t.definition.components && t.definition.components.securitySchemes || {};
  return { schemes: Object.keys(e2 || {}).map((n2) => {
    const i2 = t.deref(r[n2]).resolved, o = e2[n2] || [];
    if (i2)
      return Object.assign(Object.assign({}, i2), { id: n2, sectionId: n2, scopes: o });
  }).filter(Boolean) };
}

// node_modules/@redocly/openapi-docs/lib-esm/models/response.js
function getResponse({ parser: e2, code: t, defaultAsError: o, infoOrRef: n2, options: s, isEvent: r, operation: i2 }) {
  const a = !!r, { resolved: d } = e2.deref(n2), p = { code: t };
  void 0 !== d["x-summary"] ? (p.summary = getValueFromMdParsedExtension(d, "x-summary"), p.description = getValueFromMdParsedExtension(d, "description") || "") : (p.summary = getValueFromMdParsedExtension(d, "description") || "", p.description = ""), p.type = getStatusCodeType(t, o);
  const m = d.headers, u = n2.$ref || JsonPointer.join((null == i2 ? void 0 : i2.pointer) || "", ["responses", t]);
  void 0 !== m && (p.headers = Object.keys(m).map((t2) => {
    const o2 = m[t2];
    return getField(e2, Object.assign(Object.assign({}, o2), { name: t2 }), JsonPointer.join(u, ["headers", t2]), s, { operation: i2, type: "response", response: p });
  }));
  const c = getContentWithLegacyExamples(d);
  return void 0 !== c && (p.content = getMediaContent({ parser: e2, info: c, isRequestType: a, options: s, data: { operation: i2, type: "response", response: p, absolutePointer: u } })), p;
}

// node_modules/@redocly/openapi-docs/lib-esm/models/operation.js
function isPayloadSample(e2) {
  return "Payload" === e2.lang && "requestBodyContent" in e2;
}
function getOperation(e2, r, t, o, i2, s, a = true) {
  var n2, l;
  const p = r.isWebhook, d = { operationDefinition: r, parent: t, pointer: r.pointer, description: a ? getValueFromMdParsedExtension(r, "description") : "", externalDocs: r.externalDocs, deprecated: !!r.deprecated, httpVerb: r.httpVerb, operationId: r.operationId, path: r.pathName, isWebhook: p, isCallback: Boolean(null == s ? void 0 : s.isCallback), isEvent: (null == s ? void 0 : s.isCallback) || p, name: getOperationName(r), defaultExampleName: r.defaultSampleName, [REDOCLY_TEAMS_RBAC]: r[REDOCLY_TEAMS_RBAC] || (null == t ? void 0 : t[REDOCLY_TEAMS_RBAC]), type: "operation", callbackId: null == s ? void 0 : s.id, href: i2, get callbacks() {
    return a ? Object.keys(r.callbacks || []).map((s2) => {
      var a2;
      return getCallback(e2, s2, null === (a2 = r.callbacks) || void 0 === a2 ? void 0 : a2[s2], d.pointer, o, i2, t);
    }) : [];
  }, get responses() {
    let t2 = false;
    return a ? Object.keys(r.responses || []).filter((e3) => "default" === e3 || ("success" === getStatusCodeType(e3) && (t2 = true), isStatusCode(e3))).map((i3) => getResponse({ parser: e2, code: i3, defaultAsError: t2, infoOrRef: r.responses[i3], options: o, isEvent: d.isEvent, operation: d })) : [];
  }, get parameters() {
    if (!a)
      return [];
    let t2 = mergeParams(e2, r.pathParameters, r.parameters, { pathPointer: JsonPointer.dirName(d.pointer), operationPointer: d.pointer }).map(({ paramOrRef: r2, pointer: t3 }) => getField(e2, r2, t3, o, { operation: d, type: "request" }));
    return o.sortRequiredPropsFirst && (t2 = sortByRequired(t2)), sortByDeprecated(t2);
  } };
  (null == s ? void 0 : s.isCallback) ? (d.security = getSecurity(r.security, e2), d.servers = normalizeServers("", r.servers || r.pathServers || []), d.id = removeLeadingSlash(i2)) : (d.id = getOperationId(r, t), d.href = d.href || getHref(d), d.security = a ? getSecurity(r.security || e2.definition.security, e2) : [], d.servers = a ? normalizeServers(e2.definitionUrl, mergeInMockServer(r.servers || r.pathServers || e2.definition.servers || [], o.mockServer)) : []), o.showExtensions && (d.extensions = extractExtensions(r, o.showExtensions)), d.requestBody = a && r.requestBody ? getRequestBody({ parser: e2, infoOrRef: r.requestBody, options: o, operation: d, isEvent: d.isEvent }) : void 0;
  const c = null === (n2 = d.requestBody) || void 0 === n2 ? void 0 : n2.content;
  return d.payload = { lang: "Payload", source: "", requestBodyContent: (null == c ? void 0 : c.hasSample) ? c : void 0 }, d.definitionSamples = r["x-codeSamples"] || [], d.badges = (null === (l = r["x-badges"]) || void 0 === l ? void 0 : l.map(({ name: e3, color: r2, position: t2 }) => ({ name: e3, color: r2 || "var(--color-info-base)", position: t2 || "after" }))) || [], d.hasSamples = (null == c ? void 0 : c.hasSample) || d.definitionSamples.length > 0, d.hideReplay = true === r["x-hideReplay"], d;
}
function mergeInMockServer(e2, r) {
  if (!r)
    return e2;
  const t = { url: r.url, description: r.description };
  switch (r.position) {
    case "first":
      return [t, ...e2];
    case "last":
      return [...e2, t];
    case "replace":
      return [t];
    default:
      return e2;
  }
}

// node_modules/@redocly/openapi-docs/lib-esm/services/menu/markdown.js
function addMarkdownItems(t, e2, i2) {
  const n2 = isString(t) ? parse3(t) : ast_default.fromJSON(JSON.stringify(null == t ? void 0 : t.result)), o = [];
  let r;
  const s = (t2, e3, i3 = o, n3, r2) => {
    let s2;
    t2 = unescapeHTMLChars(t2), n3.attributes.id ? s2 = n3.attributes.id : (s2 = r2 ? `${r2}/${safeSlugify(t2)}` : `section/${safeSlugify(t2)}`, n3.attributes.id = s2);
    const l2 = { id: s2.toLowerCase(), name: t2, level: e3, items: [], ast: [n3] };
    return i3.push(l2), l2;
  }, l = (t2, e3) => {
    var i3, n3;
    null === (n3 = null === (i3 = t2[t2.length - 1]) || void 0 === i3 ? void 0 : i3.ast) || void 0 === n3 || n3.push(e3);
  }, a = (t2) => {
    var e3;
    for (const i3 of t2.children) {
      const t3 = getMarkdownContent(i3) || "";
      "heading" === i3.type && 1 === i3.attributes.level ? r = s(t3, i3.attributes.level, void 0, i3) : i3.attributes.level ? s(t3, i3.attributes.level, null == r ? void 0 : r.items, i3, null == r ? void 0 : r.id) : (null === (e3 = null == r ? void 0 : r.items) || void 0 === e3 ? void 0 : e3.length) ? l(null == r ? void 0 : r.items, i3) : (null == o ? void 0 : o.length) && l(o, i3);
    }
  };
  if (Array.isArray(n2))
    for (const t2 of n2)
      a(t2);
  else
    a(n2);
  return mapHeadingsDeep(e2, o, i2);
}
function mapHeadingsDeep(t, e2, i2 = 1) {
  return e2.map((e3) => {
    const n2 = getTagOrGroup("section", e3, t);
    return n2.depth = i2, e3.items && (n2.items = mapHeadingsDeep(n2, e3.items, i2 + 1)), n2;
  });
}
function getMarkdownContent(t) {
  var e2, i2;
  return "string" == typeof (null === (e2 = null == t ? void 0 : t.attributes) || void 0 === e2 ? void 0 : e2.content) ? null === (i2 = t.attributes) || void 0 === i2 ? void 0 : i2.content : (null == t ? void 0 : t.children) ? getMarkdownContent(t.children[0]) : void 0;
}

// node_modules/@redocly/openapi-docs/lib-esm/services/menu/tags.js
function getTagsItems(e2, t, o, n2, s) {
  let a;
  if (a = void 0 === n2 ? Object.keys(t) : n2.tags, !Array.isArray(a))
    return console.warn("Unexpected values of tags. Check tags or x-tagGroups in your definition."), [];
  const i2 = a.map((e3) => t[e3] ? (t[e3].used = true, t[e3]) : (console.warn(`Non-existing tag "${e3}" is added to the group "${null == n2 ? void 0 : n2.name}"`), null)), r = [];
  for (const t2 of i2) {
    if (!t2)
      continue;
    const n3 = getTagOrGroup("tag", t2, o);
    if (n3.depth = GROUP_DEPTH + 1, "" === t2.name) {
      const e3 = [...addMarkdownItems(getValueFromMdParsedExtension(t2, "description") || "", n3, n3.depth + 1), ...getOperationsItems(void 0, t2, n3.depth + 1)];
      r.push(...e3);
      continue;
    }
    const a2 = getTagRelatedSchema({ definition: e2.definition, tag: t2, parent: n3, schemaDefinitionsTagName: s.schemaDefinitionsTagName });
    n3.items = [...a2, ...addMarkdownItems(getValueFromMdParsedExtension(t2, "description") || "", n3, n3.depth + 1), ...getOperationsItems(n3, t2, n3.depth + 1)], r.push(n3);
  }
  return r.filter(({ name: e3, items: t2 }) => e3 !== DEFAULT_WEBHOOKS_TAG_NAME || t2.length > 0);
}
function getTagGroupsItems(e2, t, o, n2, s) {
  const a = [];
  for (const i2 of o) {
    const o2 = getTagOrGroup("group", i2, t);
    o2.depth = GROUP_DEPTH, o2.items = getTagsItems(e2, n2, o2, i2, s), a.push(o2);
  }
  return a;
}
function getTagRelatedSchema({ definition: e2, tag: t, parent: o, schemaDefinitionsTagName: n2 }) {
  var s;
  const a = n2 ? [n2] : [];
  return Object.entries((null === (s = e2.components) || void 0 === s ? void 0 : s.schemas) || {}).map(([e3, n3]) => {
    if (!(n3["x-tags"] || a).includes(t.name))
      return null;
    const s2 = getTagOrGroup("schema", { name: e3, "x-displayName": `${n3.title || e3}`, description: `{% schemaDefinition showWriteOnly="true" schemaRef="#/components/schemas/${e3}" /%}`, isSchema: true, level: 2 }, o);
    return s2.depth = o.depth + 1, s2;
  }).filter(Boolean);
}
function getTagsWithOperations(e2, t) {
  const { definition: o } = e2, n2 = {}, s = o["x-webhooks"] || o.webhooks;
  for (const e3 of t || [])
    n2[e3.name] = Object.assign(Object.assign({}, e3), { operations: [] });
  return o.paths && getTags(e2, o.paths, n2), s && getTags(e2, s, n2, true), n2;
}
function getTags(e2, t, o, n2) {
  for (const s of Object.keys(t || {})) {
    const a = t[s], i2 = Object.keys(a).filter(isOperationName);
    for (const t2 of i2) {
      const i3 = a[t2];
      if (a.$ref) {
        const { resolved: t3 } = e2.deref(a);
        getTags(e2, { [s]: t3 }, o, n2);
        continue;
      }
      let r = null == i3 ? void 0 : i3.tags;
      r && r.length || (r = n2 ? [DEFAULT_WEBHOOKS_TAG_NAME] : [""]);
      for (const e3 of r) {
        let r2 = o[e3];
        void 0 === r2 && (r2 = { name: e3, operations: [] }, o[e3] = r2), r2["x-traitTag"] || r2.operations.push(Object.assign(Object.assign({}, i3), { pathName: s, pointer: JsonPointer.compile(["paths", s, t2]), httpVerb: t2, pathParameters: a.parameters || [], pathServers: a.servers, isWebhook: !!n2 }));
      }
    }
  }
}

// node_modules/@redocly/openapi-docs/lib-esm/services/menu/builder.js
function buildMenuStructure(t, e2) {
  var o, n2, i2;
  const { definition: s } = t, { schemaDefinitionsTagName: r } = e2, a = [{ id: "", name: (null === (n2 = null === (o = null == s ? void 0 : s.info) || void 0 === o ? void 0 : o["x-seo"]) || void 0 === n2 ? void 0 : n2.title) || (null === (i2 = null == s ? void 0 : s.info) || void 0 === i2 ? void 0 : i2.title) || "Overview", href: "/", depth: 1, level: 1, type: "section", infoDefinition: s.info, items: [] }], d = [...s.tags || []];
  d.some((t2) => t2.name === DEFAULT_WEBHOOKS_TAG_NAME) || d.push({ name: DEFAULT_WEBHOOKS_TAG_NAME });
  !d.find((t2) => (null == t2 ? void 0 : t2.name) === r) && r && d.push({ name: r });
  const m = getTagsWithOperations(t, d), u = s["x-tagGroups"];
  return a.push(...addMarkdownItems(getValueFromMdParsedExtension(s.info, "description") || "", void 0, 1)), u && u.length > 0 ? a.push(...getTagGroupsItems(t, void 0, u, m, e2)) : a.push(...getTagsItems(t, m, void 0, void 0, e2)), a;
}
function buildContentItems(t, e2) {
  const o = buildMenuStructure(t, e2);
  return { contentItems: o, flatItems: flattenByProp(o || [], "items") };
}

// node_modules/@redocly/openapi-docs/lib-esm/components/RedoclyOpenAPIDocs/utils.js
var import_fast_deep_equal = __toESM(require_fast_deep_equal());
import { useRef as useRef2 } from "react";
function getMarkdownHeaderId(e2) {
  return "string" == typeof e2[0] ? `section/${safeSlugify(e2[0])}` : e2.children ? getMarkdownHeaderId(e2[0]) : void 0;
}

// node_modules/@redocly/openapi-docs/lib-esm/components/SchemaDefinition/SchemaDefinition.js
init_styled_components_esm();
init_src();
import { jsx as _jsx40, jsxs as _jsxs23 } from "react/jsx-runtime";
import { memo as memo24, useCallback as useCallback10, useMemo as useMemo9 } from "react";

// node_modules/@redocly/openapi-docs/lib-esm/components/common/Select/styled.js
init_styled_components_esm();
init_src();

// node_modules/@redocly/openapi-docs/lib-esm/components/common/Select/Select.js
import { jsx as _jsx2, jsxs as _jsxs } from "react/jsx-runtime";
import { memo as memo2, useMemo as useMemo2 } from "react";

// node_modules/@redocly/openapi-docs/lib-esm/components/common/ClearButton/styled.js
init_styled_components_esm();

// node_modules/@redocly/openapi-docs/lib-esm/components/common/ClearButton/ClearButton.js
import { jsx as _jsx } from "react/jsx-runtime";
import { memo } from "react";
var ClearButtonComponent = ({ className: t, style: e2, handleClear: o }) => _jsx("button", { className: t, style: e2, onClick: o, children: "\u2715" });
var ClearButton = memo(ClearButtonComponent);

// node_modules/@redocly/openapi-docs/lib-esm/components/common/ClearButton/styled.js
var ClearButton2 = styled_components_esm_default(ClearButton).withConfig({
  displayName: "styled__ClearButton",
  componentId: "sc-13dt5x0-0"
})(["z-index:1;position:absolute;right:24px;top:50%;transform:translateY(-50%);color:#89949f;background:none;border:none;cursor:pointer;&:hover{color:#fff;}"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/common/Select/Select.js
function SelectComponent({ options: e2, onChange: o, handleClear: l, clearable: t, placeholder: r, value: n2 = "", className: a }) {
  var s;
  const i2 = useMemo2(() => e2.map(({ idx: e3, value: o2, title: l2 }, t2) => {
    const r2 = normalizeText(o2);
    return _jsx2("option", { value: r2, className: "dropdown-option", children: l2 || r2 }, e3 || r2 + t2);
  }), [e2]), d = normalizeText(n2), m = (null === (s = e2.find((e3) => e3.value === n2)) || void 0 === s ? void 0 : s.title) || d;
  return _jsxs("div", { className: a + " dropdown-wrapper", children: [_jsx2(Arrow, {}), t && (null == d ? void 0 : d.length) > 0 && _jsx2(ClearButton2, { handleClear: l }), _jsxs("select", { onChange: (l2) => {
    const { selectedIndex: t2 } = l2.target;
    o(e2[r || !n2 ? t2 - 1 : t2]);
  }, value: d, className: "dropdown-select", "aria-label": "dropdown select", children: [r && _jsx2("option", { disabled: true, hidden: true, value: r, children: r }), !d && !r && _jsx2("option", { disabled: true }), i2] }), _jsx2("label", { children: m })] });
}
var Select = memo2(SelectComponent);

// node_modules/@redocly/openapi-docs/lib-esm/components/common/Select/styled.js
var darkSelectStyle = Ne(["background-color:var(--panel-samples-dropdown-bg-color);border:var(--panel-samples-dropdown-border);color:var(--panel-samples-dropdown-color);&,&:hover,&:focus-within{box-shadow:none;}"]);
var Select2 = styled_components_esm_default(Select).withConfig({
  displayName: "styled__Select",
  componentId: "sc-1qt3jva-0"
})(["box-sizing:border-box;outline:none;display:inline-block;vertical-align:bottom;position:relative;width:", ";cursor:pointer;text-transform:none;label{box-sizing:border-box;min-width:90px;height:36px;outline:none;display:inline-block;color:var(--docs-dropdown-text-color);border-radius:var(--border-radius-md);padding:var(--docs-dropdown-padding);vertical-align:bottom;width:", ";text-transform:none;line-height:inherit;font-size:var(--docs-dropdown-font-size);font-family:inherit;text-overflow:ellipsis;overflow:hidden;white-space:nowrap;&,&:hover,&:focus-within{box-shadow:none;}", ";}.dropdown-select{position:absolute;top:0;left:0;width:100%;height:100%;opacity:0;border:none;appearance:none;cursor:pointer;color:var(--text-color-secondary);line-height:inherit;font-size:var(--font-size-base);font-family:inherit;padding:var(--docs-dropdown-padding);", ";}"], ({
  fullWidth: o
}) => o ? "100%" : "auto", ({
  fullWidth: o
}) => o ? "100%" : "auto", ({
  variant: o
}) => "dark" === o ? darkSelectStyle : "", ({
  variant: o
}) => "dark" === o ? darkSelectStyle : "");
var SimpleSelect = styled_components_esm_default(Select2).withConfig({
  displayName: "styled__SimpleSelect",
  componentId: "sc-1qt3jva-1"
})(["svg{top:60%;transform:translateY(-60%);}label{padding:0 26px 0 4px;background:transparent;font-size:var(--font-size-base);font-weight:var(--font-weight-regular);appearance:none;height:auto;&:hover,&:focus-within{box-shadow:none;}}"]);
var CollapsingSelect = styled_components_esm_default(Select2).withConfig({
  displayName: "styled__CollapsingSelect",
  componentId: "sc-1qt3jva-2"
})(["svg{top:60%;transform:translateY(-60%);}label{", ";border-radius:var(--border-radius-lg);margin-left:5px;transition:none;min-width:auto;background-color:", ";&{&[open],&:focus-within,&:hover{background-color:var(--bg-color-tonal);}}}"], darkSelectStyle, ({
  active: o
}) => o ? "var(--panel-samples-tabs-bg-color-active)" : "var(--bg-color-raised)");
var Arrow = styled_components_esm_default(ChevronDownIcon).withConfig({
  displayName: "styled__Arrow",
  componentId: "sc-1qt3jva-3"
})(["position:absolute;right:10px;top:10px;"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/common/LinkToField.js
init_styled_components_esm();
init_src();
import { jsx as _jsx4 } from "react/jsx-runtime";
import { useLocation } from "react-router-dom";

// node_modules/@redocly/openapi-docs/lib-esm/components/common/linkify.js
init_styled_components_esm();
import { jsx as _jsx3, jsxs as _jsxs2 } from "react/jsx-runtime";
init_src();
import { Link as LinkRouter } from "react-router-dom";
function Link(i2) {
  var o;
  const {
    routingBasePath: t,
    unstable_hooks: e2,
    onDeepLinkClick: n2
  } = useAtomValue(globalOptionsAtom), r = i2.security ? null === (o = null == e2 ? void 0 : e2.replaceSecurityLink) || void 0 === o ? void 0 : o.call(e2, {
    securityRequirementId: i2.to
  }) : i2.to, a = n2 && {
    onClick: (i3) => {
      i3.preventDefault(), n2(t + r);
    }
  };
  return r ? _jsx3(LinkRouter, Object.assign({
    "aria-label": i2["aria-label"] || `link to ${r}`,
    id: tryDecodeURIComponent(i2.id || ""),
    className: i2.className || "",
    to: (null == r ? void 0 : r.startsWith("#")) ? r : t + r
  }, a, {
    children: i2.children
  })) : i2.children ? _jsxs2("span", {
    "aria-label": i2["aria-label"] || `link to ${r}`,
    className: i2.className,
    children: [" ", i2.children, " "]
  }) : null;
}
var StyledShareLink = styled_components_esm_default(Link).withConfig({
  displayName: "linkify__StyledShareLink",
  componentId: "sc-aj7j6e-0"
})(["position:absolute;top:50%;left:0;transform:translate(-100%,-50%);padding-right:var(--heading-anchor-offset-right);z-index:1;", "{opacity:0;transition:visibility 0.3s linear,opacity 0.3s linear;}:hover ", ",:focus ", "{visibility:visible;opacity:1;}"], LinkIcon, LinkIcon, LinkIcon);
function ShareLink(i2) {
  return _jsx3(StyledShareLink, Object.assign({}, i2, {
    children: _jsx3(LinkIcon, {
      size: "13px",
      color: "--heading-anchor-color"
    })
  }));
}

// node_modules/@redocly/openapi-docs/lib-esm/components/common/LinkToField.js
function generateDeepLink(i2) {
  const o = i2.deps.operation, e2 = constructFieldDeepFragment(i2);
  if (!(null == o ? void 0 : o.id) && !o.isCallback)
    return "#" + e2.toLowerCase();
  const r = joinWithSeparator(o.href, joinWithSeparator(o.id, e2), "#");
  return encodeBackSlashes(r.toLowerCase());
}
var LinkToField = ({
  to: i2,
  className: o
}) => {
  const e2 = i2, r = useLocation(), t = null == e2 ? void 0 : e2.split("#")[1], s = !!r && r.hash === `#${t}`;
  return _jsx4(ShareLinkToField, {
    ariaLabel: `link  to ${e2}`,
    className: o,
    isActive: s,
    to: e2,
    id: t
  });
};
var ShareLinkToField = styled_components_esm_default(ShareLink).withConfig({
  displayName: "LinkToField__ShareLinkToField",
  componentId: "sc-zyze4x-0"
})(["display:flex;", "{visibility:hidden;cursor:pointer;background-color:var(--bg-color);}", " :hover ", ",:focus ", "{visibility:visible;opacity:1;}"], LinkIcon, ({
  isActive: i2
}) => i2 && Ne(["", "{visibility:visible;opacity:1;}"], LinkIcon), LinkIcon, LinkIcon);

// node_modules/@redocly/openapi-docs/lib-esm/components/common/mixins.js
init_styled_components_esm();
var deprecatedCss = Ne(["text-decoration:line-through;color:var(--schemas-property-deprecated-text-color);"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/common/styled.js
init_styled_components_esm();
init_src();
var Container = styled_components_esm_default.div.withConfig({
  displayName: "styled__Container",
  componentId: "sc-2g7t2v-0"
})(["display:flex;flex-direction:column;margin:var(--spacing-unit) var(--spacing-md) var(--spacing-sm);"]);
var HttpVerb = styled_components_esm_default(Tag).withConfig({
  displayName: "styled__HttpVerb",
  componentId: "sc-2g7t2v-1"
})(["text-transform:uppercase;background-color:unset;border:none;padding:0;margin:0;font-family:var(--font-family-monospaced);font-weight:var(--font-weight-semibold);font-size:var(--font-size-sm);line-height:var(--line-height-sm);align-self:flex-end;"]);
var MimeLabel = styled_components_esm_default.div.withConfig({
  displayName: "styled__MimeLabel",
  componentId: "sc-2g7t2v-2"
})(["background-color:var(--panel-samples-dropdown-bg-color);color:var(--panel-samples-text-color);font-family:inherit;margin-bottom:0;height:36px;padding:var(--docs-dropdown-padding);font-size:var(--docs-dropdown-font-size);border:var(--panel-samples-dropdown-border);border-radius:var(--border-radius-md);"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/common/CodeBlockPanel.js
init_styled_components_esm();
init_src();
var CodeBlockPanel = styled_components_esm_default(Panel).withConfig({
  displayName: "CodeBlockPanel",
  componentId: "sc-rf6i59-0"
})(["", "{padding:var(--spacing-sm) 0 0;}"], PanelBody);

// node_modules/@redocly/openapi-docs/lib-esm/components/common/Badges.js
init_styled_components_esm();
init_src();
import { Fragment as _Fragment, jsx as _jsx5, jsxs as _jsxs3 } from "react/jsx-runtime";
import { memo as memo3 } from "react";
function CustomBadgesComponent({
  badges: e2,
  children: o
}) {
  if (!e2)
    return _jsx5(_Fragment, {
      children: o
    });
  const r = e2.filter(({
    position: e3
  }) => "before" === e3), t = e2.filter(({
    position: e3
  }) => "after" === e3);
  return _jsxs3(_Fragment, {
    children: [r.map(({
      name: e3,
      color: o2
    }) => _jsx5(StyledBadge, {
      color: o2,
      children: e3
    }, e3)), o, t.map(({
      name: e3,
      color: o2
    }) => _jsx5(StyledBadge, {
      color: o2,
      children: e3
    }, e3))]
  });
}
var CustomBadges = memo3(CustomBadgesComponent);
var StyledBadge = styled_components_esm_default(Badge).withConfig({
  displayName: "Badges__StyledBadge",
  componentId: "sc-nqhkx3-0"
})(["margin-left:0;background-color:", ";", ";"], ({
  color: e2
}) => e2 || "var(--color-info-base)", ({
  deprecated: e2
}) => e2 && Ne(["color:var(--badge-deprecated-text-color);background-color:var(--badge-deprecated-bg-color);border-radius:var(--badge-deprecated-border-radius);"]));
var NavigationBadge = styled_components_esm_default(StyledBadge).withConfig({
  displayName: "Badges__NavigationBadge",
  componentId: "sc-nqhkx3-1"
})(["margin-left:0;font-size:var(--font-size-sm);line-height:var(--line-height-sm);padding:0 var(--spacing-xxs);max-width:80px;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/common/ExpandableExample/ExpandableExample.js
init_styled_components_esm();
init_src();
import { jsx as _jsx7, jsxs as _jsxs4 } from "react/jsx-runtime";
import { useMemo as useMemo4, useState as useState4 } from "react";

// node_modules/@redocly/openapi-docs/lib-esm/components/Markdown/Markdown.js
init_dist();
import { jsx as _jsx6, Fragment as _Fragment2 } from "react/jsx-runtime";
import React, { Fragment } from "react";

// node_modules/dompurify/dist/purify.es.js
function _typeof(obj) {
  "@babel/helpers - typeof";
  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof(obj);
}
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf(o, p);
}
function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e2) {
    return false;
  }
}
function _construct(Parent, args, Class) {
  if (_isNativeReflectConstruct()) {
    _construct = Reflect.construct;
  } else {
    _construct = function _construct2(Parent2, args2, Class2) {
      var a = [null];
      a.push.apply(a, args2);
      var Constructor = Function.bind.apply(Parent2, a);
      var instance = new Constructor();
      if (Class2)
        _setPrototypeOf(instance, Class2.prototype);
      return instance;
    };
  }
  return _construct.apply(null, arguments);
}
function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray(arr);
}
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray(o, minLen);
  var n2 = Object.prototype.toString.call(o).slice(8, -1);
  if (n2 === "Object" && o.constructor)
    n2 = o.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++)
    arr2[i2] = arr[i2];
  return arr2;
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
var hasOwnProperty = Object.hasOwnProperty;
var setPrototypeOf = Object.setPrototypeOf;
var isFrozen = Object.isFrozen;
var getPrototypeOf = Object.getPrototypeOf;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var freeze = Object.freeze;
var seal = Object.seal;
var create = Object.create;
var _ref = typeof Reflect !== "undefined" && Reflect;
var apply = _ref.apply;
var construct = _ref.construct;
if (!apply) {
  apply = function apply2(fun, thisValue, args) {
    return fun.apply(thisValue, args);
  };
}
if (!freeze) {
  freeze = function freeze2(x) {
    return x;
  };
}
if (!seal) {
  seal = function seal2(x) {
    return x;
  };
}
if (!construct) {
  construct = function construct2(Func, args) {
    return _construct(Func, _toConsumableArray(args));
  };
}
var arrayForEach = unapply(Array.prototype.forEach);
var arrayPop = unapply(Array.prototype.pop);
var arrayPush = unapply(Array.prototype.push);
var stringToLowerCase = unapply(String.prototype.toLowerCase);
var stringToString = unapply(String.prototype.toString);
var stringMatch = unapply(String.prototype.match);
var stringReplace = unapply(String.prototype.replace);
var stringIndexOf = unapply(String.prototype.indexOf);
var stringTrim = unapply(String.prototype.trim);
var regExpTest = unapply(RegExp.prototype.test);
var typeErrorCreate = unconstruct(TypeError);
function numberIsNaN(x) {
  return typeof x === "number" && isNaN(x);
}
function unapply(func) {
  return function(thisArg) {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    return apply(func, thisArg, args);
  };
}
function unconstruct(func) {
  return function() {
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }
    return construct(func, args);
  };
}
function addToSet(set, array, transformCaseFunc) {
  var _transformCaseFunc;
  transformCaseFunc = (_transformCaseFunc = transformCaseFunc) !== null && _transformCaseFunc !== void 0 ? _transformCaseFunc : stringToLowerCase;
  if (setPrototypeOf) {
    setPrototypeOf(set, null);
  }
  var l = array.length;
  while (l--) {
    var element = array[l];
    if (typeof element === "string") {
      var lcElement = transformCaseFunc(element);
      if (lcElement !== element) {
        if (!isFrozen(array)) {
          array[l] = lcElement;
        }
        element = lcElement;
      }
    }
    set[element] = true;
  }
  return set;
}
function clone(object) {
  var newObject = create(null);
  var property;
  for (property in object) {
    if (apply(hasOwnProperty, object, [property]) === true) {
      newObject[property] = object[property];
    }
  }
  return newObject;
}
function lookupGetter(object, prop) {
  while (object !== null) {
    var desc = getOwnPropertyDescriptor(object, prop);
    if (desc) {
      if (desc.get) {
        return unapply(desc.get);
      }
      if (typeof desc.value === "function") {
        return unapply(desc.value);
      }
    }
    object = getPrototypeOf(object);
  }
  function fallbackValue(element) {
    console.warn("fallback value for", element);
    return null;
  }
  return fallbackValue;
}
var html$1 = freeze(["a", "abbr", "acronym", "address", "area", "article", "aside", "audio", "b", "bdi", "bdo", "big", "blink", "blockquote", "body", "br", "button", "canvas", "caption", "center", "cite", "code", "col", "colgroup", "content", "data", "datalist", "dd", "decorator", "del", "details", "dfn", "dialog", "dir", "div", "dl", "dt", "element", "em", "fieldset", "figcaption", "figure", "font", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "img", "input", "ins", "kbd", "label", "legend", "li", "main", "map", "mark", "marquee", "menu", "menuitem", "meter", "nav", "nobr", "ol", "optgroup", "option", "output", "p", "picture", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "section", "select", "shadow", "small", "source", "spacer", "span", "strike", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "time", "tr", "track", "tt", "u", "ul", "var", "video", "wbr"]);
var svg$1 = freeze(["svg", "a", "altglyph", "altglyphdef", "altglyphitem", "animatecolor", "animatemotion", "animatetransform", "circle", "clippath", "defs", "desc", "ellipse", "filter", "font", "g", "glyph", "glyphref", "hkern", "image", "line", "lineargradient", "marker", "mask", "metadata", "mpath", "path", "pattern", "polygon", "polyline", "radialgradient", "rect", "stop", "style", "switch", "symbol", "text", "textpath", "title", "tref", "tspan", "view", "vkern"]);
var svgFilters = freeze(["feBlend", "feColorMatrix", "feComponentTransfer", "feComposite", "feConvolveMatrix", "feDiffuseLighting", "feDisplacementMap", "feDistantLight", "feFlood", "feFuncA", "feFuncB", "feFuncG", "feFuncR", "feGaussianBlur", "feImage", "feMerge", "feMergeNode", "feMorphology", "feOffset", "fePointLight", "feSpecularLighting", "feSpotLight", "feTile", "feTurbulence"]);
var svgDisallowed = freeze(["animate", "color-profile", "cursor", "discard", "fedropshadow", "font-face", "font-face-format", "font-face-name", "font-face-src", "font-face-uri", "foreignobject", "hatch", "hatchpath", "mesh", "meshgradient", "meshpatch", "meshrow", "missing-glyph", "script", "set", "solidcolor", "unknown", "use"]);
var mathMl$1 = freeze(["math", "menclose", "merror", "mfenced", "mfrac", "mglyph", "mi", "mlabeledtr", "mmultiscripts", "mn", "mo", "mover", "mpadded", "mphantom", "mroot", "mrow", "ms", "mspace", "msqrt", "mstyle", "msub", "msup", "msubsup", "mtable", "mtd", "mtext", "mtr", "munder", "munderover"]);
var mathMlDisallowed = freeze(["maction", "maligngroup", "malignmark", "mlongdiv", "mscarries", "mscarry", "msgroup", "mstack", "msline", "msrow", "semantics", "annotation", "annotation-xml", "mprescripts", "none"]);
var text = freeze(["#text"]);
var html = freeze(["accept", "action", "align", "alt", "autocapitalize", "autocomplete", "autopictureinpicture", "autoplay", "background", "bgcolor", "border", "capture", "cellpadding", "cellspacing", "checked", "cite", "class", "clear", "color", "cols", "colspan", "controls", "controlslist", "coords", "crossorigin", "datetime", "decoding", "default", "dir", "disabled", "disablepictureinpicture", "disableremoteplayback", "download", "draggable", "enctype", "enterkeyhint", "face", "for", "headers", "height", "hidden", "high", "href", "hreflang", "id", "inputmode", "integrity", "ismap", "kind", "label", "lang", "list", "loading", "loop", "low", "max", "maxlength", "media", "method", "min", "minlength", "multiple", "muted", "name", "nonce", "noshade", "novalidate", "nowrap", "open", "optimum", "pattern", "placeholder", "playsinline", "poster", "preload", "pubdate", "radiogroup", "readonly", "rel", "required", "rev", "reversed", "role", "rows", "rowspan", "spellcheck", "scope", "selected", "shape", "size", "sizes", "span", "srclang", "start", "src", "srcset", "step", "style", "summary", "tabindex", "title", "translate", "type", "usemap", "valign", "value", "width", "xmlns", "slot"]);
var svg = freeze(["accent-height", "accumulate", "additive", "alignment-baseline", "ascent", "attributename", "attributetype", "azimuth", "basefrequency", "baseline-shift", "begin", "bias", "by", "class", "clip", "clippathunits", "clip-path", "clip-rule", "color", "color-interpolation", "color-interpolation-filters", "color-profile", "color-rendering", "cx", "cy", "d", "dx", "dy", "diffuseconstant", "direction", "display", "divisor", "dur", "edgemode", "elevation", "end", "fill", "fill-opacity", "fill-rule", "filter", "filterunits", "flood-color", "flood-opacity", "font-family", "font-size", "font-size-adjust", "font-stretch", "font-style", "font-variant", "font-weight", "fx", "fy", "g1", "g2", "glyph-name", "glyphref", "gradientunits", "gradienttransform", "height", "href", "id", "image-rendering", "in", "in2", "k", "k1", "k2", "k3", "k4", "kerning", "keypoints", "keysplines", "keytimes", "lang", "lengthadjust", "letter-spacing", "kernelmatrix", "kernelunitlength", "lighting-color", "local", "marker-end", "marker-mid", "marker-start", "markerheight", "markerunits", "markerwidth", "maskcontentunits", "maskunits", "max", "mask", "media", "method", "mode", "min", "name", "numoctaves", "offset", "operator", "opacity", "order", "orient", "orientation", "origin", "overflow", "paint-order", "path", "pathlength", "patterncontentunits", "patterntransform", "patternunits", "points", "preservealpha", "preserveaspectratio", "primitiveunits", "r", "rx", "ry", "radius", "refx", "refy", "repeatcount", "repeatdur", "restart", "result", "rotate", "scale", "seed", "shape-rendering", "specularconstant", "specularexponent", "spreadmethod", "startoffset", "stddeviation", "stitchtiles", "stop-color", "stop-opacity", "stroke-dasharray", "stroke-dashoffset", "stroke-linecap", "stroke-linejoin", "stroke-miterlimit", "stroke-opacity", "stroke", "stroke-width", "style", "surfacescale", "systemlanguage", "tabindex", "targetx", "targety", "transform", "transform-origin", "text-anchor", "text-decoration", "text-rendering", "textlength", "type", "u1", "u2", "unicode", "values", "viewbox", "visibility", "version", "vert-adv-y", "vert-origin-x", "vert-origin-y", "width", "word-spacing", "wrap", "writing-mode", "xchannelselector", "ychannelselector", "x", "x1", "x2", "xmlns", "y", "y1", "y2", "z", "zoomandpan"]);
var mathMl = freeze(["accent", "accentunder", "align", "bevelled", "close", "columnsalign", "columnlines", "columnspan", "denomalign", "depth", "dir", "display", "displaystyle", "encoding", "fence", "frame", "height", "href", "id", "largeop", "length", "linethickness", "lspace", "lquote", "mathbackground", "mathcolor", "mathsize", "mathvariant", "maxsize", "minsize", "movablelimits", "notation", "numalign", "open", "rowalign", "rowlines", "rowspacing", "rowspan", "rspace", "rquote", "scriptlevel", "scriptminsize", "scriptsizemultiplier", "selection", "separator", "separators", "stretchy", "subscriptshift", "supscriptshift", "symmetric", "voffset", "width", "xmlns"]);
var xml = freeze(["xlink:href", "xml:id", "xlink:title", "xml:space", "xmlns:xlink"]);
var MUSTACHE_EXPR = seal(/\{\{[\w\W]*|[\w\W]*\}\}/gm);
var ERB_EXPR = seal(/<%[\w\W]*|[\w\W]*%>/gm);
var TMPLIT_EXPR = seal(/\${[\w\W]*}/gm);
var DATA_ATTR = seal(/^data-[\-\w.\u00B7-\uFFFF]/);
var ARIA_ATTR = seal(/^aria-[\-\w]+$/);
var IS_ALLOWED_URI = seal(
  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i
  // eslint-disable-line no-useless-escape
);
var IS_SCRIPT_OR_DATA = seal(/^(?:\w+script|data):/i);
var ATTR_WHITESPACE = seal(
  /[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g
  // eslint-disable-line no-control-regex
);
var DOCTYPE_NAME = seal(/^html$/i);
var CUSTOM_ELEMENT = seal(/^[a-z][.\w]*(-[.\w]+)+$/i);
var getGlobal = function getGlobal2() {
  return typeof window === "undefined" ? null : window;
};
var _createTrustedTypesPolicy = function _createTrustedTypesPolicy2(trustedTypes, document2) {
  if (_typeof(trustedTypes) !== "object" || typeof trustedTypes.createPolicy !== "function") {
    return null;
  }
  var suffix = null;
  var ATTR_NAME = "data-tt-policy-suffix";
  if (document2.currentScript && document2.currentScript.hasAttribute(ATTR_NAME)) {
    suffix = document2.currentScript.getAttribute(ATTR_NAME);
  }
  var policyName = "dompurify" + (suffix ? "#" + suffix : "");
  try {
    return trustedTypes.createPolicy(policyName, {
      createHTML: function createHTML(html2) {
        return html2;
      },
      createScriptURL: function createScriptURL(scriptUrl) {
        return scriptUrl;
      }
    });
  } catch (_) {
    console.warn("TrustedTypes policy " + policyName + " could not be created.");
    return null;
  }
};
function createDOMPurify() {
  var window2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : getGlobal();
  var DOMPurify = function DOMPurify2(root) {
    return createDOMPurify(root);
  };
  DOMPurify.version = "2.5.4";
  DOMPurify.removed = [];
  if (!window2 || !window2.document || window2.document.nodeType !== 9) {
    DOMPurify.isSupported = false;
    return DOMPurify;
  }
  var originalDocument = window2.document;
  var document2 = window2.document;
  var DocumentFragment = window2.DocumentFragment, HTMLTemplateElement = window2.HTMLTemplateElement, Node = window2.Node, Element2 = window2.Element, NodeFilter = window2.NodeFilter, _window$NamedNodeMap = window2.NamedNodeMap, NamedNodeMap = _window$NamedNodeMap === void 0 ? window2.NamedNodeMap || window2.MozNamedAttrMap : _window$NamedNodeMap, HTMLFormElement = window2.HTMLFormElement, DOMParser = window2.DOMParser, trustedTypes = window2.trustedTypes;
  var ElementPrototype = Element2.prototype;
  var cloneNode = lookupGetter(ElementPrototype, "cloneNode");
  var getNextSibling = lookupGetter(ElementPrototype, "nextSibling");
  var getChildNodes = lookupGetter(ElementPrototype, "childNodes");
  var getParentNode = lookupGetter(ElementPrototype, "parentNode");
  if (typeof HTMLTemplateElement === "function") {
    var template = document2.createElement("template");
    if (template.content && template.content.ownerDocument) {
      document2 = template.content.ownerDocument;
    }
  }
  var trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, originalDocument);
  var emptyHTML = trustedTypesPolicy ? trustedTypesPolicy.createHTML("") : "";
  var _document = document2, implementation = _document.implementation, createNodeIterator = _document.createNodeIterator, createDocumentFragment = _document.createDocumentFragment, getElementsByTagName = _document.getElementsByTagName;
  var importNode = originalDocument.importNode;
  var documentMode = {};
  try {
    documentMode = clone(document2).documentMode ? document2.documentMode : {};
  } catch (_) {
  }
  var hooks = {};
  DOMPurify.isSupported = typeof getParentNode === "function" && implementation && implementation.createHTMLDocument !== void 0 && documentMode !== 9;
  var MUSTACHE_EXPR$1 = MUSTACHE_EXPR, ERB_EXPR$1 = ERB_EXPR, TMPLIT_EXPR$1 = TMPLIT_EXPR, DATA_ATTR$1 = DATA_ATTR, ARIA_ATTR$1 = ARIA_ATTR, IS_SCRIPT_OR_DATA$1 = IS_SCRIPT_OR_DATA, ATTR_WHITESPACE$1 = ATTR_WHITESPACE, CUSTOM_ELEMENT$1 = CUSTOM_ELEMENT;
  var IS_ALLOWED_URI$1 = IS_ALLOWED_URI;
  var ALLOWED_TAGS = null;
  var DEFAULT_ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray(html$1), _toConsumableArray(svg$1), _toConsumableArray(svgFilters), _toConsumableArray(mathMl$1), _toConsumableArray(text)));
  var ALLOWED_ATTR = null;
  var DEFAULT_ALLOWED_ATTR = addToSet({}, [].concat(_toConsumableArray(html), _toConsumableArray(svg), _toConsumableArray(mathMl), _toConsumableArray(xml)));
  var CUSTOM_ELEMENT_HANDLING = Object.seal(Object.create(null, {
    tagNameCheck: {
      writable: true,
      configurable: false,
      enumerable: true,
      value: null
    },
    attributeNameCheck: {
      writable: true,
      configurable: false,
      enumerable: true,
      value: null
    },
    allowCustomizedBuiltInElements: {
      writable: true,
      configurable: false,
      enumerable: true,
      value: false
    }
  }));
  var FORBID_TAGS = null;
  var FORBID_ATTR = null;
  var ALLOW_ARIA_ATTR = true;
  var ALLOW_DATA_ATTR = true;
  var ALLOW_UNKNOWN_PROTOCOLS = false;
  var ALLOW_SELF_CLOSE_IN_ATTR = true;
  var SAFE_FOR_TEMPLATES = false;
  var SAFE_FOR_XML = true;
  var WHOLE_DOCUMENT = false;
  var SET_CONFIG = false;
  var FORCE_BODY = false;
  var RETURN_DOM = false;
  var RETURN_DOM_FRAGMENT = false;
  var RETURN_TRUSTED_TYPE = false;
  var SANITIZE_DOM = true;
  var SANITIZE_NAMED_PROPS = false;
  var SANITIZE_NAMED_PROPS_PREFIX = "user-content-";
  var KEEP_CONTENT = true;
  var IN_PLACE = false;
  var USE_PROFILES = {};
  var FORBID_CONTENTS = null;
  var DEFAULT_FORBID_CONTENTS = addToSet({}, ["annotation-xml", "audio", "colgroup", "desc", "foreignobject", "head", "iframe", "math", "mi", "mn", "mo", "ms", "mtext", "noembed", "noframes", "noscript", "plaintext", "script", "style", "svg", "template", "thead", "title", "video", "xmp"]);
  var DATA_URI_TAGS = null;
  var DEFAULT_DATA_URI_TAGS = addToSet({}, ["audio", "video", "img", "source", "image", "track"]);
  var URI_SAFE_ATTRIBUTES = null;
  var DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ["alt", "class", "for", "id", "label", "name", "pattern", "placeholder", "role", "summary", "title", "value", "style", "xmlns"]);
  var MATHML_NAMESPACE = "http://www.w3.org/1998/Math/MathML";
  var SVG_NAMESPACE = "http://www.w3.org/2000/svg";
  var HTML_NAMESPACE = "http://www.w3.org/1999/xhtml";
  var NAMESPACE = HTML_NAMESPACE;
  var IS_EMPTY_INPUT = false;
  var ALLOWED_NAMESPACES = null;
  var DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);
  var PARSER_MEDIA_TYPE;
  var SUPPORTED_PARSER_MEDIA_TYPES = ["application/xhtml+xml", "text/html"];
  var DEFAULT_PARSER_MEDIA_TYPE = "text/html";
  var transformCaseFunc;
  var CONFIG = null;
  var MAX_NESTING_DEPTH = 255;
  var formElement = document2.createElement("form");
  var isRegexOrFunction = function isRegexOrFunction2(testValue) {
    return testValue instanceof RegExp || testValue instanceof Function;
  };
  var _parseConfig = function _parseConfig2(cfg) {
    if (CONFIG && CONFIG === cfg) {
      return;
    }
    if (!cfg || _typeof(cfg) !== "object") {
      cfg = {};
    }
    cfg = clone(cfg);
    PARSER_MEDIA_TYPE = // eslint-disable-next-line unicorn/prefer-includes
    SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE : PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE;
    transformCaseFunc = PARSER_MEDIA_TYPE === "application/xhtml+xml" ? stringToString : stringToLowerCase;
    ALLOWED_TAGS = "ALLOWED_TAGS" in cfg ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;
    ALLOWED_ATTR = "ALLOWED_ATTR" in cfg ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;
    ALLOWED_NAMESPACES = "ALLOWED_NAMESPACES" in cfg ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;
    URI_SAFE_ATTRIBUTES = "ADD_URI_SAFE_ATTR" in cfg ? addToSet(
      clone(DEFAULT_URI_SAFE_ATTRIBUTES),
      // eslint-disable-line indent
      cfg.ADD_URI_SAFE_ATTR,
      // eslint-disable-line indent
      transformCaseFunc
      // eslint-disable-line indent
    ) : DEFAULT_URI_SAFE_ATTRIBUTES;
    DATA_URI_TAGS = "ADD_DATA_URI_TAGS" in cfg ? addToSet(
      clone(DEFAULT_DATA_URI_TAGS),
      // eslint-disable-line indent
      cfg.ADD_DATA_URI_TAGS,
      // eslint-disable-line indent
      transformCaseFunc
      // eslint-disable-line indent
    ) : DEFAULT_DATA_URI_TAGS;
    FORBID_CONTENTS = "FORBID_CONTENTS" in cfg ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;
    FORBID_TAGS = "FORBID_TAGS" in cfg ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};
    FORBID_ATTR = "FORBID_ATTR" in cfg ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};
    USE_PROFILES = "USE_PROFILES" in cfg ? cfg.USE_PROFILES : false;
    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false;
    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false;
    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false;
    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false;
    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false;
    SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false;
    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false;
    RETURN_DOM = cfg.RETURN_DOM || false;
    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false;
    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false;
    FORCE_BODY = cfg.FORCE_BODY || false;
    SANITIZE_DOM = cfg.SANITIZE_DOM !== false;
    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false;
    KEEP_CONTENT = cfg.KEEP_CONTENT !== false;
    IN_PLACE = cfg.IN_PLACE || false;
    IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI$1;
    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;
    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};
    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {
      CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;
    }
    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {
      CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;
    }
    if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === "boolean") {
      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;
    }
    if (SAFE_FOR_TEMPLATES) {
      ALLOW_DATA_ATTR = false;
    }
    if (RETURN_DOM_FRAGMENT) {
      RETURN_DOM = true;
    }
    if (USE_PROFILES) {
      ALLOWED_TAGS = addToSet({}, _toConsumableArray(text));
      ALLOWED_ATTR = [];
      if (USE_PROFILES.html === true) {
        addToSet(ALLOWED_TAGS, html$1);
        addToSet(ALLOWED_ATTR, html);
      }
      if (USE_PROFILES.svg === true) {
        addToSet(ALLOWED_TAGS, svg$1);
        addToSet(ALLOWED_ATTR, svg);
        addToSet(ALLOWED_ATTR, xml);
      }
      if (USE_PROFILES.svgFilters === true) {
        addToSet(ALLOWED_TAGS, svgFilters);
        addToSet(ALLOWED_ATTR, svg);
        addToSet(ALLOWED_ATTR, xml);
      }
      if (USE_PROFILES.mathMl === true) {
        addToSet(ALLOWED_TAGS, mathMl$1);
        addToSet(ALLOWED_ATTR, mathMl);
        addToSet(ALLOWED_ATTR, xml);
      }
    }
    if (cfg.ADD_TAGS) {
      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {
        ALLOWED_TAGS = clone(ALLOWED_TAGS);
      }
      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);
    }
    if (cfg.ADD_ATTR) {
      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {
        ALLOWED_ATTR = clone(ALLOWED_ATTR);
      }
      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);
    }
    if (cfg.ADD_URI_SAFE_ATTR) {
      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);
    }
    if (cfg.FORBID_CONTENTS) {
      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {
        FORBID_CONTENTS = clone(FORBID_CONTENTS);
      }
      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);
    }
    if (KEEP_CONTENT) {
      ALLOWED_TAGS["#text"] = true;
    }
    if (WHOLE_DOCUMENT) {
      addToSet(ALLOWED_TAGS, ["html", "head", "body"]);
    }
    if (ALLOWED_TAGS.table) {
      addToSet(ALLOWED_TAGS, ["tbody"]);
      delete FORBID_TAGS.tbody;
    }
    if (freeze) {
      freeze(cfg);
    }
    CONFIG = cfg;
  };
  var MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ["mi", "mo", "mn", "ms", "mtext"]);
  var HTML_INTEGRATION_POINTS = addToSet({}, ["foreignobject", "annotation-xml"]);
  var COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ["title", "style", "font", "a", "script"]);
  var ALL_SVG_TAGS = addToSet({}, svg$1);
  addToSet(ALL_SVG_TAGS, svgFilters);
  addToSet(ALL_SVG_TAGS, svgDisallowed);
  var ALL_MATHML_TAGS = addToSet({}, mathMl$1);
  addToSet(ALL_MATHML_TAGS, mathMlDisallowed);
  var _checkValidNamespace = function _checkValidNamespace2(element) {
    var parent = getParentNode(element);
    if (!parent || !parent.tagName) {
      parent = {
        namespaceURI: NAMESPACE,
        tagName: "template"
      };
    }
    var tagName = stringToLowerCase(element.tagName);
    var parentTagName = stringToLowerCase(parent.tagName);
    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {
      return false;
    }
    if (element.namespaceURI === SVG_NAMESPACE) {
      if (parent.namespaceURI === HTML_NAMESPACE) {
        return tagName === "svg";
      }
      if (parent.namespaceURI === MATHML_NAMESPACE) {
        return tagName === "svg" && (parentTagName === "annotation-xml" || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);
      }
      return Boolean(ALL_SVG_TAGS[tagName]);
    }
    if (element.namespaceURI === MATHML_NAMESPACE) {
      if (parent.namespaceURI === HTML_NAMESPACE) {
        return tagName === "math";
      }
      if (parent.namespaceURI === SVG_NAMESPACE) {
        return tagName === "math" && HTML_INTEGRATION_POINTS[parentTagName];
      }
      return Boolean(ALL_MATHML_TAGS[tagName]);
    }
    if (element.namespaceURI === HTML_NAMESPACE) {
      if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {
        return false;
      }
      if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {
        return false;
      }
      return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);
    }
    if (PARSER_MEDIA_TYPE === "application/xhtml+xml" && ALLOWED_NAMESPACES[element.namespaceURI]) {
      return true;
    }
    return false;
  };
  var _forceRemove = function _forceRemove2(node) {
    arrayPush(DOMPurify.removed, {
      element: node
    });
    try {
      node.parentNode.removeChild(node);
    } catch (_) {
      try {
        node.outerHTML = emptyHTML;
      } catch (_2) {
        node.remove();
      }
    }
  };
  var _removeAttribute = function _removeAttribute2(name, node) {
    try {
      arrayPush(DOMPurify.removed, {
        attribute: node.getAttributeNode(name),
        from: node
      });
    } catch (_) {
      arrayPush(DOMPurify.removed, {
        attribute: null,
        from: node
      });
    }
    node.removeAttribute(name);
    if (name === "is" && !ALLOWED_ATTR[name]) {
      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {
        try {
          _forceRemove(node);
        } catch (_) {
        }
      } else {
        try {
          node.setAttribute(name, "");
        } catch (_) {
        }
      }
    }
  };
  var _initDocument = function _initDocument2(dirty) {
    var doc;
    var leadingWhitespace;
    if (FORCE_BODY) {
      dirty = "<remove></remove>" + dirty;
    } else {
      var matches = stringMatch(dirty, /^[\r\n\t ]+/);
      leadingWhitespace = matches && matches[0];
    }
    if (PARSER_MEDIA_TYPE === "application/xhtml+xml" && NAMESPACE === HTML_NAMESPACE) {
      dirty = '<html xmlns="http://www.w3.org/1999/xhtml"><head></head><body>' + dirty + "</body></html>";
    }
    var dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;
    if (NAMESPACE === HTML_NAMESPACE) {
      try {
        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);
      } catch (_) {
      }
    }
    if (!doc || !doc.documentElement) {
      doc = implementation.createDocument(NAMESPACE, "template", null);
      try {
        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;
      } catch (_) {
      }
    }
    var body = doc.body || doc.documentElement;
    if (dirty && leadingWhitespace) {
      body.insertBefore(document2.createTextNode(leadingWhitespace), body.childNodes[0] || null);
    }
    if (NAMESPACE === HTML_NAMESPACE) {
      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? "html" : "body")[0];
    }
    return WHOLE_DOCUMENT ? doc.documentElement : body;
  };
  var _createIterator = function _createIterator2(root) {
    return createNodeIterator.call(
      root.ownerDocument || root,
      root,
      // eslint-disable-next-line no-bitwise
      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION,
      null,
      false
    );
  };
  var _isClobbered = function _isClobbered2(elm) {
    return elm instanceof HTMLFormElement && (typeof elm.__depth !== "undefined" && typeof elm.__depth !== "number" || typeof elm.__removalCount !== "undefined" && typeof elm.__removalCount !== "number" || typeof elm.nodeName !== "string" || typeof elm.textContent !== "string" || typeof elm.removeChild !== "function" || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== "function" || typeof elm.setAttribute !== "function" || typeof elm.namespaceURI !== "string" || typeof elm.insertBefore !== "function" || typeof elm.hasChildNodes !== "function");
  };
  var _isNode = function _isNode2(object) {
    return _typeof(Node) === "object" ? object instanceof Node : object && _typeof(object) === "object" && typeof object.nodeType === "number" && typeof object.nodeName === "string";
  };
  var _executeHook = function _executeHook2(entryPoint, currentNode, data) {
    if (!hooks[entryPoint]) {
      return;
    }
    arrayForEach(hooks[entryPoint], function(hook) {
      hook.call(DOMPurify, currentNode, data, CONFIG);
    });
  };
  var _sanitizeElements = function _sanitizeElements2(currentNode) {
    var content;
    _executeHook("beforeSanitizeElements", currentNode, null);
    if (_isClobbered(currentNode)) {
      _forceRemove(currentNode);
      return true;
    }
    if (regExpTest(/[\u0080-\uFFFF]/, currentNode.nodeName)) {
      _forceRemove(currentNode);
      return true;
    }
    var tagName = transformCaseFunc(currentNode.nodeName);
    _executeHook("uponSanitizeElement", currentNode, {
      tagName,
      allowedTags: ALLOWED_TAGS
    });
    if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && (!_isNode(currentNode.content) || !_isNode(currentNode.content.firstElementChild)) && regExpTest(/<[/\w]/g, currentNode.innerHTML) && regExpTest(/<[/\w]/g, currentNode.textContent)) {
      _forceRemove(currentNode);
      return true;
    }
    if (tagName === "select" && regExpTest(/<template/i, currentNode.innerHTML)) {
      _forceRemove(currentNode);
      return true;
    }
    if (currentNode.nodeType === 7) {
      _forceRemove(currentNode);
      return true;
    }
    if (SAFE_FOR_XML && currentNode.nodeType === 8 && regExpTest(/<[/\w]/g, currentNode.data)) {
      _forceRemove(currentNode);
      return true;
    }
    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {
      if (!FORBID_TAGS[tagName] && _basicCustomElementTest(tagName)) {
        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName))
          return false;
        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName))
          return false;
      }
      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {
        var parentNode = getParentNode(currentNode) || currentNode.parentNode;
        var childNodes = getChildNodes(currentNode) || currentNode.childNodes;
        if (childNodes && parentNode) {
          var childCount = childNodes.length;
          for (var i2 = childCount - 1; i2 >= 0; --i2) {
            var childClone = cloneNode(childNodes[i2], true);
            childClone.__removalCount = (currentNode.__removalCount || 0) + 1;
            parentNode.insertBefore(childClone, getNextSibling(currentNode));
          }
        }
      }
      _forceRemove(currentNode);
      return true;
    }
    if (currentNode instanceof Element2 && !_checkValidNamespace(currentNode)) {
      _forceRemove(currentNode);
      return true;
    }
    if ((tagName === "noscript" || tagName === "noembed" || tagName === "noframes") && regExpTest(/<\/no(script|embed|frames)/i, currentNode.innerHTML)) {
      _forceRemove(currentNode);
      return true;
    }
    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {
      content = currentNode.textContent;
      content = stringReplace(content, MUSTACHE_EXPR$1, " ");
      content = stringReplace(content, ERB_EXPR$1, " ");
      content = stringReplace(content, TMPLIT_EXPR$1, " ");
      if (currentNode.textContent !== content) {
        arrayPush(DOMPurify.removed, {
          element: currentNode.cloneNode()
        });
        currentNode.textContent = content;
      }
    }
    _executeHook("afterSanitizeElements", currentNode, null);
    return false;
  };
  var _isValidAttribute = function _isValidAttribute2(lcTag, lcName, value) {
    if (SANITIZE_DOM && (lcName === "id" || lcName === "name") && (value in document2 || value in formElement || value === "__depth" || value === "__removalCount")) {
      return false;
    }
    if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR$1, lcName))
      ;
    else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR$1, lcName))
      ;
    else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {
      if (
        // First condition does a very basic check if a) it's basically a valid custom element tagname AND
        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck
        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck
        _basicCustomElementTest(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) || // Alternative, second condition checks if it's an `is`-attribute, AND
        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck
        lcName === "is" && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))
      )
        ;
      else {
        return false;
      }
    } else if (URI_SAFE_ATTRIBUTES[lcName])
      ;
    else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE$1, "")))
      ;
    else if ((lcName === "src" || lcName === "xlink:href" || lcName === "href") && lcTag !== "script" && stringIndexOf(value, "data:") === 0 && DATA_URI_TAGS[lcTag])
      ;
    else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA$1, stringReplace(value, ATTR_WHITESPACE$1, "")))
      ;
    else if (value) {
      return false;
    } else
      ;
    return true;
  };
  var _basicCustomElementTest = function _basicCustomElementTest2(tagName) {
    return tagName !== "annotation-xml" && stringMatch(tagName, CUSTOM_ELEMENT$1);
  };
  var _sanitizeAttributes = function _sanitizeAttributes2(currentNode) {
    var attr;
    var value;
    var lcName;
    var l;
    _executeHook("beforeSanitizeAttributes", currentNode, null);
    var attributes = currentNode.attributes;
    if (!attributes) {
      return;
    }
    var hookEvent = {
      attrName: "",
      attrValue: "",
      keepAttr: true,
      allowedAttributes: ALLOWED_ATTR
    };
    l = attributes.length;
    while (l--) {
      attr = attributes[l];
      var _attr = attr, name = _attr.name, namespaceURI = _attr.namespaceURI;
      value = name === "value" ? attr.value : stringTrim(attr.value);
      lcName = transformCaseFunc(name);
      hookEvent.attrName = lcName;
      hookEvent.attrValue = value;
      hookEvent.keepAttr = true;
      hookEvent.forceKeepAttr = void 0;
      _executeHook("uponSanitizeAttribute", currentNode, hookEvent);
      value = hookEvent.attrValue;
      if (hookEvent.forceKeepAttr) {
        continue;
      }
      _removeAttribute(name, currentNode);
      if (!hookEvent.keepAttr) {
        continue;
      }
      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\/>/i, value)) {
        _removeAttribute(name, currentNode);
        continue;
      }
      if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\/(style|title)/i, value)) {
        _removeAttribute(name, currentNode);
        continue;
      }
      if (SAFE_FOR_TEMPLATES) {
        value = stringReplace(value, MUSTACHE_EXPR$1, " ");
        value = stringReplace(value, ERB_EXPR$1, " ");
        value = stringReplace(value, TMPLIT_EXPR$1, " ");
      }
      var lcTag = transformCaseFunc(currentNode.nodeName);
      if (!_isValidAttribute(lcTag, lcName, value)) {
        continue;
      }
      if (SANITIZE_NAMED_PROPS && (lcName === "id" || lcName === "name")) {
        _removeAttribute(name, currentNode);
        value = SANITIZE_NAMED_PROPS_PREFIX + value;
      }
      if (trustedTypesPolicy && _typeof(trustedTypes) === "object" && typeof trustedTypes.getAttributeType === "function") {
        if (namespaceURI)
          ;
        else {
          switch (trustedTypes.getAttributeType(lcTag, lcName)) {
            case "TrustedHTML": {
              value = trustedTypesPolicy.createHTML(value);
              break;
            }
            case "TrustedScriptURL": {
              value = trustedTypesPolicy.createScriptURL(value);
              break;
            }
          }
        }
      }
      try {
        if (namespaceURI) {
          currentNode.setAttributeNS(namespaceURI, name, value);
        } else {
          currentNode.setAttribute(name, value);
        }
        if (_isClobbered(currentNode)) {
          _forceRemove(currentNode);
        } else {
          arrayPop(DOMPurify.removed);
        }
      } catch (_) {
      }
    }
    _executeHook("afterSanitizeAttributes", currentNode, null);
  };
  var _sanitizeShadowDOM = function _sanitizeShadowDOM2(fragment) {
    var shadowNode;
    var shadowIterator = _createIterator(fragment);
    _executeHook("beforeSanitizeShadowDOM", fragment, null);
    while (shadowNode = shadowIterator.nextNode()) {
      _executeHook("uponSanitizeShadowNode", shadowNode, null);
      if (_sanitizeElements(shadowNode)) {
        continue;
      }
      var parentNode = getParentNode(shadowNode);
      if (shadowNode.nodeType === 1) {
        if (parentNode && parentNode.__depth) {
          shadowNode.__depth = (shadowNode.__removalCount || 0) + parentNode.__depth + 1;
        } else {
          shadowNode.__depth = 1;
        }
      }
      if (shadowNode.__depth >= MAX_NESTING_DEPTH || numberIsNaN(shadowNode.__depth)) {
        _forceRemove(shadowNode);
      }
      if (shadowNode.content instanceof DocumentFragment) {
        shadowNode.content.__depth = shadowNode.__depth;
        _sanitizeShadowDOM2(shadowNode.content);
      }
      _sanitizeAttributes(shadowNode);
    }
    _executeHook("afterSanitizeShadowDOM", fragment, null);
  };
  DOMPurify.sanitize = function(dirty) {
    var cfg = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var body;
    var importedNode;
    var currentNode;
    var oldNode;
    var returnNode;
    IS_EMPTY_INPUT = !dirty;
    if (IS_EMPTY_INPUT) {
      dirty = "<!-->";
    }
    if (typeof dirty !== "string" && !_isNode(dirty)) {
      if (typeof dirty.toString === "function") {
        dirty = dirty.toString();
        if (typeof dirty !== "string") {
          throw typeErrorCreate("dirty is not a string, aborting");
        }
      } else {
        throw typeErrorCreate("toString is not a function");
      }
    }
    if (!DOMPurify.isSupported) {
      if (_typeof(window2.toStaticHTML) === "object" || typeof window2.toStaticHTML === "function") {
        if (typeof dirty === "string") {
          return window2.toStaticHTML(dirty);
        }
        if (_isNode(dirty)) {
          return window2.toStaticHTML(dirty.outerHTML);
        }
      }
      return dirty;
    }
    if (!SET_CONFIG) {
      _parseConfig(cfg);
    }
    DOMPurify.removed = [];
    if (typeof dirty === "string") {
      IN_PLACE = false;
    }
    if (IN_PLACE) {
      if (dirty.nodeName) {
        var tagName = transformCaseFunc(dirty.nodeName);
        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {
          throw typeErrorCreate("root node is forbidden and cannot be sanitized in-place");
        }
      }
    } else if (dirty instanceof Node) {
      body = _initDocument("<!---->");
      importedNode = body.ownerDocument.importNode(dirty, true);
      if (importedNode.nodeType === 1 && importedNode.nodeName === "BODY") {
        body = importedNode;
      } else if (importedNode.nodeName === "HTML") {
        body = importedNode;
      } else {
        body.appendChild(importedNode);
      }
    } else {
      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT && // eslint-disable-next-line unicorn/prefer-includes
      dirty.indexOf("<") === -1) {
        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;
      }
      body = _initDocument(dirty);
      if (!body) {
        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : "";
      }
    }
    if (body && FORCE_BODY) {
      _forceRemove(body.firstChild);
    }
    var nodeIterator = _createIterator(IN_PLACE ? dirty : body);
    while (currentNode = nodeIterator.nextNode()) {
      if (currentNode.nodeType === 3 && currentNode === oldNode) {
        continue;
      }
      if (_sanitizeElements(currentNode)) {
        continue;
      }
      var parentNode = getParentNode(currentNode);
      if (currentNode.nodeType === 1) {
        if (parentNode && parentNode.__depth) {
          currentNode.__depth = (currentNode.__removalCount || 0) + parentNode.__depth + 1;
        } else {
          currentNode.__depth = 1;
        }
      }
      if (currentNode.__depth >= MAX_NESTING_DEPTH || numberIsNaN(currentNode.__depth)) {
        _forceRemove(currentNode);
      }
      if (currentNode.content instanceof DocumentFragment) {
        currentNode.content.__depth = currentNode.__depth;
        _sanitizeShadowDOM(currentNode.content);
      }
      _sanitizeAttributes(currentNode);
      oldNode = currentNode;
    }
    oldNode = null;
    if (IN_PLACE) {
      return dirty;
    }
    if (RETURN_DOM) {
      if (RETURN_DOM_FRAGMENT) {
        returnNode = createDocumentFragment.call(body.ownerDocument);
        while (body.firstChild) {
          returnNode.appendChild(body.firstChild);
        }
      } else {
        returnNode = body;
      }
      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmod) {
        returnNode = importNode.call(originalDocument, returnNode, true);
      }
      return returnNode;
    }
    var serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;
    if (WHOLE_DOCUMENT && ALLOWED_TAGS["!doctype"] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {
      serializedHTML = "<!DOCTYPE " + body.ownerDocument.doctype.name + ">\n" + serializedHTML;
    }
    if (SAFE_FOR_TEMPLATES) {
      serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR$1, " ");
      serializedHTML = stringReplace(serializedHTML, ERB_EXPR$1, " ");
      serializedHTML = stringReplace(serializedHTML, TMPLIT_EXPR$1, " ");
    }
    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;
  };
  DOMPurify.setConfig = function(cfg) {
    _parseConfig(cfg);
    SET_CONFIG = true;
  };
  DOMPurify.clearConfig = function() {
    CONFIG = null;
    SET_CONFIG = false;
  };
  DOMPurify.isValidAttribute = function(tag, attr, value) {
    if (!CONFIG) {
      _parseConfig({});
    }
    var lcTag = transformCaseFunc(tag);
    var lcName = transformCaseFunc(attr);
    return _isValidAttribute(lcTag, lcName, value);
  };
  DOMPurify.addHook = function(entryPoint, hookFunction) {
    if (typeof hookFunction !== "function") {
      return;
    }
    hooks[entryPoint] = hooks[entryPoint] || [];
    arrayPush(hooks[entryPoint], hookFunction);
  };
  DOMPurify.removeHook = function(entryPoint) {
    if (hooks[entryPoint]) {
      return arrayPop(hooks[entryPoint]);
    }
  };
  DOMPurify.removeHooks = function(entryPoint) {
    if (hooks[entryPoint]) {
      hooks[entryPoint] = [];
    }
  };
  DOMPurify.removeAllHooks = function() {
    hooks = {};
  };
  return DOMPurify;
}
var purify = createDOMPurify();

// node_modules/@redocly/openapi-docs/lib-esm/components/Markdown/Markdown.js
init_src();
var __rest4 = function(r, o) {
  var t = {};
  for (var n2 in r)
    Object.prototype.hasOwnProperty.call(r, n2) && o.indexOf(n2) < 0 && (t[n2] = r[n2]);
  if (null != r && "function" == typeof Object.getOwnPropertySymbols) {
    var e2 = 0;
    for (n2 = Object.getOwnPropertySymbols(r); e2 < n2.length; e2++)
      o.indexOf(n2[e2]) < 0 && Object.prototype.propertyIsEnumerable.call(r, n2[e2]) && (t[n2[e2]] = r[n2[e2]]);
  }
  return t;
};
var TAGS_NOT_TO_WRAP = ["OpenApiResponse", "OpenApiRequestBody"];
var Markdown2 = (r) => {
  var o, t, n2, e2, i2, s, a, l, d, { source: m, ast: u, htmlWrap: p } = r, c = __rest4(r, ["source", "ast", "htmlWrap"]);
  const v = useAtomValue(globalOptionsAtom);
  if (!m && !u)
    return null;
  const f = (null == v ? void 0 : v.markdocOptions) && { tags: null === (o = v.markdocOptions) || void 0 === o ? void 0 : o.tags, nodes: null === (t = v.markdocOptions) || void 0 === t ? void 0 : t.nodes, partials: null === (n2 = v.markdocOptions) || void 0 === n2 ? void 0 : n2.partials, variables: null === (e2 = v.markdocOptions) || void 0 === e2 ? void 0 : e2.variables, functions: null === (i2 = v.markdocOptions) || void 0 === i2 ? void 0 : i2.functions }, O = (null == v ? void 0 : v.markdocOptions) && { components: null === (s = v.markdocOptions) || void 0 === s ? void 0 : s.components };
  let y;
  if (m)
    if (isString(m)) {
      const r2 = (null === (a = null == v ? void 0 : v.unstable_hooks) || void 0 === a ? void 0 : a.sanitize) ? null === (d = null === (l = v.unstable_hooks) || void 0 === l ? void 0 : l.sanitize) || void 0 === d ? void 0 : d.call(l, m) : (null == v ? void 0 : v.sanitize) ? purify.sanitize(m) : m, o2 = parse3(r2);
      y = transform2(o2, f);
    } else {
      const r2 = ast_default.fromJSON("object" == typeof m.result ? JSON.stringify(m.result) : m.result);
      y = (Array.isArray(r2), transform2(r2, f));
    }
  else
    u && (y = transform2(u, f));
  const _ = (r2) => {
    const o2 = renderers_default.react(r2, React, O);
    return _jsx6(Markdown, Object.assign({}, c, { children: o2, as: "div" }));
  };
  if (!p)
    return _(y);
  const b = (r2) => {
    var o2;
    return false !== (null === (o2 = r2.attributes) || void 0 === o2 ? void 0 : o2.htmlWrap) && !TAGS_NOT_TO_WRAP.includes(null == r2 ? void 0 : r2.name);
  };
  return y = Array.isArray(y) ? y : y.children, _jsx6(_Fragment2, { children: y.map((r2, o2) => {
    var t2, n3, e3;
    return _jsx6(Fragment, { children: (n3 = b(r2), e3 = r2, n3 ? p(_(e3)) : _(e3)) }, (null === (t2 = null == r2 ? void 0 : r2.attributes) || void 0 === t2 ? void 0 : t2.id) || o2);
  }) });
};

// node_modules/@redocly/openapi-docs/lib-esm/components/common/Fields/fields.js
init_styled_components_esm();
init_src();
var FieldLabel = styled_components_esm_default.span.withConfig({
  displayName: "fields__FieldLabel",
  componentId: "sc-17czdyw-0"
})(["vertical-align:middle;line-height:var(--schema-labels-line-height);font-size:var(--schema-property-labels-font-size);color:var(--schema-labels--text-color);"]);
var TypePrefix = styled_components_esm_default(FieldLabel).withConfig({
  displayName: "fields__TypePrefix",
  componentId: "sc-17czdyw-1"
})(["color:var(--schema-type-text-color);"]);
var TypeName = styled_components_esm_default(FieldLabel).withConfig({
  displayName: "fields__TypeName",
  componentId: "sc-17czdyw-2"
})(["color:var(--schema-type-text-color);"]);
var TypeTitle = styled_components_esm_default(FieldLabel).withConfig({
  displayName: "fields__TypeTitle",
  componentId: "sc-17czdyw-3"
})(["color:var(--schema-type-title-text-color);word-break:break-word;"]);
var PropertyLabel = styled_components_esm_default(FieldLabel.withComponent("div")).withConfig({
  displayName: "fields__PropertyLabel",
  componentId: "sc-17czdyw-4"
})(["color:var(--text-color-secondary);font-size:var(--schema-labels-font-size);line-height:var(--schema-labels-line-height);font-weight:normal;display:block;"]);
var RequiredLabel = styled_components_esm_default(FieldLabel).withConfig({
  displayName: "fields__RequiredLabel",
  componentId: "sc-17czdyw-5"
})(["color:var(--schema-property-required-label-text-color);font-size:var(--font-size-base);line-height:var(--line-height-base);"]);
var AdditionalPropertiesLabel = styled_components_esm_default(PropertyLabel).withConfig({
  displayName: "fields__AdditionalPropertiesLabel",
  componentId: "sc-17czdyw-6"
})(["color:var(--schema-property-additional-label-text-color);"]);
var Tag3 = styled_components_esm_default.span.attrs(() => ({
  className: "tag-grey"
})).withConfig({
  displayName: "fields__Tag",
  componentId: "sc-17czdyw-7"
})(["background:var(--tag-bg-color);padding:0 var(--spacing-xxs);font-family:var(--font-family-monospaced);font-size:var(--font-size-sm);line-height:var(--line-height-sm);border-radius:var(--border-radius);color:var(--text-color-secondary);display:inline-flex;word-break:var(--code-word-break);"]);
var AccessLabel = styled_components_esm_default(Tag3).withConfig({
  displayName: "fields__AccessLabel",
  componentId: "sc-17czdyw-8"
})(["color:var(--schema-property-access-label-text-color);background-color:var(--bg-color);border:1px solid var(--border-color-secondary);"]);
var FieldValueLabel = styled_components_esm_default(Tag3).withConfig({
  displayName: "fields__FieldValueLabel",
  componentId: "sc-17czdyw-9"
})(["background-color:var(--schema-inline-bg-color);border-radius:var(--border-radius);border:var(--schema-inline-border);padding:0 var(--spacing-unit);"]);
var RecursiveLabel = styled_components_esm_default(Tag3).withConfig({
  displayName: "fields__RecursiveLabel",
  componentId: "sc-17czdyw-10"
})(["background-color:var(--schema-recursive-bg-color);border-color:var(--schema-recursive-border-color);color:var(--schema-recursive-text-color);padding:0 var(--spacing-xs);"]);
var EnumValue = styled_components_esm_default(FieldValueLabel).withConfig({
  displayName: "fields__EnumValue",
  componentId: "sc-17czdyw-11"
})(["background-color:var(--schema-enum-bg-color);border-color:var(--schema-enum-border-color);color:var(--schema-enum-text-color);"]);
var DefaultValue = styled_components_esm_default(Tag3).withConfig({
  displayName: "fields__DefaultValue",
  componentId: "sc-17czdyw-12"
})(["background-color:var(--schema-default-bg-color);border-color:var(--schema-default-border-color);color:var(--schema-default-text-color);"]);
var ExampleValue = styled_components_esm_default(Tag3).withConfig({
  displayName: "fields__ExampleValue",
  componentId: "sc-17czdyw-13"
})(["background-color:var(--schema-example-bg-color);border-color:var(--schema-example-border-color);color:var(--schema-example-text-color);word-break:var(--code-word-break);& + &{margin-left:0;}display:inline-flex;white-space:pre-wrap;overflow-wrap:anywhere;& p,p:only-of-type{font-size:var(--schema-inline-code-font-size);font-family:var(--schema-inline-code-font-family);margin:0;}"]);
var ExtensionValue = styled_components_esm_default(ExampleValue).withConfig({
  displayName: "fields__ExtensionValue",
  componentId: "sc-17czdyw-14"
})([""]);
var ConstraintItem = styled_components_esm_default(FieldValueLabel).withConfig({
  displayName: "fields__ConstraintItem",
  componentId: "sc-17czdyw-15"
})(["background-color:var(--schema-constraint-bg-color);border-color:var(--schema-constraint-border-color);color:var(--schema-constraint-text-color);word-break:var(--code-word-break);margin:0 var(--spacing-unit);& + &{margin-left:0;}"]);
var ToggleButton = styled_components_esm_default(Button).attrs(() => ({
  variant: "link",
  size: "small"
})).withConfig({
  displayName: "fields__ToggleButton",
  componentId: "sc-17czdyw-16"
})(["padding:0;font-size:var(--font-size-sm);line-height:var(--line-height-sm);"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/common/Fields/fields-layout.js
init_styled_components_esm();
init_src();
var PropertiesTableCaption = styled_components_esm_default.caption.withConfig({
  displayName: "fields-layout__PropertiesTableCaption",
  componentId: "sc-1ko5l5b-0"
})(["text-align:right;font-size:0.9em;font-weight:normal;color:var(--text-color-secondary);"]);
var repeatingGradient = Ne(["repeating-linear-gradient(0deg,var(--schemas-lines-color),var(--schemas-lines-color) 3px,transparent 3px,transparent 5px,var(--schemas-lines-color) 5px);"]);
var PropertyCell = styled_components_esm_default.td.withConfig({
  displayName: "fields-layout__PropertyCell",
  componentId: "sc-1ko5l5b-1"
})(["box-sizing:border-box;position:relative;background-image:", ";background-repeat:no-repeat;background-size:1px 100%;display:block;overflow:hidden;padding:0 20px;margin-bottom:2px;@media screen and (min-width:", "){display:table-cell;overflow:initial;padding:10px;margin-bottom:0;}tr:first-of-type > &{background-image:", ";background-position:0 10px;padding-top:0;}tr.last > &{background-image:", ";padding-bottom:0;background-size:0.9px 100%;@media screen and (min-width:", "){background-size:0.9px 22px;}}tr.last + tr > &{background:none;}tr.last:first-child > &{background-image:", ";background-size:0.9px 100%;background-position:0 20px;@media screen and (min-width:", "){background-size:0.9px 22px;background-position:0 0;}}"], repeatingGradient, breakpoints.small, repeatingGradient, repeatingGradient, breakpoints.small, repeatingGradient, breakpoints.small);
var PropertyCellWithInner = styled_components_esm_default(PropertyCell).withConfig({
  displayName: "fields-layout__PropertyCellWithInner",
  componentId: "sc-1ko5l5b-2"
})(["padding:0;"]);
var PropertyNameCell = styled_components_esm_default(PropertyCell).withConfig({
  displayName: "fields-layout__PropertyNameCell",
  componentId: "sc-1ko5l5b-3"
})(["vertical-align:top;line-height:23px;white-space:nowrap;font-size:14px;font-family:var(--field-name-font-family);&.deprecated{", ";}", " ", ";.field-name{display:inline-flex;align-items:center;}"], deprecatedCss, ({
  kind: e2
}) => "patternProperties" === e2 && Ne(["span.field-name{white-space:break-spaces;text-align:left;display:inline-table;line-height:1.5;}"]), () => {
  const e2 = (r = "--schema-field-name-word-break", "undefined" != typeof document ? getComputedStyle(document.documentElement).getPropertyValue(r).trim() : "");
  var r;
  if (["break-all", "break-word"].includes(e2)) {
    const r2 = `
      && span:last-child {
        white-space: normal;
        word-break: ${e2};
        vertical-align: top;
        max-width: calc(100% - 21px);
        display: inline-flex;
      }
    `;
    return Ne(["", " ", ""], typography("schemas-property-name"), r2);
  }
  return typography("schemas-property-name");
});
var PropertyDetailsCell = styled_components_esm_default.td.withConfig({
  displayName: "fields-layout__PropertyDetailsCell",
  componentId: "sc-1ko5l5b-4"
})(["box-sizing:border-box;vertical-align:top;tr.expanded &{border-bottom:none;}tr.last > &{border:none;background-position:top left;background-repeat:no-repeat;background-size:1px 100%;padding-bottom:0;& > div > div.dropdown > .dropdown-selector-content{position:relative;}}tr:first-of-type > &{padding-top:0;}border-bottom:none;border-left:1px solid var(--schemas-lines-color);padding:0 20px;width:var(--schema-default-details-width);min-width:200px;@media screen and (min-width:", "){border-bottom:1px solid var(--border-color-primary);border-left:none;padding:10px 0;}"], breakpoints.small);
var PropertyBullet = styled_components_esm_default.span.withConfig({
  displayName: "fields-layout__PropertyBullet",
  componentId: "sc-1ko5l5b-5"
})(["margin-right:10px;color:var(--schemas-lines-color);font-family:var(--code-font-family);width:var(--schema-default-details-width);border-left:1px dashed var(--schemas-lines-color);padding:5px 10px;@media screen and (min-width:", "){border-left:none;padding:10px;}&::before{content:'';display:inline-block;vertical-align:middle;width:10px;height:1px;background:var(--schemas-lines-color);}"], breakpoints.small);
var InnerPropertiesWrap = styled_components_esm_default.div.withConfig({
  displayName: "fields-layout__InnerPropertiesWrap",
  componentId: "sc-1ko5l5b-6"
})(["padding:var(--schema-nested-offset);"]);
var PropertiesTable = styled_components_esm_default.table.withConfig({
  displayName: "fields-layout__PropertiesTable",
  componentId: "sc-1ko5l5b-7"
})(["border-collapse:separate;border-radius:var(--border-radius);width:100%;font-size:var(--font-size-base);display:block;@media screen and (min-width:", "){display:table;}> tr,> tbody > tr{display:block;margin-bottom:10px;border-spacing:0;@media screen and (min-width:", "){display:table-row;margin-bottom:0;border-spacing:0 2px;}}> tr{vertical-align:middle;}@media screen and (max-width:", ") and (-ms-high-contrast:none){td{float:left;width:100%;}}& ", ",& ", " ", " ", ",& ", " ", " ", " ", " ", "{margin-left:var(--schema-nested-offset);margin-bottom:var(--schema-nested-offset);background:var(--schema-nested-background-color);border-radius:var(--panel-border-radius);}& ", " ", ",& ", " ", " ", " ", ",& ", " ", " ", " ", " ", " ", "{background:var(--panel-bg-color,#fff);}"], breakpoints.small, breakpoints.small, breakpoints.small, InnerPropertiesWrap, InnerPropertiesWrap, InnerPropertiesWrap, InnerPropertiesWrap, InnerPropertiesWrap, InnerPropertiesWrap, InnerPropertiesWrap, InnerPropertiesWrap, InnerPropertiesWrap, InnerPropertiesWrap, InnerPropertiesWrap, InnerPropertiesWrap, InnerPropertiesWrap, InnerPropertiesWrap, InnerPropertiesWrap, InnerPropertiesWrap, InnerPropertiesWrap, InnerPropertiesWrap, InnerPropertiesWrap, InnerPropertiesWrap, InnerPropertiesWrap);

// node_modules/@redocly/openapi-docs/lib-esm/hooks/useDimensions.js
import { useLayoutEffect, useState } from "react";

// node_modules/@redocly/openapi-docs/lib-esm/hooks/usePrevious.js
import { useEffect as useEffect2, useRef as useRef3 } from "react";

// node_modules/@redocly/openapi-docs/lib-esm/hooks/useActivateExample.js
import { useCallback as useCallback4 } from "react";

// node_modules/@redocly/openapi-docs/lib-esm/jotai/operation.js
var import_fast_deep_equal2 = __toESM(require_fast_deep_equal());
function getDefaultOperationStore(e2, t = {}) {
  return { activeExampleName: void 0, activeOneOf: { [e2]: 0 }, requestValues: t, request: { expandedAll: void 0 }, response: { expandedAll: void 0 } };
}
var operationStore = atomFamily((e2) => atom(getDefaultOperationStore(e2)), import_fast_deep_equal2.default);

// node_modules/@redocly/openapi-docs/lib-esm/hooks/useActivateExample.js
function useActivateExample(e2) {
  const i2 = useSetAtom(operationStore((null == e2 ? void 0 : e2.operation.pointer) || "no_operation_pointer")), t = e2 ? getActiveMediaType(e2) : void 0;
  return useCallback4((e3) => {
    var o, a, n2;
    if (t)
      if (t.examples && (null === (o = t.schema) || void 0 === o ? void 0 : o.oneOf) && Object.keys(t.examples).includes(e3)) {
        const o2 = null === (n2 = null === (a = t.schema) || void 0 === a ? void 0 : a.oneOf) || void 0 === n2 ? void 0 : n2.findIndex((i3) => i3.title === e3);
        i2(-1 === o2 ? (i3) => Object.assign(Object.assign({}, i3), { activeExampleName: e3, requestValues: {} }) : (e4) => {
          var i3, a2, n3, s;
          return Object.assign(Object.assign({}, e4), { activeOneOf: Object.assign(Object.assign({}, e4.activeOneOf), { [(null === (i3 = t.schema) || void 0 === i3 ? void 0 : i3.pointer) || ""]: o2 }), activeExampleName: (null === (s = null === (n3 = null === (a2 = t.schema) || void 0 === a2 ? void 0 : a2.oneOf) || void 0 === n3 ? void 0 : n3[o2]) || void 0 === s ? void 0 : s.title) || e4.activeExampleName, requestValues: {} });
        });
      } else
        i2((i3) => Object.assign(Object.assign({}, i3), { activeExampleName: e3, requestValues: {} }));
  }, [t, i2]);
}

// node_modules/@redocly/openapi-docs/lib-esm/hooks/useRouter.js
import { BrowserRouter, HashRouter, MemoryRouter } from "react-router-dom";
var RouterComponent = { history: BrowserRouter, memory: MemoryRouter, hash: HashRouter };
var useRouter = (o, r) => ({ Router: RouterComponent[o], routerProps: Object.assign({}, "memory" !== o && { basename: r }) });

// node_modules/@redocly/openapi-docs/lib-esm/hooks/useContentItems.js
import { useMemo as useMemo3 } from "react";
var useContentItems = ({ options: t, parser: e2 }) => {
  const { contentItems: o, flatItems: s } = useMemo3(() => buildContentItems(e2, t), [t, e2]);
  return { flatItems: s, contentItems: o };
};

// node_modules/@redocly/openapi-docs/lib-esm/hooks/useActiveWithFallback.js
import { useEffect as useEffect3, useState as useState2 } from "react";
function useActiveWithFallback(e2, t) {
  var u;
  const i2 = e2.find(({ key: e3 }) => e3 === t), [o, c] = useState2((null == i2 ? void 0 : i2.key) || (null === (u = e2[0]) || void 0 === u ? void 0 : u.key));
  return useEffect3(() => {
    i2 && c(i2.key);
  }, [i2]), o;
}

// node_modules/@redocly/openapi-docs/lib-esm/hooks/useUppercase2LowercaseRedirect.js
import { useEffect as useEffect4 } from "react";
import { useLocation as useLocation2, useNavigate } from "react-router-dom";
function useUppercase2LowercaseRedirect() {
  const e2 = useNavigate(), a = useLocation2();
  useEffect4(() => {
    a.pathname.toLowerCase() !== a.pathname && e2(a.pathname.toLowerCase(), { replace: true });
  }, [a.pathname, e2]);
}

// node_modules/@redocly/openapi-docs/lib-esm/hooks/useTranslate.js
init_src();
function useTranslate() {
  const { translate: e2 } = useThemeHooks().useTranslate();
  return e2;
}

// node_modules/@redocly/openapi-docs/lib-esm/hooks/useIsContentVisible.js
init_src();
import { useRef as useRef4, useState as useState3 } from "react";
function useIsContentVisible({ defaultVisible: e2 = true }) {
  const [t, r] = useState3(e2), n2 = useRef4(null);
  return useMount(() => {
    const e3 = new IntersectionObserver(([e4]) => {
      t || r(e4.isIntersecting);
    }, { root: null, rootMargin: IS_BROWSER && "undefined" == typeof window ? "200px" : "50px", threshold: 0.01 });
    return (null == n2 ? void 0 : n2.current) && e3.observe(n2.current), () => {
      n2.current && e3.unobserve(n2.current);
    };
  }), { isVisible: t, targetRef: n2 };
}

// node_modules/@redocly/openapi-docs/lib-esm/components/common/ExpandableExample/ExpandableExample.js
var MAX_EXAMPLE_LENGTH = 150;
function ExpandableExample({
  value: e2
}) {
  const s = useTranslate(), [o, a] = useState4(false), t = useMemo4(() => e2.slice(0, MAX_EXAMPLE_LENGTH), [e2]);
  return _jsxs4(Container2, {
    children: [_jsx7(Markdown2, {
      source: o ? e2 : t
    }), (e2 !== t || o) && _jsx7(ButtonWrap, {
      children: _jsx7(Button, {
        variant: "link",
        size: "small",
        onClick: () => {
          a(!o);
        },
        children: o ? s("openapi.hideExample", "Hide example") : s("openapi.showExample", "Show example")
      })
    })]
  });
}
var Container2 = styled_components_esm_default(ExampleValue).withConfig({
  displayName: "ExpandableExample__Container",
  componentId: "sc-1sa51pz-0"
})(["display:inline;& *{display:inline;}"]);
var ButtonWrap = styled_components_esm_default.span.withConfig({
  displayName: "ExpandableExample__ButtonWrap",
  componentId: "sc-1sa51pz-1"
})(["margin-left:var(--spacing-xs);"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/common/panels.js
init_src();
init_styled_components_esm();
var SamplesMiddlePanel = styled_components_esm_default.div.withConfig({
  displayName: "panels__SamplesMiddlePanel",
  componentId: "sc-1aolf57-0"
})(["", ";& &{padding-left:0;padding-right:0;}&:last-child > ", " :last-child,", " article :last-child{margin-bottom:0;}"], ({
  compact: a,
  isStacked: i2,
  fullWidth: t
}) => {
  const o = a ? 0 : "var(--spacing-vertical)";
  return Ne(["display:flex;flex-direction:column;width:100%;padding:", " var(--panel-gap-horizontal);&:empty{display:none;}@media screen and (min-width:", "){width:", ";padding-left:", ";padding-right:", ";padding-top:0;padding-bottom:", ";}@media print{width:100%;padding-top:", ";padding-bottom:", ";}"], o, breakpoints.large, t || i2 ? "100%" : "calc(100% - var(--panel-samples-width))", i2 ? "var(--panel-gap-horizontal)" : "calc(var(--panel-gap-horizontal) * 2)", i2 ? "var(--panel-gap-vertical)" : "var(--panel-gap-horizontal)", i2 ? "var(--spacing-vertical)" : 0, o, o);
}, Markdown, Markdown);
var Section = styled_components_esm_default.div.attrs((a) => ({
  [SECTION_ATTR]: a.sectionId,
  id: a.id
})).withConfig({
  displayName: "panels__Section",
  componentId: "sc-1aolf57-1"
})(["z-index:0;padding:0;width:100%;", " & > &:last-child{min-height:initial;}@media screen and (min-width:", "){padding-top:var(--spacing-xs);", "}@media print{padding:0;}", " ", "{position:relative;}"], ({
  expanded: a
}) => a && Ne(["background-color:var(--layer-color);border-bottom:1px solid var(--border-color-secondary);--code-block-bg-color:var(--bg-color);--code-block-controls-bg-color:var(--bg-color);"]), breakpoints.medium, ({
  expanded: a
}) => !a && Ne(["padding-bottom:var(--spacing-xs);"]), ({
  underlined: a
}) => a && Ne(["position:relative;&:not(:last-of-type):after{position:absolute;bottom:0;width:100%;display:block;content:'';border-bottom:1px solid var(--border-color-primary);}"]), H2);
var SamplesPanel = styled_components_esm_default.div.withConfig({
  displayName: "panels__SamplesPanel",
  componentId: "sc-1aolf57-2"
})(["color:var(--panel-samples-text-color);width:100%;height:fit-content;padding-top:var(--panel-gap-vertical);padding-bottom:var(--panel-gap-vertical);padding-left:var(--panel-gap-horizontal);padding-right:var(--panel-gap-horizontal);position:sticky;z-index:var(--panel-z-index);top:calc(var(--navbar-height) + var(--panel-gap-vertical));&:empty{display:none;}@media screen and (min-width:", "){width:", ";padding-top:0;padding-bottom:0;padding-left:", ";padding-right:", ";}@media print{width:100%;padding-top:var(--spacing-vertical);padding-bottom:var(--spacing-vertical);}"], breakpoints.large, ({
  isStacked: a
}) => a ? "100%" : "var(--panel-samples-width)", ({
  isStacked: a
}) => a ? "var(--panel-gap-vertical)" : "var(--panel-gap-horizontal)", ({
  isStacked: a
}) => a ? "var(--panel-gap-horizontal)" : "calc(var(--panel-gap-horizontal) * 2)");
var Row = styled_components_esm_default.div.withConfig({
  displayName: "panels__Row",
  componentId: "sc-1aolf57-3"
})(["display:flex;flex-direction:column;justify-content:space-between;width:100%;padding:0;@media screen and (min-width:", "){flex-direction:", ";}@media print{flex-direction:column;}"], breakpoints.large, ({
  layout: a
}) => a !== LayoutVariant.STACKED ? "row" : "column");

// node_modules/@redocly/openapi-docs/lib-esm/components/common/headers.js
init_styled_components_esm();
var FieldsGroupHeader = styled_components_esm_default.h5.withConfig({
  displayName: "headers__FieldsGroupHeader",
  componentId: "sc-jnrjf2-0"
})(["color:var(--text-color-secondary);font-weight:bold;text-transform:uppercase;font-size:14px;line-height:20px;"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/common/schema.js
init_styled_components_esm();
var OneOfButton = styled_components_esm_default.button.withConfig({
  displayName: "schema__OneOfButton",
  componentId: "sc-fpebq8-0"
})(["border:1px solid var(--schema-buttons-border-color);height:24px;border-radius:var(--border-radius);cursor:pointer;outline:none;font-family:var(--schema-buttons-font-family);font-weight:var(--schema-buttons-font-weight);font-size:var(--schema-buttons-font-size);line-height:1em;color:var(--schema-buttons-text-color);background-color:var(--schema-buttons-bg-color);padding:0 10px;min-width:90px;transition:background-color 0.2s ease-in,border-color 0.2s ease-in;&:hover{background-color:var(--schema-buttons-bg-color-hover);}&:active{background-color:var(--schema-buttons-bg-color-active);}", ";", ""], ({
  deprecated: o
}) => o && deprecatedCss, ({
  selected: o
}) => o && Ne(["border-color:var(--schema-buttons-selected-border-color);background-color:var(--schema-buttons-selected-bg-color);color:var(--schema-buttons-selected-text-color);&:hover{background-color:var(--schema-buttons-selected-bg-color-hover);}&:active{background-color:var(--schema-buttons-active-hover-background-color);}"]));
var OneOfList = styled_components_esm_default.div.withConfig({
  displayName: "schema__OneOfList",
  componentId: "sc-fpebq8-1"
})(["display:inline;flex-wrap:wrap;margin:4px -3px;margin-left:10px;", "{margin:2px;}"], OneOfButton);
var Wrapper = styled_components_esm_default.div.withConfig({
  displayName: "schema__Wrapper",
  componentId: "sc-fpebq8-2"
})(["margin-bottom:1em;"]);
var SelectionTitle = styled_components_esm_default.div.withConfig({
  displayName: "schema__SelectionTitle",
  componentId: "sc-fpebq8-3"
})(["font-size:var(--font-size-sm);line-height:var(--line-height-sm);color:var(--tag-basic-content-color);padding:0 var(--spacing-xs);border:1px solid var(--border-color-secondary);border-radius:var(--border-radius);margin:var(--spacing-xxs) 0 var(--spacing-xs);position:relative;width:fit-content;&:before{content:' ';width:1px;height:var(--spacing-xs);background:var(--border-color-secondary);display:block;position:absolute;bottom:calc(-1 * var(--spacing-xs));left:var(--spacing-xs);}"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/common/Skeleton/Skeleton.js
init_styled_components_esm();
init_src();
import { jsx as _jsx8, jsxs as _jsxs5 } from "react/jsx-runtime";
var shimmer = $e(["100%{transform:translateX(100%);}"]);
var SkeletonBox = styled_components_esm_default.div.withConfig({
  displayName: "Skeleton__SkeletonBox",
  componentId: "sc-m6ld9l-0"
})(["display:inline-block;height:1em;position:relative;overflow:hidden;background-color:var(--bg-color-raised);border-radius:var(--border-radius);margin-top:var(--spacing-base);width:", ";&::after{position:absolute;top:0;right:0;bottom:0;left:0;transform:translateX(-100%);background-image:linear-gradient( 90deg,rgba(255,255,255,0) 0,rgba(255,255,255,0.2) 20%,rgba(255,255,255,0.5) 60%,rgba(255,255,255,0) );animation:", " 2s infinite;content:'';}"], ({
  width: e2
}) => e2 || "100%", shimmer);

// node_modules/@redocly/openapi-docs/lib-esm/components/PayloadSamples/Example.js
import { jsx as _jsx10 } from "react/jsx-runtime";

// node_modules/@redocly/openapi-docs/lib-esm/components/PayloadSamples/ExampleValue.js
import { jsx as _jsx9 } from "react/jsx-runtime";
init_src();

// node_modules/@redocly/openapi-docs/lib-esm/components/PayloadSamples/styled.js
init_styled_components_esm();
init_src();
var SelectLabel = styled_components_esm_default.span.withConfig({
  displayName: "styled__SelectLabel",
  componentId: "sc-mgllif-0"
})(["font-size:12px;position:absolute;z-index:1;top:-11px;left:12px;font-weight:var(--font-weight-bold);color:var(--panel-samples-text-color);opacity:0.7;font-family:var(--font-family-base);"]);
var SelectWrapper = styled_components_esm_default.div.withConfig({
  displayName: "styled__SelectWrapper",
  componentId: "sc-mgllif-1"
})(["position:relative;"]);
var StyledCodeBlock = styled_components_esm_default(CodeBlock).withConfig({
  displayName: "styled__StyledCodeBlock",
  componentId: "sc-mgllif-2"
})(["border:none;margin:0;.code-block-header{border-bottom:0;padding-right:var(--spacing-sm);}"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/PayloadSamples/ExampleValue.js
function ExampleValue2({ value: o, mimeType: e2, encoding: l, onCopyClick: r }) {
  const { jsonSamplesExpandLevel: m } = useAtomValue(globalOptionsAtom);
  return isJsonLike(e2) ? _jsx9(JsonViewer, { data: o, expandLevel: m, onCopyClick: r }) : ("object" == typeof o && (o = isFormUrlEncoded(e2) ? urlFormEncodePayload(o, l) : JSON.stringify(o, null, 2)), _jsx9(StyledCodeBlock, { lang: langFromMime(e2), source: o, header: { className: "code-block-header", controls: { copy: { onClick: r } } } }));
}

// node_modules/@redocly/openapi-docs/lib-esm/components/PayloadSamples/Example.js
function Example({ example: e2, mimeType: m, onCopyClick: a }) {
  return _jsx10(ExampleValue2, { value: e2.value, mimeType: m, encoding: e2.encoding, onCopyClick: a });
}

// node_modules/@redocly/openapi-docs/lib-esm/components/PayloadSamples/MediaTypeSamples.js
var import_deepmerge3 = __toESM(require_cjs());
init_styled_components_esm();
import { jsx as _jsx13, Fragment as _Fragment3, jsxs as _jsxs6 } from "react/jsx-runtime";
import { memo as memo4 } from "react";

// node_modules/@redocly/openapi-docs/lib-esm/components/Samples/ExampleSwitch.js
import { jsx as _jsx12 } from "react/jsx-runtime";
import { useState as useState5, useEffect as useEffect5 } from "react";

// node_modules/@redocly/openapi-docs/lib-esm/components/SelectOrLabel/SelectOrLabel.js
init_styled_components_esm();
import { jsx as _jsx11 } from "react/jsx-runtime";
var __rest5 = function(e2, t) {
  var r = {};
  for (var o in e2)
    Object.prototype.hasOwnProperty.call(e2, o) && t.indexOf(o) < 0 && (r[o] = e2[o]);
  if (null != e2 && "function" == typeof Object.getOwnPropertySymbols) {
    var n2 = 0;
    for (o = Object.getOwnPropertySymbols(e2); n2 < o.length; n2++)
      t.indexOf(o[n2]) < 0 && Object.prototype.propertyIsEnumerable.call(e2, o[n2]) && (r[o[n2]] = e2[o[n2]]);
  }
  return r;
};
var MimeLabel2 = styled_components_esm_default.span.withConfig({
  displayName: "SelectOrLabel__MimeLabel",
  componentId: "sc-1pfmete-0"
})(["margin-left:4px;font-size:14px;text-transform:none;font-weight:400;color:var(--text-color-primary);"]);
function SelectOrLabel(e2) {
  var {
    Label: t = MimeLabel2,
    Select: r = SimpleSelect
  } = e2, o = __rest5(e2, ["Label", "Select"]);
  return 1 === o.options.length ? _jsx11(t, {
    children: o.options[0].value
  }) : _jsx11(r, Object.assign({}, o));
}

// node_modules/@redocly/openapi-docs/lib-esm/components/Samples/ExampleSwitch.js
var ExampleSwitch = ({ exampleKey: e2, examples: t, onChange: a }) => {
  var l;
  const r = Object.keys(t), o = e2 ? r.indexOf(e2) : 0, [i2, m] = useState5(o > -1 ? o : 0);
  useEffect5(() => m(o > -1 ? o : 0), [e2, o]);
  const n2 = r.map((e3, a2) => ({ value: normalizeText(t[e3].summary) || e3, idx: a2 }));
  return n2.length < 2 ? null : _jsx12(Container, { "data-testid": "example-switch", children: _jsx12(SelectOrLabel, { Select: Select2, Label: MimeLabel, variant: "dark", fullWidth: true, options: n2, value: null === (l = n2[i2]) || void 0 === l ? void 0 : l.value, onChange: ({ idx: e3 }) => {
    m(e3), a(r[e3]);
  } }) });
};

// node_modules/@redocly/openapi-docs/lib-esm/components/Samples/use-example-key.js
function useExampleKey({ pointer: e2 } = {}, o) {
  const t = useAtomValue(operationStore(e2)), { activeExampleName: r } = t;
  return { exampleKey: r && o[r] ? r : Object.keys(o)[0] };
}

// node_modules/@redocly/openapi-docs/lib-esm/components/PayloadSamples/MediaTypeSamples.js
function MediaTypeSamplesComponent({
  mediaType: e2,
  properties: r,
  onChange: a,
  onCopyClick: o
}) {
  const m = e2.examples || e2.formExamples || {}, s = e2.name, t = Object.keys(m), p = useTranslate(), {
    exampleKey: n2
  } = useExampleKey(e2.operation, m), l = 1 === t.length ? Object.values(m)[0] : m[n2];
  if (!t.length)
    return _jsx13(StyledCodeBlock, {
      lang: "clike",
      source: p("openapi.noResponseExample", "No response example"),
      header: {
        controls: false
      }
    });
  const i2 = r ? Object.assign(Object.assign({}, l), {
    value: (0, import_deepmerge3.default)(l.value, r, {
      arrayMerge: arrayMergeStrategy
    })
  }) : l, c = i2.description;
  return _jsxs6(_Fragment3, {
    children: [_jsx13(ExampleSwitch, {
      examples: m,
      exampleKey: n2,
      onChange: a
    }), c && _jsx13(StyledMarkdown, {
      source: c
    }), _jsx13(Example, {
      example: i2,
      mimeType: s,
      onCopyClick: o
    })]
  });
}
var StyledMarkdown = styled_components_esm_default(Markdown2).withConfig({
  displayName: "MediaTypeSamples__StyledMarkdown",
  componentId: "sc-s3p9gy-0"
})(["margin:0 var(--spacing-md) var(--spacing-sm);"]);
var MediaTypeSamples = memo4(MediaTypeSamplesComponent);

// node_modules/@redocly/openapi-docs/lib-esm/components/PayloadSamples/PayloadSamples.js
import { jsx as _jsx15 } from "react/jsx-runtime";
import { memo as memo6, useCallback as useCallback6 } from "react";

// node_modules/@redocly/openapi-docs/lib-esm/components/MediaTypeSwitch/MediaTypesSwitch.js
import { jsx as _jsx14, jsxs as _jsxs7, Fragment as _Fragment4 } from "react/jsx-runtime";
import { memo as memo5, useCallback as useCallback5, useRef as useRef5 } from "react";
function Wrapper2({ children: e2, withLabel: t, innerRef: n2, translate: r }) {
  return e2 ? t ? _jsxs7(SelectWrapper, { ref: n2, children: [_jsx14(SelectLabel, { children: r("openapi.contentType", "Content type") }), e2] }) : _jsx14(Container, { ref: n2, children: e2 }) : null;
}
function MediaTypesSwitchComponent({ content: e2, withLabel: t, renderSelect: n2, children: r }) {
  const a = useTranslate(), [i2, o] = useAtom(activeMimeNameAtom), l = useCallback5(({ value: t2 }) => {
    if (!e2 || !m.current)
      return null;
    const n3 = m.current.getBoundingClientRect().y;
    o(t2), requestAnimationFrame(() => {
      if (!m.current || null == n3)
        return;
      const e3 = m.current.getBoundingClientRect().y;
      window.scrollBy(0, e3 - n3);
    });
  }, [e2, o]), m = useRef5(null);
  if (!e2 || !e2.mediaTypes || !e2.mediaTypes.length)
    return null;
  const s = e2.mediaTypes.map((e3, t2) => ({ value: e3.name, idx: t2 })), c = getActiveMediaType(e2, i2);
  return _jsxs7(_Fragment4, { children: [_jsx14(Wrapper2, { innerRef: m, withLabel: t, translate: a, children: n2({ value: c.name, options: s, onChange: l, ariaLabel: "Content type" }) }), r(c)] });
}
var MediaTypesSwitch = memo5(MediaTypesSwitchComponent);

// node_modules/@redocly/openapi-docs/lib-esm/components/PayloadSamples/PayloadSamples.js
var __rest6 = function(e2, t) {
  var a = {};
  for (var o in e2)
    Object.prototype.hasOwnProperty.call(e2, o) && t.indexOf(o) < 0 && (a[o] = e2[o]);
  if (null != e2 && "function" == typeof Object.getOwnPropertySymbols) {
    var r = 0;
    for (o = Object.getOwnPropertySymbols(e2); r < o.length; r++)
      t.indexOf(o[r]) < 0 && Object.prototype.propertyIsEnumerable.call(e2, o[r]) && (a[o[r]] = e2[o[r]]);
  }
  return a;
};
function PayloadSamplesComponent(e2) {
  var { onlyDefaultMimeType: t, content: a } = e2, o = __rest6(e2, ["onlyDefaultMimeType", "content"]);
  const r = useActivateExample(a), l = useAtomValue(activeMimeNameAtom), m = t && l, p = useTranslate(), s = useCallback6((e3) => m ? null : _jsx15(SelectWrapper, { children: _jsx15(SelectOrLabel, Object.assign({ Label: MimeLabel, Select: Select2, variant: "dark", fullWidth: true }, e3)) }), [m]), i2 = (e3) => r(e3);
  return a ? _jsx15(MediaTypesSwitch, { content: a, renderSelect: s, children: (e3) => _jsx15(MediaTypeSamples, Object.assign({ mediaType: e3 }, o, { onChange: i2 }), "samples") }) : _jsx15(StyledCodeBlock, { lang: "text", source: p("openapi.noRequestPayload", "No request payload"), header: { controls: false } });
}
var PayloadSamples = memo6(PayloadSamplesComponent);

// node_modules/@redocly/openapi-docs/lib-esm/components/Schema/Schema.js
import { jsx as _jsx39 } from "react/jsx-runtime";
import { memo as memo23 } from "react";
init_styled_components_esm();
import { useLocation as useLocation5 } from "react-router-dom";

// node_modules/@redocly/openapi-docs/lib-esm/components/Schema/ArraySchema.js
init_styled_components_esm();
import { jsx as _jsx35, Fragment as _Fragment12, jsxs as _jsxs19 } from "react/jsx-runtime";
import { memo as memo19, useCallback as useCallback9 } from "react";

// node_modules/@redocly/openapi-docs/lib-esm/components/Schema/ObjectSchema.js
import { jsx as _jsx34, Fragment as _Fragment11, jsxs as _jsxs18 } from "react/jsx-runtime";
import { memo as memo18 } from "react";

// node_modules/@redocly/openapi-docs/lib-esm/components/Discriminator/Discriminator.js
init_styled_components_esm();
import { jsx as _jsx18, jsxs as _jsxs8 } from "react/jsx-runtime";
import { memo as memo7, useMemo as useMemo5 } from "react";

// node_modules/@redocly/openapi-docs/lib-esm/components/common/SchemaSelection/SchemaSelection.js
import { jsx as _jsx17 } from "react/jsx-runtime";
import { useCallback as useCallback7 } from "react";
init_src();

// node_modules/@redocly/openapi-docs/lib-esm/components/common/Dropdown/Dropdown.js
init_styled_components_esm();
init_src();
import { jsx as _jsx16 } from "react/jsx-runtime";
function DropdownComponent({
  options: e2,
  value: n2,
  onChange: o,
  className: t,
  triggerVariant: r = "outlined",
  triggerSize: i2 = "small"
}) {
  var a;
  const l = null === (a = e2.find((e3) => e3.value === n2)) || void 0 === a ? void 0 : a.label;
  return 1 === e2.length ? _jsx16(Title, {
    children: l
  }) : _jsx16(Dropdown, {
    className: t,
    trigger: _jsx16(Button, {
      variant: r,
      size: i2,
      type: "button",
      children: l
    }),
    withArrow: true,
    children: _jsx16(DropdownMenu, {
      children: e2.map((e3) => _jsx16(StyledDropdownMenuItem, {
        active: e3.value === n2,
        onAction: () => o(e3),
        suffix: e3.value === n2 && _jsx16(StyledCheckmarkIcon, {}),
        children: e3.label
      }, e3.label))
    })
  });
}
var Dropdown2 = typedMemo(DropdownComponent);
var StyledCheckmarkIcon = styled_components_esm_default(CheckmarkIcon).withConfig({
  displayName: "Dropdown__StyledCheckmarkIcon",
  componentId: "sc-1auqykr-0"
})(["width:16px;height:16px;margin-left:auto;"]);
var StyledDropdownMenuItem = styled_components_esm_default(DropdownMenuItem).withConfig({
  displayName: "Dropdown__StyledDropdownMenuItem",
  componentId: "sc-1auqykr-1"
})(["--dropdown-menu-item-justify-content:space-between;width:100%;display:flex;align-items:center;gap:var(--spacing-md);padding:var(--spacing-xxs) var(--spacing-sm);font-size:var(--font-size-base);line-height:var(--line-height-base);"]);
var Title = styled_components_esm_default.span.withConfig({
  displayName: "Dropdown__Title",
  componentId: "sc-1auqykr-2"
})(["margin-right:var(--spacing-unit);cursor:default;background:none;border:none;padding:0;color:var(--text-color-primary);font-size:var(--font-size-lg);line-height:var(--line-height-lg);font-family:var(--font-family-base);font-weight:var(--font-weight-regular);"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/common/SchemaSelection/SchemaSelection.js
var LIMIT_FOR_SEGMENTED = 5;
function SchemaSelectionComponent({ options: e2, onChange: o, pointer: n2, schema: t, defaultOneOfIdx: i2 }) {
  var a, r;
  const [s, m] = useAtom(operationStore(n2)), l = null === (r = e2[null !== (a = s.activeOneOf[t.pointer]) && void 0 !== a ? a : i2]) || void 0 === r ? void 0 : r.value, c = useCallback7(({ value: e3 }) => {
    void 0 !== e3 && (o ? o(e3) : m((o2) => {
      var n3, i3;
      return Object.assign(Object.assign({}, o2), { activeExampleName: (null === (i3 = null === (n3 = t.oneOf) || void 0 === n3 ? void 0 : n3[e3]) || void 0 === i3 ? void 0 : i3.title) || o2.activeExampleName, activeOneOf: Object.assign(Object.assign({}, o2.activeOneOf), { [t.pointer]: e3 }) });
    }));
  }, [o, t.oneOf, t.pointer, m]);
  return isUndefined(l) ? null : e2.length > LIMIT_FOR_SEGMENTED ? _jsx17(Dropdown2, { options: e2, value: l, onChange: c }) : _jsx17(Segmented, { value: l, onChange: c, options: e2, size: "small", "data-testid": "segmented-schema" });
}
var SchemaSelection = SchemaSelectionComponent;

// node_modules/@redocly/openapi-docs/lib-esm/components/Discriminator/Discriminator.js
function DiscriminatorDropdownComponent({
  activeOneOfIdx: e2,
  parent: o,
  onChange: t,
  translate: i2
}) {
  const r = useMemo5(() => (o.oneOf || []).map((e3, o2) => ({
    label: e3.schema.deprecated ? `${strikethroughText(e3.title)} (${i2("openapi.badges.deprecated", "deprecated").toLowerCase()}` : e3.title,
    value: o2
  })), [o.oneOf, i2]);
  return void 0 === o.oneOf ? null : _jsxs8(Wrapper3, {
    children: [_jsx18(SelectionTitle, {
      children: i2("openapi.discriminator", "Discriminator")
    }), _jsx18(SchemaSelection, {
      options: r,
      pointer: o.operationPointer,
      onChange: t,
      schema: o,
      defaultOneOfIdx: e2
    })]
  });
}
var Discriminator = memo7(DiscriminatorDropdownComponent);
var Wrapper3 = styled_components_esm_default.div.withConfig({
  displayName: "Discriminator__Wrapper",
  componentId: "sc-z1sj1f-0"
})(["display:flex;flex-direction:column;align-items:flex-start;"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/PropertyDetails/PropertyDetails.js
init_styled_components_esm();
import { jsx as _jsx30, jsxs as _jsxs16 } from "react/jsx-runtime";
import { memo as memo15 } from "react";

// node_modules/@redocly/openapi-docs/lib-esm/components/PropertyDetails/FieldDetails.js
import { jsx as _jsx29, jsxs as _jsxs15, Fragment as _Fragment10 } from "react/jsx-runtime";
import { memo as memo14, useMemo as useMemo7 } from "react";
init_styled_components_esm();
init_src();

// node_modules/@redocly/openapi-docs/lib-esm/components/ExternalDocumentation/ExternalDocumentation.js
init_styled_components_esm();
init_src();
import { jsx as _jsx19 } from "react/jsx-runtime";
import { memo as memo8 } from "react";
var LinkWrap = styled_components_esm_default.div.withConfig({
  displayName: "ExternalDocumentation__LinkWrap",
  componentId: "sc-oo0u42-0"
})(["", ";", ""], markdownLinksCss, ({
  compact: r
}) => r ? "" : "margin: var(--spacing-sm) 0 0");
function ExternalDocumentationComponent({
  externalDocs: r,
  compact: t
}) {
  if (!r || !r.url)
    return null;
  const n2 = normalizeText(r.description);
  return _jsx19(LinkWrap, {
    compact: t,
    children: _jsx19("a", {
      href: r.url,
      target: "_blank",
      rel: "noreferrer",
      "aria-label": n2 || r.url,
      children: n2 || r.url
    })
  });
}
var ExternalDocumentation = memo8(ExternalDocumentationComponent);

// node_modules/@redocly/openapi-docs/lib-esm/components/PropertyDetails/FieldDetail.js
init_styled_components_esm();
import { jsxs as _jsxs9, jsx as _jsx20 } from "react/jsx-runtime";
import { memo as memo9 } from "react";
function FieldDetailComponent({
  value: e2,
  label: l,
  raw: a,
  type: i2 = "other"
}) {
  if (void 0 === e2)
    return null;
  const r = a ? String(e2) : JSON.stringify(e2);
  return _jsxs9(Wrapper4, {
    children: [_jsxs9(FieldLabel, {
      children: [" ", l, " "]
    }), "default" === i2 ? _jsx20(DefaultValue, {
      children: r
    }) : "example" === i2 ? _jsx20(ExpandableExample, {
      value: r
    }) : _jsx20(FieldValueLabel, {
      children: r
    })]
  });
}
var FieldDetail = memo9(FieldDetailComponent);
var Wrapper4 = styled_components_esm_default.div.withConfig({
  displayName: "FieldDetail__Wrapper",
  componentId: "sc-i6glyo-0"
})(["margin-top:var(--spacing-xxs);display:flex;align-items:baseline;gap:var(--spacing-xxs);flex-wrap:wrap;"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/PropertyDetails/Extensions.js
init_styled_components_esm();
import { jsxs as _jsxs10, jsx as _jsx21, Fragment as _Fragment5 } from "react/jsx-runtime";
import { memo as memo10 } from "react";
init_src();
var Container3 = styled_components_esm_default(Markdown).withConfig({
  displayName: "Extensions__Container",
  componentId: "sc-1g9us3b-0"
})(["margin:2px 0;"]);
function ExtensionsComponent({
  extensions: o
}) {
  const {
    showExtensions: e2
  } = useAtomValue(globalOptionsAtom);
  return e2 ? _jsx21(_Fragment5, {
    children: Object.keys(o).map((e3) => _jsxs10(Container3, {
      children: [_jsxs10(FieldLabel, {
        children: [e3.substring(2), ": "]
      }), " ", _jsx21(ExtensionValue, {
        children: "string" == typeof o[e3] ? o[e3] : JSON.stringify(o[e3])
      })]
    }, e3))
  }) : null;
}
var Extensions = memo10(ExtensionsComponent);

// node_modules/@redocly/openapi-docs/lib-esm/components/PropertyDetails/EnumValues.js
import { jsx as _jsx24, Fragment as _Fragment7 } from "react/jsx-runtime";
import { useState as useState6, memo as memo13, useCallback as useCallback8, useMemo as useMemo6 } from "react";

// node_modules/@redocly/openapi-docs/lib-esm/components/PropertyDetails/SimpleEnums.js
init_styled_components_esm();
import { jsxs as _jsxs11, jsx as _jsx22 } from "react/jsx-runtime";
import { memo as memo11 } from "react";
function SimpleEnumsComponent({
  enums: e2,
  type: n2,
  toggle: o,
  showToggleButton: t,
  toggleButtonText: s,
  translate: m
}) {
  return _jsxs11(Row2, {
    children: [_jsxs11(FieldLabel, {
      children: ["array" === n2 ? m("openapi.items", "Items") : "", " ", 1 === e2.length ? m("openapi.value", "Value") : m("openapi.enum", "Enum")]
    }), e2.map((e3, n3) => _jsx22(Tag3, {
      children: JSON.stringify(e3)
    }, e3 + n3)), t ? _jsx22(ToggleButton, {
      onClick: o,
      children: s
    }) : null]
  });
}
var SimpleEnums = memo11(SimpleEnumsComponent);
var Row2 = styled_components_esm_default.div.withConfig({
  displayName: "SimpleEnums__Row",
  componentId: "sc-1b3o0bp-0"
})(["display:flex;flex-wrap:wrap;align-items:center;gap:var(--spacing-xxs);margin-top:var(--spacing-xxs);"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/PropertyDetails/DescriptionEnums.js
init_styled_components_esm();
import { jsxs as _jsxs12, jsx as _jsx23, Fragment as _Fragment6 } from "react/jsx-runtime";
import { memo as memo12 } from "react";

// node_modules/@redocly/openapi-docs/lib-esm/components/PropertyDetails/styled.js
init_styled_components_esm();
init_src();
var DescriptionEnumsBlock = styled_components_esm_default(Markdown).withConfig({
  displayName: "styled__DescriptionEnumsBlock",
  componentId: "sc-vo62ix-0"
})(["table.md{margin:var(--spacing-xs) 0 0;}"]);
var TypeWrapper = styled_components_esm_default.div.withConfig({
  displayName: "styled__TypeWrapper",
  componentId: "sc-vo62ix-1"
})(["line-height:20px;"]);
var ExampleDescription = styled_components_esm_default.div.withConfig({
  displayName: "styled__ExampleDescription",
  componentId: "sc-vo62ix-2"
})([""]);
var ExampleSummary = styled_components_esm_default.label.withConfig({
  displayName: "styled__ExampleSummary",
  componentId: "sc-vo62ix-3"
})(["display:block;font-size:inherit;margin-bottom:0.2em;font-weight:var(--font-weight-bold);"]);
var ExampleWrap = styled_components_esm_default.div.withConfig({
  displayName: "styled__ExampleWrap",
  componentId: "sc-vo62ix-4"
})(["margin-top:1em;font-size:var(--field-name-font-size);"]);
var ExamplesList = styled_components_esm_default.div.withConfig({
  displayName: "styled__ExamplesList",
  componentId: "sc-vo62ix-5"
})(["padding-left:1.5em;margin-bottom:1em;"]);
var FieldDescriptionWrapper = styled_components_esm_default.div.withConfig({
  displayName: "styled__FieldDescriptionWrapper",
  componentId: "sc-vo62ix-6"
})(["p{overflow-wrap:anywhere;}"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/PropertyDetails/DescriptionEnums.js
var EnumValueStyled = styled_components_esm_default.td.withConfig({
  displayName: "DescriptionEnums__EnumValueStyled",
  componentId: "sc-5plmxa-0"
})(["word-wrap:break-word;font-size:var(--md-table-font-size);"]);
var DescriptionValueStyled = styled_components_esm_default.td.withConfig({
  displayName: "DescriptionEnums__DescriptionValueStyled",
  componentId: "sc-5plmxa-1"
})(["& p,p:only-of-type{margin:0;}"]);
function DescriptionEnumsComponent({
  enums: e2,
  toggle: t,
  showToggleButton: n2,
  toggleButtonText: o,
  type: s,
  translate: r
}) {
  return _jsx23(_Fragment6, {
    children: _jsx23(DescriptionEnumsBlock, {
      children: _jsxs12("table", {
        className: "md",
        children: [_jsx23("thead", {
          children: _jsxs12("tr", {
            children: [_jsxs12("th", {
              style: {
                width: "30%"
              },
              children: ["array" === s ? r("openapi.items", "Items") : "", " ", 1 === e2.length ? r("openapi.value", "Value") : `${r("openapi.enum", "Enum")} ${r("openapi.value", "Value")}`]
            }), _jsx23("th", {
              children: r("openapi.description", "Description")
            })]
          })
        }), _jsx23("tbody", {
          children: e2.map(({
            description: e3,
            value: t2
          }) => _jsxs12("tr", {
            children: [_jsx23(EnumValueStyled, {
              children: t2
            }), _jsx23(DescriptionValueStyled, {
              children: _jsx23(Markdown2, {
                source: e3
              })
            })]
          }, t2))
        }), n2 ? _jsx23("tfoot", {
          children: _jsx23("tr", {
            children: _jsx23("td", {
              colSpan: 2,
              children: _jsx23(ToggleButton, {
                onClick: t,
                children: o
              })
            })
          })
        }) : null]
      })
    })
  });
}
var DescriptionEnums = memo12(DescriptionEnumsComponent);

// node_modules/@redocly/openapi-docs/lib-esm/components/PropertyDetails/EnumValues.js
function getEnums(e2) {
  return Array.isArray(e2) && e2 || Object.entries(e2 || {}).map(([e3, t]) => ({ value: e3, description: t }));
}
function EnumValuesComponent({ values: e2, type: t }) {
  const o = useTranslate(), [s, n2] = useState6(true), { maxDisplayedEnumValues: m } = useAtomValue(globalOptionsAtom), r = useCallback8(() => {
    n2(!s);
  }, [s]), a = !Array.isArray(e2), u = getEnums(e2), i2 = useMemo6(() => s && m ? u.slice(0, m) : u, [u, s, m]);
  if (!u.length)
    return null;
  const l = !!m && u.length > m, p = m ? s ? `+${u.length - m} ${o("openapi.actions.more", "more")}` : o("openapi.actions.hide", "Hide") : "";
  return _jsx24(_Fragment7, { children: a ? _jsx24(DescriptionEnums, { enums: i2, toggle: r, showToggleButton: l, toggleButtonText: p, type: t, translate: o }) : _jsx24(SimpleEnums, { enums: i2, type: t, toggle: r, toggleButtonText: p, showToggleButton: l, translate: o }) });
}
var EnumValues = memo13(EnumValuesComponent);

// node_modules/@redocly/openapi-docs/lib-esm/components/PropertyDetails/Examples.js
import { jsxs as _jsxs13, jsx as _jsx25, Fragment as _Fragment8 } from "react/jsx-runtime";
function Examples({ field: e2 }) {
  const r = useTranslate();
  return e2.examples ? _jsxs13(_Fragment8, { children: [_jsxs13(FieldLabel, { children: [" ", r("openapi.examples", "Examples"), ": "] }), _jsx25(ExamplesList, { children: Object.entries(e2.examples).map(([r2, a]) => {
    const l = normalizeText(a.description);
    return _jsxs13(ExampleWrap, { children: [_jsxs13(ExampleSummary, { children: [normalizeText(a.summary) || r2, " "] }), l && _jsxs13(ExampleDescription, { children: [l, " "] }), _jsx25(ExampleValue, { children: getSerializedValue(e2, a.value) })] }, r2);
  }) })] }) : null;
}
function getSerializedValue(e2, r) {
  return e2.in ? tryDecodeURIComponent(serializeParameterValue(e2, r)) : r;
}

// node_modules/@redocly/openapi-docs/lib-esm/components/PropertyDetails/SchemaTypeInfo.js
init_styled_components_esm();
import { jsx as _jsx26 } from "react/jsx-runtime";
function SchemaTypeInfo({
  type: e2,
  className: t
}) {
  return e2 ? _jsx26(FieldLabel2, {
    className: t,
    children: e2
  }) : null;
}
var FieldLabel2 = styled_components_esm_default.em.withConfig({
  displayName: "SchemaTypeInfo__FieldLabel",
  componentId: "sc-dcxaoy-0"
})(["vertical-align:middle;color:var(--schema-type-text-color);font-size:var(--font-size-base);line-height:var(--line-height-base);font-style:normal;:after{content:',';}&:last-of-type:after{content:'';}"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/PropertyDetails/Pattern.js
import { jsx as _jsx27, Fragment as _Fragment9, jsxs as _jsxs14 } from "react/jsx-runtime";
import { useState as useState7 } from "react";
var MAX_PATTERN_LENGTH = 45;
function Pattern({ pattern: t }) {
  const e2 = useTranslate(), [n2, r] = useState7(false);
  if (!t)
    return null;
  return _jsxs14(_Fragment9, { children: [_jsx27(Tag3, { children: n2 || t.length < MAX_PATTERN_LENGTH ? t : `${t.slice(0, MAX_PATTERN_LENGTH)}...` }), t.length > MAX_PATTERN_LENGTH && _jsx27(ToggleButton, { onClick: () => {
    r(!n2);
  }, children: n2 ? e2("openapi.hidePattern", "Hide pattern") : e2("openapi.showPattern", "Show pattern") })] });
}

// node_modules/@redocly/openapi-docs/lib-esm/components/RenderHook/RenderHook.js
import { jsx as _jsx28 } from "react/jsx-runtime";
function RenderHook(e2) {
  if (!e2.Hook)
    return null;
  const n2 = e2.Hook(e2.props), r = n2 && n2.html;
  return r ? _jsx28("span", { dangerouslySetInnerHTML: { __html: r } }) : n2;
}
function getAccessModeLabelText(e2) {
  return (e2.readOnly ? "read-only" : e2.writeOnly && "write-only") || null;
}

// node_modules/@redocly/openapi-docs/lib-esm/components/PropertyDetails/FieldDetails.js
function FieldDetailsComponent({
  field: e2,
  renderDiscriminatorSwitch: a,
  deepLink: i2,
  fieldParentsName: t = []
}) {
  var o;
  const r = useTranslate(), {
    hidePropertiesPrefix: s,
    hideSchemaTitles: n2
  } = useAtomValue(globalOptionsAtom), {
    schema: l,
    description: p,
    example: m,
    deprecated: c,
    examples: d,
    kind: x,
    required: f,
    name: u
  } = e2, h = "header" === e2.in, y = useMemo7(() => {
    if (void 0 !== m || void 0 !== d) {
      if (void 0 !== d)
        return _jsx29(Examples, {
          field: e2
        });
      {
        const a2 = !!e2.in;
        return _jsx29(FieldDetail, {
          label: `${r("openapi.example", "Example")}:`,
          value: getSerializedValue(e2, e2.example),
          raw: a2
        });
      }
    }
    return null;
  }, [m, d, e2, r]), v = getAccessModeLabelText(e2.schema);
  return _jsxs15(_Fragment10, {
    children: [_jsxs15(Row3, {
      children: [u && _jsxs15(Name, {
        children: [i2 && _jsx29(LinkToField, {
          to: i2
        }), !s && t.map((e3) => e3 + ".\u200B"), _jsx29(SchemaName, {
          className: "schema-name",
          children: u
        })]
      }), _jsx29(SchemaTypeInfo, {
        type: l.typePrefix + l.displayType
      }), _jsx29(SchemaTypeInfo, {
        type: l.displayFormat && `(${l.displayFormat})`
      }), _jsx29(SchemaTypeInfo, {
        type: l.contentEncoding
      }), _jsx29(SchemaTypeInfo, {
        type: l.title && !n2 ? `(${l.title})` : ""
      }), null === (o = l.constraints) || void 0 === o ? void 0 : o.map((e3) => _jsx29(SchemaTypeInfo, {
        type: e3
      }, e3)), c && _jsx29(StyledBadge, {
        deprecated: true,
        children: r("openapi.badges.deprecated", "Deprecated")
      }), _jsx29(Pattern, {
        pattern: l.pattern
      }), "additionalProperties" === x && _jsx29(Tag3, {
        children: r("openapi.additionalProperties", "additional property")
      }), "patternProperties" === x && _jsx29(Tag3, {
        children: r("openapi.patternProperties", "pattern property")
      }), v && _jsx29(AccessLabel, {
        children: v
      }), f && _jsx29(RequiredLabel, {
        children: r("openapi.required", "required")
      }), l.isCircular && _jsx29(RecursiveLabel, {
        children: r("openapi.recursive", "Recursive")
      })]
    }), l.isComplex && _jsx29(RecursiveLabel, {
      children: r("openapi.complex", "Complex")
    }), _jsx29(StyledDescription, {
      source: p
    }), _jsx29(FieldDetail, {
      raw: h,
      type: "default",
      label: r("openapi.default", "Default"),
      value: l.default
    }), _jsx29(EnumValues, {
      type: l.type,
      values: l["x-enumDescriptions"] || l.enum
    }), y, _jsx29(Extensions, {
      extensions: Object.assign(Object.assign({}, e2.extensions), l.extensions)
    }), l.externalDocs && _jsx29(ExternalDocumentation, {
      externalDocs: l.externalDocs,
      compact: true
    }), null == a ? void 0 : a(), _jsx29(FieldDetail, {
      label: r("openapi.value", "Value"),
      value: e2.const || void 0
    })]
  });
}
var FieldDetails = memo14(FieldDetailsComponent);
var Row3 = styled_components_esm_default.div.withConfig({
  displayName: "FieldDetails__Row",
  componentId: "sc-1yj2xuq-0"
})(["display:flex;align-items:center;gap:calc(var(--spacing-xxs) / 4) var(--spacing-xxs);flex-wrap:wrap;margin-bottom:2px;position:relative;"]);
var StyledDescription = styled_components_esm_default(Markdown2).withConfig({
  displayName: "FieldDetails__StyledDescription",
  componentId: "sc-1yj2xuq-1"
})(["font-size:var(--font-size-base);line-height:var(--line-height-base);article p:last-child{margin-bottom:0;}"]);
var Name = styled_components_esm_default.span.withConfig({
  displayName: "FieldDetails__Name",
  componentId: "sc-1yj2xuq-2"
})(["position:relative;font-family:var(--font-family-monospaced);line-height:var(--line-height-base);font-size:var(--font-size-base);color:var(--text-color-description);max-width:100%;word-wrap:break-word;overflow-wrap:break-word;white-space:pre-wrap;:hover{", "{opacity:1;visibility:visible;background-color:var(--bg-color);}}"], LinkIcon);
var SchemaName = styled_components_esm_default.span.withConfig({
  displayName: "FieldDetails__SchemaName",
  componentId: "sc-1yj2xuq-3"
})(["font-family:var(--font-family-monospaced);font-weight:var(--font-weight-semibold);font-size:var(--schemas-property-name-font-size);line-height:var(--schemas-property-name-line-height);color:var(--text-color-primary);"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/PropertyDetails/PropertyDetails.js
function PropertyDetailsComponent({
  field: e2,
  skipWriteOnly: i2,
  skipReadOnly: r,
  level: s = 1,
  showTitle: t,
  renderDiscriminatorSwitch: a,
  isFirst: o,
  fieldParentsName: n2,
  disableDeepLinks: d,
  oneOfLevel: p
}) {
  const l = d ? void 0 : generateDeepLink(e2), m = !e2.schema.isPrimitive && !e2.schema.isCircular;
  return _jsxs16(Wrapper5, {
    isFist: o,
    expanded: m,
    className: "property",
    children: [_jsx30(FieldDetails, {
      field: e2,
      renderDiscriminatorSwitch: a,
      deepLink: l,
      fieldParentsName: n2
    }), m && _jsx30(Schema, {
      schema: e2.schema,
      skipReadOnly: r,
      skipWriteOnly: i2,
      showTitle: t,
      expandable: true,
      level: s + 1,
      fieldParentsName: [...n2 || [], e2.name],
      deepLink: l,
      required: e2.required,
      disableDeepLinks: d,
      oneOfLevel: p
    })]
  });
}
var PropertyDetails = memo15(PropertyDetailsComponent);
var Wrapper5 = styled_components_esm_default.div.withConfig({
  displayName: "PropertyDetails__Wrapper",
  componentId: "sc-1eua2p2-0"
})(["width:100%;padding:", " 0 ", ";", ";&:has(+ span.array-closing-label){border-bottom:none;padding-bottom:calc(var(--schema-property-details-spacing) / 2);.view-nested-wrapper{border-bottom:none;padding-bottom:0;}}"], ({
  isFist: e2
}) => `var(--schema-${e2 ? "fist-" : ""}property-details-spacing)`, ({
  expanded: e2
}) => e2 ? 0 : "var(--schema-property-details-spacing)", ({
  expanded: e2
}) => !e2 && "border-bottom: 1px solid var(--border-color-primary)");

// node_modules/@redocly/openapi-docs/lib-esm/components/Schema/SubSchema.js
import { jsx as _jsx33 } from "react/jsx-runtime";
import { memo as memo17 } from "react";
import { useLocation as useLocation3 } from "react-router-dom";

// node_modules/@redocly/openapi-docs/lib-esm/components/Schema/helpers.js
init_src();
var extractTypeFromDeepLink = (e2) => {
  if (!e2)
    return "";
  const n2 = e2.match(/t=(request|response)/);
  return n2 ? n2[1] : "";
};
var DEFAULT_REQUIRE_EXPAND_LEVEL = 4;
function getExpandByDefault({ schemasExpansionLevel: e2, level: n2, required: t }) {
  const r = Number(n2) - 1;
  return isUndefined(e2) ? Boolean(t) && DEFAULT_REQUIRE_EXPAND_LEVEL >= r : e2 >= r;
}

// node_modules/@redocly/openapi-docs/lib-esm/components/ViewNested/ViewNested.js
init_styled_components_esm();
init_src();
import { jsx as _jsx32, jsxs as _jsxs17 } from "react/jsx-runtime";
import { memo as memo16, useEffect as useEffect6, useState as useState8 } from "react";

// node_modules/@redocly/openapi-docs/lib-esm/components/PropertyDetails/cycleColorsByLevel.js
var cycleColorsByLevel = (C) => {
  if (void 0 === C)
    return;
  const F = ["#9D00FF", "#615CEA", "#147DF5", "#08BFCC", "#08CC7A", "#81CC08", "#E5BE00", "#FF8700", "#FF00B8"];
  return F[C % F.length];
};

// node_modules/@redocly/openapi-docs/lib-esm/components/PropertyDetails/PlusCircleIcon.js
init_styled_components_esm();
import { jsx as _jsx31 } from "react/jsx-runtime";
function CircleIcon({
  sign: o,
  className: r,
  color: e2
}) {
  return _jsx31(StyledCircleIcon, {
    className: r,
    color: e2,
    children: o
  });
}
var StyledCircleIcon = styled_components_esm_default.span.withConfig({
  displayName: "PlusCircleIcon__StyledCircleIcon",
  componentId: "sc-1y16vgm-0"
})(["background-color:var(--bg-color);border-radius:50%;border:1px solid ", ";font-size:var(--font-size-lg);line-height:var(--font-size-lg);color:", ";width:20px;height:20px;"], ({
  color: o
}) => o || "var(--border-color-primary)", ({
  color: o
}) => o || "var(--text-color-secondary)");

// node_modules/@redocly/openapi-docs/lib-esm/components/ViewNested/ViewNested.js
function ViewNestedComponent({
  expandByDefault: e2,
  level: r,
  expandable: o = false,
  expandText: t,
  hideText: s,
  hideDivider: i2 = false,
  children: n2,
  expandedAll: l
}) {
  const [d, a] = useState8(null != e2 && e2);
  useEffect6(() => {
    isUndefined(l) || a(l);
  }, [l]);
  const c = d ? cycleColorsByLevel(r) : void 0;
  if (!o)
    return n2;
  return _jsxs17(Wrapper6, {
    $divider: !i2 && !d,
    className: "view-nested-wrapper",
    children: [_jsxs17(ShowProperty, {
      onClick: () => {
        a((e3) => !e3);
      },
      children: [_jsx32(CircleIcon, {
        sign: d ? "-" : "+",
        color: c
      }), !d && t, d && (s || "")]
    }), d && _jsx32(StyledNested, {
      color: c,
      children: n2
    })]
  });
}
var ViewNested = memo16(ViewNestedComponent);
var ShowProperty = styled_components_esm_default.button.withConfig({
  displayName: "ViewNested__ShowProperty",
  componentId: "sc-1ksqd5m-0"
})(["background:none;border:none;cursor:pointer;display:flex;align-items:center;padding:0;gap:var(--spacing-xxs);color:var(--text-color-secondary);font-size:var(--font-size-base);font-family:var(--font-family-base);line-height:var(--line-height-base);margin-top:var(--spacing-xxs);width:100%;"]);
var StyledNested = styled_components_esm_default.div.withConfig({
  displayName: "ViewNested__StyledNested",
  componentId: "sc-1ksqd5m-1"
})(["padding-left:var(--schema-nested-offset);border-left:1px solid ", ";margin:-10px 0 0 9px;", ""], ({
  color: e2
}) => e2 || "var(--border-color-primary)", ({
  color: e2
}) => e2 && Ne([".schema-name{color:", ";}"], e2));
var Wrapper6 = styled_components_esm_default.div.withConfig({
  displayName: "ViewNested__Wrapper",
  componentId: "sc-1ksqd5m-2"
})(["width:100%;", ""], ({
  $divider: e2
}) => e2 && Ne(["border-bottom:1px solid var(--border-color-primary);padding-bottom:var(--schema-property-details-spacing);"]));

// node_modules/@redocly/openapi-docs/lib-esm/components/Schema/SubSchema.js
function SubSchemaComponent({ expandByDefault: e2, deepLink: o, level: r, expandable: t = false, isArray: a = "", propertyLength: n2 = "", children: p, operationPointer: i2 }) {
  var m;
  const s = useTranslate(), l = useLocation3(), u = pathIncludesLink(l, o), d = extractTypeFromDeepLink(o), c = useAtomValue(operationStore(i2)), x = `${s("openapi.actions.show", "Show")} ${1 === Number(n2) ? "" : n2} ${a && "array "}${1 !== n2 ? "properties" : "property"}`;
  return _jsx33(ViewNested, { expandByDefault: e2 || u, level: r, expandable: t, expandText: x, children: p, expandedAll: null === (m = c[d]) || void 0 === m ? void 0 : m.expandedAll });
}
var SubSchema = memo17(SubSchemaComponent);

// node_modules/@redocly/openapi-docs/lib-esm/components/Schema/ObjectSchema.js
function ObjectSchemaComponent({ schema: e2, showTitle: t, discriminator: r, level: i2, skipWriteOnly: a, skipReadOnly: o, fieldParentsName: n2, expandable: s, deepLink: m, required: l, disableDeepLinks: p, oneOfLevel: c }) {
  const { fields: d = [], title: h } = e2, f = useTranslate(), { schemasExpansionLevel: u } = useAtomValue(globalOptionsAtom), x = o || a ? d.filter((e3) => !(o && e3.schema.readOnly || a && e3.schema.writeOnly)) : d, O = getExpandByDefault({ required: l, level: i2, schemasExpansionLevel: u });
  return _jsx34(SubSchema, { expandable: s, expandByDefault: O, level: i2, propertyLength: x.length, deepLink: m, operationPointer: e2.operationPointer, children: _jsxs18(_Fragment11, { children: [t && _jsx34(PropertiesTableCaption, { children: h }), x.map((e3, s2) => _jsx34(PropertyDetails, { isFirst: 0 === s2, field: e3, fieldParentsName: Number(i2) > 1 ? n2 : [], renderDiscriminatorSwitch: (null == r ? void 0 : r.fieldName) === e3.name && (null == r ? void 0 : r.parentSchema) ? () => _jsx34(Discriminator, { parent: r.parentSchema, onChange: null == r ? void 0 : r.onChange, activeOneOfIdx: r.activeOneOfIdx, translate: f }) : void 0, skipReadOnly: o, skipWriteOnly: a, showTitle: t, level: i2, disableDeepLinks: p, oneOfLevel: c }, e3.name))] }) });
}
var ObjectSchema = memo18(ObjectSchemaComponent);

// node_modules/@redocly/openapi-docs/lib-esm/components/Schema/ArraySchema.js
var __rest7 = function(e2, r) {
  var a = {};
  for (var o in e2)
    Object.prototype.hasOwnProperty.call(e2, o) && r.indexOf(o) < 0 && (a[o] = e2[o]);
  if (null != e2 && "function" == typeof Object.getOwnPropertySymbols) {
    var t = 0;
    for (o = Object.getOwnPropertySymbols(e2); t < o.length; t++)
      r.indexOf(o[t]) < 0 && Object.prototype.propertyIsEnumerable.call(e2, o[t]) && (a[o[t]] = e2[o[t]]);
  }
  return a;
};
function ArraySchemaComponent(e2) {
  var r, a, {
    schema: o,
    schema: {
      minItems: t,
      maxItems: l,
      items: n2
    },
    fieldParentsName: s
  } = e2, i2 = __rest7(e2, ["schema", "schema", "fieldParentsName"]);
  const {
    schemasExpansionLevel: m
  } = useAtomValue(globalOptionsAtom), c = void 0 === t && void 0 === l ? "" : `(${humanizeConstraints(o)})`;
  let p = s ? [...s.slice(0, -1), s[s.length - 1] + "[]"] : s;
  const d = useCallback9((e3) => i2.skipReadOnly || i2.skipWriteOnly ? null == e3 ? void 0 : e3.filter((e4) => !(i2.skipReadOnly && e4.schema.readOnly || i2.skipWriteOnly && e4.schema.writeOnly)) : e3, [i2.skipReadOnly, i2.skipWriteOnly]);
  if (null == o ? void 0 : o.fields)
    return _jsx35(ObjectSchema, Object.assign({}, i2, {
      level: (null == i2 ? void 0 : i2.level) || 1,
      schema: o,
      fieldParentsName: p
    }));
  if (o.displayType && !n2 && !c.length)
    return _jsx35("div", {
      children: _jsx35(TypeName, {
        children: o.displayType
      })
    });
  const y = d(null == n2 ? void 0 : n2.fields), h = d(null === (a = null === (r = null == n2 ? void 0 : n2.oneOf) || void 0 === r ? void 0 : r[0]) || void 0 === a ? void 0 : a.fields), u = (null == y ? void 0 : y.length) || (null == h ? void 0 : h.length), b = 1 === i2.level, f = getExpandByDefault({
    level: i2.level,
    required: i2.required,
    schemasExpansionLevel: m
  });
  return _jsx35(SubSchema, Object.assign({}, i2, {
    propertyLength: u,
    isArray: true,
    expandable: !b,
    expandByDefault: f,
    operationPointer: o.operationPointer,
    children: _jsxs19(_Fragment12, {
      children: [b && _jsx35(ArrayLabel, {
        children: _jsx35(LabelValue, {
          children: "Array ["
        })
      }), _jsx35(Schema, Object.assign({}, i2, {
        schema: n2,
        fieldParentsName: p,
        expandable: false
      })), b && _jsx35(ArrayClosingLabel, {
        className: "array-closing-label",
        children: _jsx35(LabelValue, {
          children: "]"
        })
      })]
    })
  }));
}
var ArrayLabel = styled_components_esm_default.span.withConfig({
  displayName: "ArraySchema__ArrayLabel",
  componentId: "sc-1p03qlq-0"
})(["display:flex;align-items:center;gap:var(--spacing-xs);margin-top:var(--spacing-xs);:after{content:'';flex:auto;border-top:1px solid var(--border-color-primary);}"]);
var LabelValue = styled_components_esm_default.span.withConfig({
  displayName: "ArraySchema__LabelValue",
  componentId: "sc-1p03qlq-1"
})(["padding:0 var(--spacing-xs);border-radius:var(--border-radius);border:1px solid var(--border-color-secondary);background-color:var(--bg-color);font-size:var(--font-size-sm);line-height:var(--line-height-sm);color:var(--tag-basic-content-color);"]);
var ArrayClosingLabel = styled_components_esm_default(ArrayLabel).withConfig({
  displayName: "ArraySchema__ArrayClosingLabel",
  componentId: "sc-1p03qlq-2"
})(["margin-top:0;margin-left:auto;:after{content:none;}:before{content:'';flex:auto;border-top:1px solid var(--border-color-primary);}"]);
var ArraySchema = memo19(ArraySchemaComponent);

// node_modules/@redocly/openapi-docs/lib-esm/components/Schema/OneOfSchema.js
import { jsxs as _jsxs21, jsx as _jsx37 } from "react/jsx-runtime";
import { memo as memo21 } from "react";
init_styled_components_esm();

// node_modules/@redocly/openapi-docs/lib-esm/components/common/ConstraintsView.js
init_styled_components_esm();
import { jsxs as _jsxs20, jsx as _jsx36 } from "react/jsx-runtime";
import { memo as memo20 } from "react";
function ConstraintsViewComponent({
  constraints: s
}) {
  return 0 === s.length ? null : _jsx36(Wrapper7, {
    children: s.map((s2) => _jsxs20(Tag3, {
      children: [" ", s2, " "]
    }, s2))
  });
}
var ConstraintsView = memo20(ConstraintsViewComponent);
var Wrapper7 = styled_components_esm_default.div.withConfig({
  displayName: "ConstraintsView__Wrapper",
  componentId: "sc-11a6h8z-0"
})(["margin-top:var(--spacing-xxs);"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/Schema/useOneOfLocationIdx.js
import { useLocation as useLocation4 } from "react-router-dom";
import { useMemo as useMemo8 } from "react";
var OneOfLocationRegex = /(?=oneof=)/g;
function useOneOfLocationIdx(o, e2) {
  const n2 = useLocation4();
  return useMemo8(() => o.findIndex((o2, t) => {
    var r;
    return null === (r = n2.hash.split(OneOfLocationRegex)[e2]) || void 0 === r ? void 0 : r.includes(`oneof=${t}`);
  }), [e2, n2.hash, o]);
}

// node_modules/@redocly/openapi-docs/lib-esm/components/Schema/OneOfSchema.js
var __rest8 = function(e2, o) {
  var t = {};
  for (var n2 in e2)
    Object.prototype.hasOwnProperty.call(e2, n2) && o.indexOf(n2) < 0 && (t[n2] = e2[n2]);
  if (null != e2 && "function" == typeof Object.getOwnPropertySymbols) {
    var r = 0;
    for (n2 = Object.getOwnPropertySymbols(e2); r < n2.length; r++)
      o.indexOf(n2[r]) < 0 && Object.prototype.propertyIsEnumerable.call(e2, n2[r]) && (t[n2[r]] = e2[n2[r]]);
  }
  return t;
};
function OneOfSchemaComponent(e2) {
  var o, {
    schema: {
      oneOf: t
    },
    schema: n2,
    oneOfLevel: r = 1
  } = e2, i2 = __rest8(e2, ["schema", "schema", "oneOfLevel"]);
  const s = useTranslate(), a = useAtomValue(operationStore(n2.operationPointer)), c = useOneOfLocationIdx(t, r), m = -1 === c ? 0 : c, p = t[void 0 !== (null === (o = a.activeOneOf) || void 0 === o ? void 0 : o[n2.pointer]) ? a.activeOneOf[n2.pointer] : m];
  if (!p)
    return null;
  const l = t.map((e3, o2) => ({
    label: e3.title || e3.typePrefix + e3.displayType,
    value: o2
  }));
  return _jsxs21(Wrapper8, {
    children: [_jsxs21(SelectionTitle, {
      children: [n2.oneOfType, ":"]
    }), _jsx37(SchemaSelection, {
      options: l,
      pointer: n2.operationPointer,
      schema: n2,
      defaultOneOfIdx: m
    }), p.deprecated && _jsx37(StyledBadge, {
      deprecated: true,
      children: s("openapi.badges.deprecated", "Deprecated")
    }), p.description && _jsx37(StyledDescription2, {
      source: p.description
    }), _jsx37(ConstraintsView, {
      constraints: p.constraints
    }), _jsx37(Schema, Object.assign({}, i2, {
      schema: p,
      oneOfLevel: r + 1
    }))]
  });
}
var OneOfSchema = memo21(OneOfSchemaComponent);
var StyledDescription2 = styled_components_esm_default(Markdown2).withConfig({
  displayName: "OneOfSchema__StyledDescription",
  componentId: "sc-1qbobex-0"
})(["margin-top:var(--spacing-xs);font-size:var(--font-size-base);line-height:var(--line-height-base);"]);
var Wrapper8 = styled_components_esm_default.div.withConfig({
  displayName: "OneOfSchema__Wrapper",
  componentId: "sc-1qbobex-1"
})(["display:flex;flex-direction:column;align-items:flex-start;width:100%;"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/Schema/RecursiveSchema.js
import { jsx as _jsx38, jsxs as _jsxs22 } from "react/jsx-runtime";
import { memo as memo22 } from "react";
function RecursiveSchemaComponent({ schema: e2 }) {
  const s = useTranslate();
  return _jsxs22("div", { children: [_jsx38(TypeName, { children: e2.displayType }), e2.title && _jsxs22(TypeTitle, { children: [" ", e2.title, " "] }), _jsxs22(RecursiveLabel, { children: [" ", s("openapi.recursive", "Recursive"), " "] })] });
}
var RecursiveSchema = memo22(RecursiveSchemaComponent);

// node_modules/@redocly/openapi-docs/lib-esm/components/Schema/Schema.js
var __rest9 = function(e2, r) {
  var t = {};
  for (var o in e2)
    Object.prototype.hasOwnProperty.call(e2, o) && r.indexOf(o) < 0 && (t[o] = e2[o]);
  if (null != e2 && "function" == typeof Object.getOwnPropertySymbols) {
    var i2 = 0;
    for (o = Object.getOwnPropertySymbols(e2); i2 < o.length; i2++)
      r.indexOf(o[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(e2, o[i2]) && (t[o[i2]] = e2[o[i2]]);
  }
  return t;
};
function SchemaComponent(e2) {
  var r, {
    schema: t,
    onDiscriminatorChange: o
  } = e2, i2 = __rest9(e2, ["schema", "onDiscriminatorChange"]);
  const {
    activeOneOf: n2
  } = useAtomValue(operationStore(null == t ? void 0 : t.operationPointer)), a = useLocation5();
  if (!t)
    return null;
  const {
    type: s,
    oneOf: c,
    discriminatorProp: m,
    isCircular: l
  } = t;
  if (l)
    return _jsx39(RecursiveSchema, {
      schema: t
    });
  if (void 0 !== m) {
    if (!c || !c.length)
      return console.warn(`Looks like you are using discriminator wrong: you don't have any definition inherited from the ${t.title}`), null;
    const e3 = c.findIndex((e4, r3) => pathIncludesLink(a, `d=${r3}`)), r2 = -1 === e3 ? 0 : e3, s2 = c[void 0 !== n2[t.pointer] ? n2[t.pointer] : r2];
    return (null == s2 ? void 0 : s2.isCircular) ? _jsx39(RecursiveSchema, {
      schema: s2
    }) : _jsx39(ObjectSchema, Object.assign({}, i2, {
      schema: s2,
      discriminator: {
        fieldName: m,
        parentSchema: t,
        activeOneOfIdx: r2,
        onChange: o
      }
    }));
  }
  if (void 0 !== c)
    return _jsx39(OneOfSchema, Object.assign({}, i2, {
      schema: t
    }));
  const p = Array.isArray(s) ? s : [s];
  if (p.includes("object")) {
    if (null === (r = t.fields) || void 0 === r ? void 0 : r.length)
      return _jsx39(ObjectSchema, Object.assign({}, i2, {
        schema: t
      }));
  } else if (p.includes("array"))
    return _jsx39(ArraySchema, Object.assign({}, i2, {
      schema: t
    }));
  const d = {
    schema: t,
    name: "",
    description: t.description,
    required: false,
    deprecated: false
  };
  return _jsx39(Wrapper9, {
    children: _jsx39(FieldDetails, {
      field: d,
      fieldParentsName: i2.fieldParentsName
    })
  });
}
var Schema = memo23(SchemaComponent);
var Wrapper9 = styled_components_esm_default.div.withConfig({
  displayName: "Schema__Wrapper",
  componentId: "sc-1adp1bl-0"
})(["padding:var(--spacing-xxs) 0;border-bottom:1px solid var(--border-color-primary);"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/SchemaDefinition/SchemaDefinition.js
var getMediaTypeInfo = (e2, o) => {
  if (!e2)
    return {};
  const a = {
    schema: {
      $ref: e2
    }
  };
  return o && (a.examples = {
    example: {
      $ref: o
    }
  }), a;
};
function SchemaDefinitionComponent({
  schemaRef: e2,
  exampleRef: o,
  showReadOnly: a = true,
  showWriteOnly: t = false
}) {
  var i2, n2, m;
  const s = useAtomValue(layoutAtom), {
    parser: r,
    options: l
  } = useAtomValue(globalStoreAtom), p = useMemo9(() => getMediaType(r, "json", false, getMediaTypeInfo(e2, o), l, {
    operation: {
      pointer: "SchemaDefinitionComponent"
    }
  }), [o, l, r, e2]), [c, d] = useAtom(operationStore(null === (i2 = p.operation) || void 0 === i2 ? void 0 : i2.pointer)), u = useCallback10((e3) => {
    if (!p.schema)
      return;
    const o2 = p.schema, a2 = o2.oneOf;
    if (a2 && (null == p ? void 0 : p.examples) && Object.keys(null == p ? void 0 : p.examples).includes(e3)) {
      const t2 = a2.findIndex((o3) => o3.title === e3);
      -1 !== t2 && o2 && writeAtom(operationStore(o2.operationPointer), (e4) => {
        var a3, i3;
        return Object.assign(Object.assign({}, e4), {
          activeExampleName: (null === (i3 = null === (a3 = o2.oneOf) || void 0 === a3 ? void 0 : a3[t2]) || void 0 === i3 ? void 0 : i3.title) || e4.activeExampleName,
          activeOneOf: Object.assign(Object.assign({}, e4.activeOneOf), {
            [o2.pointer]: t2
          })
        });
      });
    }
    c.activeExampleName !== e3 && d((o3) => Object.assign(Object.assign({}, o3), {
      activeExampleName: e3
    }));
  }, [null == p ? void 0 : p.examples, p.schema, c.activeExampleName, d]), f = s === LayoutVariant.STACKED;
  return _jsx40(Section, {
    children: _jsxs23(Row, {
      layout: s,
      children: [_jsxs23(SamplesMiddlePanel, {
        isStacked: f,
        children: [(null === (n2 = p.schema) || void 0 === n2 ? void 0 : n2.description) && _jsx40(Description, {
          children: _jsx40(Markdown2, {
            source: null === (m = p.schema) || void 0 === m ? void 0 : m.description
          })
        }), _jsx40(Schema, {
          skipWriteOnly: !t,
          skipReadOnly: !a,
          schema: p.schema,
          level: 1
        })]
      }), _jsx40(SamplesPanel, {
        isStacked: f,
        children: _jsx40(CodeBlockPanel, {
          className: "panel-response-samples",
          children: _jsx40(MediaTypeSamples, {
            mediaType: p,
            onChange: u
          })
        })
      })]
    })
  });
}
var SchemaDefinition = memo24(SchemaDefinitionComponent);
var Description = styled_components_esm_default.div.withConfig({
  displayName: "SchemaDefinition__Description",
  componentId: "sc-1mob3p4-0"
})(["margin-bottom:var(--spacing-vertical);"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/RedoclyOpenAPIDocs/Providers.js
var DEFAULT_OPTIONS = { ignoreNamedSchemas: ["java.io.ObjectStreamField"], maxDisplayedEnumValues: 10, markdocOptions: { tags: { schemaDefinition: { render: "SchemaDefinition", attributes: { schemaRef: { type: String }, exampleRef: { type: String }, showReadOnly: { type: Boolean }, showWriteOnly: { type: Boolean }, htmlWrap: { type: String, default: false } } } }, nodes: { heading: { children: ["inline"], attributes: { id: { type: String }, level: { type: Number, required: true, default: 1 } }, transform(e2, t) {
  const o = e2.transformAttributes(t), i2 = e2.transformChildren(t), n2 = "string" == typeof o.id ? o.id : getMarkdownHeaderId(i2);
  return new Tag2("Heading", Object.assign(Object.assign({}, o), { id: n2, level: e2.attributes.level }), i2);
} } }, components: { SchemaDefinition, Heading: default_exports.components.Heading } } };
var StoreProvider = memo25(({ children: e2, options: t, definitionUrl: o, definition: i2, withState: n2 }) => {
  const r = useCallback11(() => {
    const e3 = normalizeOptions(t, DEFAULT_OPTIONS);
    return { options: e3, parser: new OpenAPIParser(i2, o, e3) };
  }, [i2, o, t]), a = useMemo10(() => {
    var e3, t2;
    const o2 = createStore(), i3 = r();
    o2.set(globalStoreAtom, i3);
    const a2 = normalizeServers(i3.parser.definitionUrl, mergeInMockServer((null === (e3 = i3.parser.definition) || void 0 === e3 ? void 0 : e3.servers) || [], i3.options.mockServer)), s = Object.fromEntries(a2.map((e4) => [getServerEnvName(e4), Object.assign({ server: e4.url }, mapObject(e4.variables || {}, (e5) => e5.default || ""))]));
    return o2.sub(appStore, () => {
    }), o2.set(layoutAtom, (null === (t2 = i3.options) || void 0 === t2 ? void 0 : t2.layout) || LayoutVariant.THREE_PANEL), o2.set(environmentAtom, { environments: s }), n2 && o2.set(appStoreOverrideAtom, { environment: n2.environment, environments: n2.environments, activeMimeName: n2.activeMimeName }), (null == n2 ? void 0 : n2.operation) && o2.set(operationStore(n2.operation.pointer), getDefaultOperationStore(n2.operation.pointer, n2.operation.state.requestValues)), o2;
  }, [r, n2]);
  return useEffect7(() => {
    (null == n2 ? void 0 : n2.layout) && a.set(layoutAtom, null == n2 ? void 0 : n2.layout);
  }, [a, null == n2 ? void 0 : n2.layout]), _jsxs24(Provider, { store: a, children: [_jsx41(nexus_default, {}), e2] });
});

// node_modules/@redocly/openapi-docs/lib-esm/components/Overlay.js
init_styled_components_esm();
import { jsx as _jsx42, jsxs as _jsxs25 } from "react/jsx-runtime";
import { useState as useState10, useEffect as useEffect8 } from "react";
var INVALID_KEY = "Invalid license key";
var INVALID_KEY_MISSING = INVALID_KEY + ": missing key";
var EXPIRED = "Invalid license key: expired";
var TRIAL_EXPIRED = EXPIRED;
var INVALID_HOST = "Invalid license key: host not allowed";
var Overlay = ({
  licenseInfo: e2
}) => {
  const [i2, s] = useState10(null), [t, r] = useState10(-1), [l, n2] = useState10(false);
  return useEffect8(() => {
    var i3;
    e2.local ? n2(true) : (e2.valid ? e2.allowed ? e2.expired && s(e2.t ? EXPIRED : TRIAL_EXPIRED) : s(INVALID_HOST) : s(false === e2.valid ? INVALID_KEY + (e2.cryptoMissing ? ": works only with https" : "") : INVALID_KEY_MISSING), e2.t && r(Math.ceil(((null !== (i3 = null == e2 ? void 0 : e2.e) && void 0 !== i3 ? i3 : 0) - Date.now() / 1e3) / 60 / 60 / 24)));
  }, [e2]), l ? _jsxs25(TrialWrap, {
    children: [_jsx42("a", {
      href: "https://redoc.ly",
      children: "Redocly API reference docs"
    }), " preview"]
  }) : !i2 && t > -1 ? _jsxs25(TrialWrap, {
    children: [" Trial version: ", t, " days remaining "]
  }) : i2 ? _jsx42(Flash, {
    children: _jsxs25("span", {
      children: [i2, " ", _jsx42("br", {}), _jsxs25("small", {
        children: ["Please contact ", _jsx42("a", {
          href: "mailto:team@redoc.ly",
          children: "team@redoc.ly"
        }), " to remedy the problem.", " "]
      })]
    })
  }) : null;
};
var TrialWrap = styled_components_esm_default.div.withConfig({
  displayName: "Overlay__TrialWrap",
  componentId: "sc-8job6v-0"
})(["padding:10px 40px;position:fixed;text-align:right;width:100%;box-sizing:border-box;color:orange;z-index:var(--z-index-surface);opacity:0.6;> a,a:visited{color:orange;}"]);
var Flash = styled_components_esm_default.div.withConfig({
  displayName: "Overlay__Flash",
  componentId: "sc-8job6v-1"
})(["font-size:1.5em;position:fixed;z-index:var(--z-index-raised);background:rgba(38,50,56,0.93);margin:0;padding:1em;width:100%;color:white;height:100vh;display:flex;justify-content:center;align-items:center;text-align:center;box-sizing:border-box;> span{display:inline-block;line-height:1.5;}a,a:hover,a:visited{color:white;}"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/RedoclyOpenAPIDocs/styled.js
init_styled_components_esm();
var RedocWrap = styled_components_esm_default.div.withConfig({
  displayName: "styled__RedocWrap",
  componentId: "sc-9v41in-0"
})(["display:flex;position:relative;text-align:left;background-color:var(--bg-color);tap-highlight-color:rgba(0,0,0,0);text-size-adjust:100%;text-rendering:var(--text-rendering,auto) !important;font-family:var(--font-family-base);font-size:var(--font-size-base);line-height:var(--line-height-base);font-weight:var(--font-weight-regular);color:var(--text-color-primary);-webkit-font-text-smoothing:var(--text-smoothing);*{box-sizing:border-box;-webkit-tap-highlight-color:rgba(255,255,255,0);}"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/StickySidebar/StickyResponsiveSidebar.js
init_styled_components_esm();
init_src();
import { jsx as _jsx44, jsxs as _jsxs26, Fragment as _Fragment14 } from "react/jsx-runtime";
import { memo as memo26, useEffect as useEffect9, useRef as useRef6, useState as useState11 } from "react";
import { useLocation as useLocation6 } from "react-router-dom";

// node_modules/@redocly/openapi-docs/lib-esm/components/StickySidebar/SidebarActions.js
import { jsx as _jsx43, Fragment as _Fragment13 } from "react/jsx-runtime";
init_src();
init_styled_components_esm();
var SidebarActions2 = () => {
  const [a, o] = useAtom(layoutAtom), [t, e2] = useAtom(collapsedSidebarAtom);
  return _jsx43(_Fragment13, {
    children: _jsx43(Wrapper10, {
      children: _jsx43(SidebarActions, {
        layout: a,
        onChangeViewClick: () => o(a === LayoutVariant.STACKED ? LayoutVariant.THREE_PANEL : LayoutVariant.STACKED),
        collapsedSidebar: t,
        onChangeCollapseSidebarClick: () => e2(!t),
        isOpenapiDocs: true
      })
    })
  });
};
var Wrapper10 = styled_components_esm_default.div.withConfig({
  displayName: "SidebarActions__Wrapper",
  componentId: "sc-ue8tps-0"
})(["position:sticky;top:calc(100vh);padding:var(--spacing-sm) var(--spacing-md);"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/StickySidebar/StickyResponsiveSidebar.js
var Stickyfill;
IS_BROWSER && (Stickyfill = require_stickyfill());
var stickyfill = Stickyfill && Stickyfill();
var StyledStickySidebar = styled_components_esm_default.div.withConfig({
  displayName: "StickyResponsiveSidebar__StyledStickySidebar",
  componentId: "sc-bz493k-0"
})(["overflow:hidden;flex-direction:column;backface-visibility:hidden;height:", ";top:0;flex:0 0 auto;position:fixed;display:", ";z-index:2;width:100%;background:var(--sidebar-bg-color);border-right:", ";@media screen and (min-width:", "){position:sticky;z-index:auto;width:", ";display:flex;}@media print{display:none;}"], ({
  offsetTop: e2
}) => `calc(100vh - ${e2})`, ({
  open: e2
}) => e2 ? "flex" : "none", ({
  collapsedSidebar: e2
}) => e2 ? "1px solid var(--sidebar-border-color)" : "auto", breakpoints.small, ({
  collapsedSidebar: e2
}) => e2 ? "var(--sidebar-width)" : "auto");
function StickyResponsiveSidebarComponent({
  scrollYOffset: e2,
  className: i2,
  children: t,
  collapsedSidebar: o
}) {
  const [s, r] = useState11("0px"), a = useRef6(null), l = useLocation6(), [n2, d] = useAtom(isSidebarOpenedAtom);
  return useEffect9(() => {
    l.hash && d(false);
  }, [l.pathname, l.hash, d]), useMount(() => {
    stickyfill && stickyfill.add(a.current);
    const i3 = e2();
    r(`${i3}px`);
  }), useUnmount(() => {
    stickyfill && stickyfill.remove(a.current);
  }), _jsx44(_Fragment14, {
    children: _jsxs26(StyledStickySidebar, {
      open: n2,
      className: i2,
      offsetTop: s,
      style: {
        top: s
      },
      ref: a,
      collapsedSidebar: o,
      children: [o || n2 ? t : null, _jsx44(SidebarActions2, {})]
    })
  });
}
var StickyResponsiveSidebar = memo26(StickyResponsiveSidebarComponent);

// node_modules/@redocly/openapi-docs/lib-esm/components/SideMenu/SideMenu.js
init_src();
init_styled_components_esm();
import { jsx as _jsx45 } from "react/jsx-runtime";
import { memo as memo27 } from "react";

// node_modules/@redocly/openapi-docs/lib-esm/components/SideMenu/hooks/useMenuItems.js
init_src();
import { useMemo as useMemo11 } from "react";
import { useLocation as useLocation7 } from "react-router-dom";
function useMenuItems({ items: e2 }) {
  const t = useLocation7(), i2 = useActiveSectionId(t, false, false);
  return useMemo11(() => mapAndSetActiveItems(e2, i2, t), [i2, e2, t]);
}
function mapAndSetActiveItems(e2, t = "", i2) {
  const s = [];
  return convertOpenAPIDocs2Sidebar({ contentItems: e2, sidebarItems: s, activeItemId: t, location: i2 }), s;
}
function isItemActive(e2, t = "", i2) {
  return !!e2.href && (t ? e2.id === t : pathMatchedLink(i2, e2.href));
}
function isSubItemActive(e2, t = "", i2) {
  return (e2.items || []).some((e3) => isItemActive(e3, t, i2) || isSubItemActive(e3, t, i2));
}
function convertOpenAPIDocs2Sidebar(e2) {
  const { contentItems: t, sidebarItems: i2, activeItemId: s, location: c } = e2;
  let o = true;
  for (const n2 of t) {
    const t2 = isItemActive(n2, s, c), a = isSubItemActive(n2, s, c);
    switch (n2.type) {
      case "group":
        i2.push({ type: "separator", label: n2.name, active: t2, hasActiveSubItem: a }), convertOpenAPIDocs2Sidebar(Object.assign(Object.assign({}, e2), { contentItems: n2.items, sidebarItems: i2 }));
        break;
      case "tag":
        const m = { type: "group", label: n2.name, items: [], link: n2.href, active: t2, hasActiveSubItem: a, modified: true };
        i2.push(m), convertOpenAPIDocs2Sidebar({ contentItems: n2.items, sidebarItems: m.items || [], activeItemId: s, location: c });
        break;
      case "operation":
      case "schema":
        n2.isWebhook && o && n2.parent.name !== DEFAULT_WEBHOOKS_TAG_NAME && (i2.push({ type: "separator", label: "Webhooks", variant: "secondary" }), o = false), i2.push({ type: "link", label: n2.name, httpVerb: "schema" === n2.type ? "schema" : n2.httpVerb, link: n2.href, badges: n2.badges, active: t2, hasActiveSubItem: a, modified: true, deprecated: n2.deprecated });
        break;
      case "section":
        if (-1 === n2.depth)
          continue;
        const r = { type: n2.items.length ? "group" : "link", label: n2.name, link: n2.href, items: [], active: t2, hasActiveSubItem: a, modified: true };
        i2.push(r), n2.items.length && convertOpenAPIDocs2Sidebar({ contentItems: n2.items, sidebarItems: r.items, activeItemId: s, location: c });
    }
  }
}

// node_modules/@redocly/openapi-docs/lib-esm/components/SideMenu/SideMenu.js
var SideMenuComponent = ({
  items: e2,
  className: o
}) => {
  const t = useMenuItems({
    items: e2
  });
  return _jsx45(MenuWrapper, {
    className: o,
    children: _jsx45(Menu, {
      items: t
    })
  });
};
var SideMenu = memo27(SideMenuComponent);
var MenuWrapper = styled_components_esm_default.div.withConfig({
  displayName: "SideMenu__MenuWrapper",
  componentId: "sc-gre7nq-0"
})(["overflow:auto;"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/Content/Content.js
import { jsx as _jsx109 } from "react/jsx-runtime";
import { memo as memo57 } from "react";

// node_modules/@redocly/openapi-docs/lib-esm/components/Content/useAutoScroll.js
init_src();
import { useLocation as useLocation8 } from "react-router-dom";
import { useEffect as useEffect10, useLayoutEffect as useLayoutEffect2 } from "react";
var initialPageLoad = true;
function useAutoScroll(e2) {
  const o = useLocation8(), t = e2 || "/";
  useLayoutEffect2(() => {
    if (o.pathname === t && "" === o.hash)
      return void window.scrollTo(0, 0);
    const e3 = removeLeadingSlash(o.pathname.replace(t, "")), a2 = getLegacyHash(o.hash), n2 = a2 ? getElementById(e3 + a2) || document.querySelector(`[id$="${removeLeadingSlash(a2)}"]`) : getElementById(o.hash.replace("#", "").toLowerCase()) || getElementById(e3);
    n2 && n2.scrollIntoView();
  }, [o, t]);
  const a = useActiveSectionId(o, false, false);
  useEffect10(() => {
    if (a && initialPageLoad)
      initialPageLoad = false;
    else if (IS_BROWSER && !window.location.pathname.includes(a) && !window.location.hash.includes(a)) {
      const e3 = compose(addLeadingSlash, encodeBackSlashes)(a);
      window.history.replaceState({}, "", e3);
    }
  }, [a]);
}
function getElementById(e2) {
  return document.getElementById(tryDecodeURIComponent(e2));
}
function getLegacyHash(e2) {
  const o = ["#tag", "#operation", "#paths"];
  for (const t of o)
    if (e2.includes(t))
      return e2.replace(t, "").toLowerCase();
  return "";
}

// node_modules/@redocly/openapi-docs/lib-esm/components/ContentItems/ContentItems.js
import { jsx as _jsx108, jsxs as _jsxs80, Fragment as _Fragment35 } from "react/jsx-runtime";
import { memo as memo56, useMemo as useMemo24 } from "react";
import { Navigate, Route, Routes } from "react-router-dom";

// node_modules/@redocly/openapi-docs/lib-esm/components/ContentItems/helpers.js
function isRootItem(t) {
  return "section" === t.type && "" === t.id;
}
function getItemsByType(t) {
  const e2 = [], r = [], o = [];
  let i2;
  for (const n2 of t)
    switch (n2.type) {
      case "group":
        e2.push(n2);
        break;
      case "tag":
        r.push(n2);
        break;
      case "operation":
        o.push(n2);
        break;
      case "section":
        isRootItem(n2) && (i2 = n2);
    }
  return { groupItems: e2, tagItems: r, operationItems: o, rootItem: i2 };
}
function getFirstPageLink(t, e2) {
  for (const r of t) {
    if ("group" === r.type)
      return getFirstPageLink(r.items, e2);
    if ("tag" === r.type) {
      if (!r.description)
        return normalizePath(getFirstPageLink(r.items, e2));
      if (r.href)
        return normalizePath(r.href);
    } else if ("operation" === r.type || "schema" === r.type)
      return normalizePath(r.href);
  }
  return e2;
}

// node_modules/@redocly/openapi-docs/lib-esm/components/SectionContent/SectionContent.js
init_src();
import { jsx as _jsx107, jsxs as _jsxs79, Fragment as _Fragment34 } from "react/jsx-runtime";
import { useMemo as useMemo23 } from "react";
init_styled_components_esm();

// node_modules/@redocly/openapi-docs/lib-esm/components/ContentItem/ContentItem.js
import { jsx as _jsx105, Fragment as _Fragment33, jsxs as _jsxs78 } from "react/jsx-runtime";
import { memo as memo54 } from "react";

// node_modules/@redocly/openapi-docs/lib-esm/components/TagItem/TagItem.js
init_src();
init_styled_components_esm();
import { jsx as _jsx48, jsxs as _jsxs29 } from "react/jsx-runtime";
import { memo as memo30, useCallback as useCallback13 } from "react";
import { useNavigate as useNavigate3 } from "react-router-dom";

// node_modules/@redocly/openapi-docs/lib-esm/components/TagItem/OperationsNavigation.js
init_src();
init_styled_components_esm();
import { jsx as _jsx47, jsxs as _jsxs28 } from "react/jsx-runtime";
import { useMemo as useMemo12, memo as memo29, useState as useState12, useCallback as useCallback12 } from "react";
import { useNavigate as useNavigate2 } from "react-router-dom";

// node_modules/@redocly/openapi-docs/lib-esm/components/TagItem/OperationNavigationItems.js
init_styled_components_esm();
import { jsx as _jsx46, jsxs as _jsxs27, Fragment as _Fragment15 } from "react/jsx-runtime";
import { memo as memo28 } from "react";

// node_modules/@redocly/openapi-docs/lib-esm/components/TagItem/styled.js
init_styled_components_esm();
init_src();
var StyledButton = styled_components_esm_default(Button).withConfig({
  displayName: "styled__StyledButton",
  componentId: "sc-v53zib-0"
})(["& + &{margin-left:0;}"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/TagItem/OperationNavigationItems.js
function OperationNavigationItemsComponent({
  title: e2,
  items: t,
  onClick: a,
  routingBasePath: r,
  translate: o
}) {
  return _jsxs27(_Fragment15, {
    children: [_jsx46(Heading, {
      children: e2
    }), t.map(({
      id: e3,
      href: t2,
      httpVerb: i2,
      path: n2,
      deprecated: s,
      badges: l
    }) => _jsx46(Item, {
      variant: "outlined",
      size: "large",
      onClick: () => a(joinWithSeparator(r, encodeBackSlashes(t2))),
      children: _jsxs27("span", {
        children: [_jsx46(HttpVerb, {
          color: s ? "http-deprecated" : i2,
          children: i2
        }), _jsx46(Path, {
          children: n2
        }), s && _jsx46(NavigationBadge, {
          deprecated: true,
          children: o("openapi.badges.deprecated", "Deprecated")
        }), null == l ? void 0 : l.map(({
          name: e4,
          color: t3
        }) => _jsx46(NavigationBadge, {
          color: t3,
          children: e4
        }, e4))]
      })
    }, e3))]
  });
}
var OperationNavigationItems = memo28(OperationNavigationItemsComponent);
var Heading = styled_components_esm_default.span.withConfig({
  displayName: "OperationNavigationItems__Heading",
  componentId: "sc-qzywjg-0"
})(["font-size:var(--font-size-base);line-height:var(--line-height-base);font-weight:var(--font-weight-bold);color:var(--text-color-primary);margin:var(--spacing-sm) 0 var(--spacing-xxs) 0;"]);
var Item = styled_components_esm_default(StyledButton).withConfig({
  displayName: "OperationNavigationItems__Item",
  componentId: "sc-qzywjg-1"
})(["border-radius:var(--border-radius);background:var(--bg-color);justify-content:space-between;& > span{display:flex;align-items:baseline;gap:var(--spacing-unit);overflow-x:hidden;}&:hover{background:var(--bg-color);}&:hover::after{content:'\u2192';line-height:var(--line-height-base);}"]);
var Path = styled_components_esm_default.span.withConfig({
  displayName: "OperationNavigationItems__Path",
  componentId: "sc-qzywjg-2"
})(["font-family:var(--font-family-base);font-size:var(--font-size-base);line-height:var(--line-height-base);color:var(--text-color-primary);text-decoration:none;white-space:nowrap;text-overflow:ellipsis;overflow-x:hidden;"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/TagItem/OperationsNavigation.js
var MAX_OPERATIONS = 8;
function OperationsNavigationComponent({
  items: o,
  routingBasePath: t
}) {
  const e2 = useTranslate(), [a, s] = useState12(false), i2 = useNavigate2(), n2 = useAtomValue(layoutAtom) === LayoutVariant.STACKED, {
    operations: r,
    webhooks: p,
    count: m
  } = useMemo12(() => {
    const t2 = o.filter((o2) => "operation" === o2.type), e3 = a ? t2 : t2.slice(0, MAX_OPERATIONS), {
      operations: s2,
      webhooks: i3
    } = e3.reduce((o2, t3) => t3.isWebhook ? Object.assign(Object.assign({}, o2), {
      webhooks: [...o2.webhooks, t3]
    }) : Object.assign(Object.assign({}, o2), {
      operations: [...o2.operations, t3]
    }), {
      operations: [],
      webhooks: []
    });
    return {
      operations: s2,
      webhooks: i3,
      count: !a && t2.length > MAX_OPERATIONS ? t2.length - MAX_OPERATIONS : 0
    };
  }, [a, o]), l = useCallback12((o2) => i2(o2), [i2]);
  return r.length || p.length ? _jsxs28(Wrapper11, {
    isStacked: n2,
    "data-testid": "operation-navigation-list",
    children: [r.length > 0 && _jsx47(OperationNavigationItems, {
      items: r,
      onClick: l,
      routingBasePath: t,
      translate: e2,
      title: e2("openapi.operations", "Operations")
    }), p.length > 0 && _jsx47(OperationNavigationItems, {
      items: p,
      onClick: l,
      routingBasePath: t,
      translate: e2,
      title: e2("openapi.webhooks", "Webhooks")
    }), !a && Boolean(m) && _jsxs28(StyledButton, {
      variant: "link",
      size: "large",
      "data-testid": "show-more-operations",
      fullWidth: true,
      onClick: () => s(true),
      children: [e2("openapi.actions.show", "Show"), " ", m, " ", e2("openapi.actions.more", "more"), "..."]
    })]
  }) : null;
}
var OperationsNavigation = memo29(OperationsNavigationComponent);
var Wrapper11 = styled_components_esm_default(SamplesPanel).withConfig({
  displayName: "OperationsNavigation__Wrapper",
  componentId: "sc-193akoa-0"
})(["display:flex;flex-direction:column;gap:var(--spacing-xxs);padding-top:var(--spacing-xxl);"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/TagItem/TagItem.js
function TagItemComponent({
  item: a,
  routingBasePath: t = "",
  isExpanded: o
}) {
  const e2 = useTranslate(), {
    description: i2,
    name: n2,
    href: r
  } = a, s = useNavigate3(), m = useAtomValue(layoutAtom), d = useCallback13(() => {
    s(t + a.href);
  }, [a.href, s, t]), l = Boolean(a.items.length), p = m === LayoutVariant.STACKED;
  return _jsxs29(Wrapper12, {
    expanded: o,
    children: [_jsxs29(Row, {
      layout: m,
      children: [_jsxs29(SamplesMiddlePanel, {
        fullWidth: !l,
        isStacked: p,
        children: [_jsxs29(Heading2, {
          children: [_jsx48(ShareLink, {
            to: r,
            "aria-label": `link to ${n2}`
          }), n2]
        }), _jsx48(Markdown2, {
          source: i2
        })]
      }), l && _jsx48(OperationsNavigation, {
        items: a.items,
        routingBasePath: t
      })]
    }), l && !o && _jsxs29(ShowButton, {
      type: "button",
      variant: "text",
      size: "medium",
      onClick: d,
      children: ["+ ", e2("openapi.actions.show", "Show")]
    })]
  });
}
var TagItem = memo30(TagItemComponent);
var Wrapper12 = styled_components_esm_default.div.withConfig({
  displayName: "TagItem__Wrapper",
  componentId: "sc-y8qzuu-0"
})(["padding-top:var(--spacing-lg);padding-bottom:", ";"], ({
  expanded: a
}) => a ? "var(--spacing-xxl)" : "");
var ShowButton = styled_components_esm_default(Button).withConfig({
  displayName: "TagItem__ShowButton",
  componentId: "sc-y8qzuu-1"
})(["margin:var(--spacing-md) var(--spacing-xl) var(--spacing-xxs);width:calc(100% - var(--spacing-xl) * 2);@media screen and (min-width:", "){--button-margin-md:calc(var(--spacing-xl) * 2);margin-left:var(--button-margin-md);margin-right:var(--button-margin-md);width:calc(100% - var(--button-margin-md) * 2);}"], breakpoints.medium);
var Heading2 = styled_components_esm_default(H2).withConfig({
  displayName: "TagItem__Heading",
  componentId: "sc-y8qzuu-2"
})([":hover{", "{opacity:1;visibility:visible;}}"], LinkIcon);

// node_modules/@redocly/openapi-docs/lib-esm/components/SectionItem/SectionItem.js
import { jsx as _jsx49, Fragment as _Fragment16, jsxs as _jsxs30 } from "react/jsx-runtime";
import { memo as memo31 } from "react";
init_src();
function SectionItemComponent({ item: t }) {
  const { externalDocs: o, ast: e2, description: a } = t, m = useAtomValue(layoutAtom) === LayoutVariant.STACKED, r = !t.parent || "tag" !== t.parent.type;
  return _jsxs30(_Fragment16, { children: [_jsx49(Markdown2, { ast: e2, source: a, htmlWrap: (t2) => _jsx49(SamplesMiddlePanel, { compact: true, fullWidth: r, isStacked: m, children: t2 }) }), o && _jsx49(Row, { children: _jsx49(SamplesMiddlePanel, { compact: true, fullWidth: r, isStacked: m, children: _jsx49(ExternalDocumentation, { externalDocs: o }) }) })] });
}
var SectionItem = memo31(SectionItemComponent);

// node_modules/@redocly/openapi-docs/lib-esm/components/OperationItem/OperationItem.js
init_styled_components_esm();
import { jsx as _jsx98, jsxs as _jsxs71, Fragment as _Fragment29 } from "react/jsx-runtime";
import { memo as memo52, useState as useState19, useCallback as useCallback23, useMemo as useMemo19 } from "react";
import { useLocation as useLocation11 } from "react-router-dom";
init_src();

// node_modules/@redocly/openapi-docs/lib-esm/components/Callbacks/CallbackOperation.js
init_styled_components_esm();
import { jsx as _jsx71, jsxs as _jsxs49 } from "react/jsx-runtime";
import { useLocation as useLocation10 } from "react-router-dom";

// node_modules/@redocly/openapi-docs/lib-esm/components/Panel/Trigger.js
init_styled_components_esm();
var Trigger = styled_components_esm_default.div.withConfig({
  displayName: "Trigger",
  componentId: "sc-2o4rbg-0"
})(["display:inline-flex;align-items:center;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/Panel/ResponsePanel.js
init_styled_components_esm();
init_src();
var StyledResponsePanel = styled_components_esm_default(Panel).withConfig({
  displayName: "ResponsePanel__StyledResponsePanel",
  componentId: "sc-ch69b3-0"
})(["", "{&:first-child{margin-top:0;}}", "{flex:1;max-width:100%;justify-content:space-between;}"], FieldsGroupHeader, Trigger);
var CallbackPanel = styled_components_esm_default(StyledResponsePanel).withConfig({
  displayName: "ResponsePanel__CallbackPanel",
  componentId: "sc-ch69b3-1"
})(["border-bottom:1px solid var(--border-color-primary);&:not(:last-child){margin-bottom:0;border-radius:0;}", "{max-width:calc(100% - 9px - var(--spacing-unit));justify-content:flex-start;}"], Trigger);

// node_modules/@redocly/openapi-docs/lib-esm/components/Callbacks/CallbackDetails.js
init_styled_components_esm();
init_src();
import { jsx as _jsx69, jsxs as _jsxs47, Fragment as _Fragment26 } from "react/jsx-runtime";
import { memo as memo41, useCallback as useCallback15 } from "react";

// node_modules/@redocly/openapi-docs/lib-esm/components/Responses/ResponseDetails.js
import { jsx as _jsx52, Fragment as _Fragment18, jsxs as _jsxs33 } from "react/jsx-runtime";
import { memo as memo34 } from "react";

// node_modules/@redocly/openapi-docs/lib-esm/components/Responses/ResponseHeaders.js
import { jsx as _jsx50, jsxs as _jsxs31 } from "react/jsx-runtime";
import { memo as memo32 } from "react";

// node_modules/@redocly/openapi-docs/lib-esm/components/Responses/styled.js
init_styled_components_esm();

// node_modules/@redocly/openapi-docs/lib-esm/components/common/OperationItemTitle.js
init_styled_components_esm();
init_src();
var Title2 = styled_components_esm_default.h4.withConfig({
  displayName: "OperationItemTitle__Title",
  componentId: "sc-1faa9h7-0"
})(["font-size:var(--h4-font-size);font-weight:var(--h4-font-weight);line-height:var(--h4-line-height);padding:0;color:var(--h4-text-color);margin:0 0 var(--h4-margin-bottom) 0;display:flex;align-items:center;justify-content:space-between;position:relative;:hover{", "{opacity:1;visibility:visible;}}"], LinkIcon);
var Heading3 = styled_components_esm_default(H2).withConfig({
  displayName: "OperationItemTitle__Heading",
  componentId: "sc-1faa9h7-1"
})(["position:relative;display:flex;align-items:center;gap:var(--spacing-xs);flex-wrap:wrap;:hover{", "{opacity:1;visibility:visible;}}"], LinkIcon);

// node_modules/@redocly/openapi-docs/lib-esm/components/Responses/styled.js
var HeadersCaption = styled_components_esm_default.div.withConfig({
  displayName: "styled__HeadersCaption",
  componentId: "sc-5yzfvj-0"
})(["position:relative;display:flex;align-items:center;gap:var(--spacing-xs);font-size:18px;line-height:var(--line-height-lg);font-weight:var(--font-weight-semibold);color:var(--text-color-primary);padding:var(--spacing-xxs) 0;"]);
var StyledHeadersProperties = styled_components_esm_default.div.withConfig({
  displayName: "styled__StyledHeadersProperties",
  componentId: "sc-5yzfvj-1"
})(["margin-top:var(--spacing-md);"]);
var Row4 = styled_components_esm_default.div.withConfig({
  displayName: "styled__Row",
  componentId: "sc-5yzfvj-2"
})(["display:flex;align-items:center;margin-top:var(--spacing-base);"]);
var StyledTitle = styled_components_esm_default(Title2).withConfig({
  displayName: "styled__StyledTitle",
  componentId: "sc-5yzfvj-3"
})(["margin:0 var(--spacing-sm) 0 0;position:relative;"]);
var StyledDescription3 = styled_components_esm_default(Markdown2).withConfig({
  displayName: "styled__StyledDescription",
  componentId: "sc-5yzfvj-4"
})(["margin-top:var(--spacing-xs);"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/Responses/ResponseHeaders.js
function ResponseHeadersComponent({ headers: e2, deepLink: s }) {
  const r = useTranslate();
  return void 0 === e2 || 0 === e2.length ? null : _jsxs31(StyledHeadersProperties, { children: [_jsxs31(HeadersCaption, { children: [s && _jsx50(LinkToField, { to: s }), r("openapi.header", "Headers")] }), e2.map((e3, r2) => _jsx50(PropertyDetails, { isFirst: 0 === r2, field: e3, disableDeepLinks: !s }, e3.name))] });
}
var ResponseHeaders = memo32(ResponseHeadersComponent);

// node_modules/@redocly/openapi-docs/lib-esm/components/common/BodyContent/BodyContent.js
init_styled_components_esm();
import { jsx as _jsx51, jsxs as _jsxs32, Fragment as _Fragment17 } from "react/jsx-runtime";
import { memo as memo33 } from "react";
init_src();
function BodyContentComponent({
  required: e2,
  skipReadOnly: o,
  skipWriteOnly: i2,
  description: t,
  content: n2,
  deepLink: r
}) {
  const a = useTranslate(), [s, m] = useAtom(activeMimeNameAtom);
  if (!n2)
    return null;
  const {
    schema: l,
    examples: p,
    operation: d,
    name: c
  } = getActiveMediaType(n2, s), g = n2.mediaTypes.map(({
    name: e3
  }) => ({
    label: e3,
    value: e3
  }));
  return _jsxs32(_Fragment17, {
    children: [_jsxs32(Title3, {
      children: [r && _jsx51(LinkToField, {
        to: r
      }), a("openapi.body", "Body"), _jsx51(Dropdown2, {
        options: g,
        value: c,
        triggerVariant: "ghost",
        triggerSize: "large",
        onChange: ({
          value: e3
        }) => m(e3)
      })]
    }), e2 && _jsx51(RequiredLabel, {
      children: a("openapi.badges.required", "required")
    }), _jsx51(StyledMarkdown2, {
      source: t
    }), "object" === (null == l ? void 0 : l.type) && (null == l ? void 0 : l.constraints) && _jsx51(ConstraintsView, {
      constraints: (null == l ? void 0 : l.constraints) || []
    }), _jsx51(Schema, {
      skipReadOnly: o,
      skipWriteOnly: i2,
      schema: l,
      examples: p,
      operation: d,
      level: 1,
      disableDeepLinks: !r
    }, "schema")]
  });
}
var BodyContent = memo33(BodyContentComponent);
var StyledMarkdown2 = styled_components_esm_default(Markdown2).withConfig({
  displayName: "BodyContent__StyledMarkdown",
  componentId: "sc-kanghk-0"
})(["margin:var(--spacing-xxs) 0 0;"]);
var Title3 = styled_components_esm_default.span.withConfig({
  displayName: "BodyContent__Title",
  componentId: "sc-kanghk-1"
})(["position:relative;display:flex;align-items:center;gap:var(--spacing-xxs);font-weight:var(--font-weight-semibold);color:var(--text-color-primary);margin-top:var(--spacing-md);font-size:18px;line-height:var(--line-height-lg);padding:var(--spacing-xxs) 0;:hover{", "{opacity:1;visibility:visible;}}& button:not(:has(*)){font-family:var(--font-family-monospaced);font-size:var(--font-size-sm);line-height:var(--line-height-lg);}"], LinkIcon);

// node_modules/@redocly/openapi-docs/lib-esm/components/Responses/ResponseDetails.js
function ResponseDetailsComponent({ response: e2, operationId: s, callbackId: o, disableDeepLinks: n2 }) {
  const { description: r, headers: t, content: i2, summary: a, code: m } = e2;
  return _jsxs33(_Fragment18, { children: [_jsx52(StyledDescription3, { className: "redoc-markdown", source: a }), _jsx52(StyledDescription3, { className: "redoc-markdown", source: r }), _jsx52(ResponseHeaders, { headers: t, deepLink: n2 ? void 0 : generateDeepLink2(s, o, m, "headers") }), _jsx52(BodyContent, { content: i2, skipWriteOnly: true, deepLink: n2 ? void 0 : generateDeepLink2(s, o, m, "body") })] });
}
var ResponseDetails = memo34(ResponseDetailsComponent);
function generateDeepLink2(e2, s = "", o, n2) {
  return makeDeepLink(e2, s ? `${s}/response&c=${o}/${n2}` : `response&c=${o}/${n2}`);
}

// node_modules/@redocly/openapi-docs/lib-esm/components/Responses/OperationResponseList.js
init_styled_components_esm();
import { jsx as _jsx55, jsxs as _jsxs34, Fragment as _Fragment19 } from "react/jsx-runtime";
import { memo as memo35, useMemo as useMemo13 } from "react";
import { useLocation as useLocation9 } from "react-router-dom";

// node_modules/@redocly/openapi-docs/lib-esm/components/Tabs/Tabs.js
init_styled_components_esm();
init_src();
import { jsx as _jsx53 } from "react/jsx-runtime";
function Tabs({
  tabs: e2,
  onChange: t,
  activeTab: r
}) {
  return _jsx53(TabList, {
    children: e2.map((e3) => _jsx53(Tab, {
      $active: e3.key === (null == r ? void 0 : r.key),
      onClick: () => t(e3),
      children: _jsx53(StatusCode, {
        status: e3.key,
        children: e3.title
      })
    }, e3.key))
  });
}
var TabList = styled_components_esm_default.ol.withConfig({
  displayName: "Tabs__TabList",
  componentId: "sc-40rbkb-0"
})(["display:flex;flex-wrap:wrap;list-style:none;margin:0;padding:0;"]);
var Tab = styled_components_esm_default.li.withConfig({
  displayName: "Tabs__Tab",
  componentId: "sc-40rbkb-1"
})(["display:inline-flex;align-items:center;list-style:none;padding:0 var(--spacing-sm);background-color:transparent;height:24px;border-radius:var(--border-radius);font-family:var(--font-family-base);font-size:var(--font-size-base);font-weight:var(--font-weight-regular);line-height:var(--line-height-base);&,button{color:var(--text-color-secondary);", "}"], ({
  $active: e2
}) => e2 ? Ne(["color:var(--text-color-primary);background-color:var(--tab-bg-color-filled);"]) : Ne(["&:hover{color:var(--text-color-primary);}"]));

// node_modules/@redocly/openapi-docs/lib-esm/components/Tabs/useTabsState.js
init_src();
import { useCallback as useCallback14, useState as useState13 } from "react";
function useTabsState({ tabs: e2, defaultTab: t, onChange: a }) {
  const [u, n2] = useState13(t || e2[0].key);
  useMount(() => {
    t && (n2(t), null == a || a(t));
  });
  const o = useCallback14((e3) => {
    u !== e3.key && n2(e3.key), null == a || a(e3.key);
  }, [u, a]);
  return { activeTab: u, handleTabChange: o };
}

// node_modules/@redocly/openapi-docs/lib-esm/components/ExpandAllButton/ExpandAllButton.js
init_styled_components_esm();
init_src();
import { jsx as _jsx54 } from "react/jsx-runtime";
var ExpandAllButton = ({
  operationPointer: o,
  type: t
}) => {
  const e2 = useTranslate(), [n2, a] = useAtom(operationStore(o));
  return _jsx54(StyledButton2, {
    icon: _jsx54(MaximizeIcon, {}),
    iconPosition: "right",
    size: "small",
    variant: "ghost",
    onClick: () => {
      a((o2) => {
        const e3 = !o2[t].expandedAll;
        return Object.assign(Object.assign({}, o2), {
          [t]: {
            expandedAll: e3
          }
        });
      });
    },
    children: n2[t].expandedAll ? e2("openapi.collapseAll", "Collapse all") : e2("openapi.expandAll", "Expand all")
  });
};
var StyledButton2 = styled_components_esm_default(Button).withConfig({
  displayName: "ExpandAllButton__StyledButton",
  componentId: "sc-vm40in-0"
})(["margin-left:auto;"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/Responses/OperationResponseList.js
var OperationResponseList = memo35(({
  responses: e2,
  renderTitle: o,
  operationId: t,
  operationPointer: s,
  activeResponseTab: i2,
  onTabChange: n2,
  callbackId: a
}) => {
  const r = useLocation9(), l = useTranslate(), [m] = useAtomValue(activeMimeNameAtom), p = e2.map(({
    code: e3
  }) => ({
    key: e3,
    title: e3
  })), d = p.find(({
    key: e3
  }) => e3 === i2 || pathIncludesLink(r, t) && pathIncludesLink(r, `c=${e3}`)), {
    activeTab: c,
    handleTabChange: u
  } = useTabsState({
    tabs: p,
    defaultTab: null == d ? void 0 : d.key,
    onChange: n2
  }), T = p.find((e3) => e3.key === (i2 || c)), f = e2.find((e3) => e3.code === (null == T ? void 0 : T.key)), v = useMemo13(() => {
    var e3;
    if (!(null == f ? void 0 : f.content))
      return false;
    const {
      schema: o2
    } = getActiveMediaType(null == f ? void 0 : f.content, m) || {};
    return null === (e3 = null == o2 ? void 0 : o2.fields) || void 0 === e3 ? void 0 : e3.some(({
      schema: e4
    }) => !e4.isPrimitive && !e4.isCircular);
  }, [m, null == f ? void 0 : f.content]);
  return T ? _jsxs34(_Fragment19, {
    children: [_jsxs34(TitleWrap, {
      children: [(null == o ? void 0 : o(T)) || _jsxs34(StyledTitle, {
        children: [_jsx55(LinkToField, {
          to: makeDeepLink(t, `response&c=${T.key}`)
        }), l("openapi.responses", "Responses")]
      }), _jsx55(Tabs, {
        tabs: p,
        activeTab: T,
        onChange: u
      }), v && _jsx55(ExpandAllButton, {
        type: "response",
        operationPointer: s
      })]
    }), f ? _jsx55("div", {
      children: _jsx55(ResponseDetails, {
        response: f,
        operationId: t,
        callbackId: a
      })
    }, f.code) : null]
  }) : null;
});
var TitleWrap = styled_components_esm_default(Row4).withConfig({
  displayName: "OperationResponseList__TitleWrap",
  componentId: "sc-1pf6k5i-0"
})(["flex-wrap:wrap;gap:var(--spacing-unit);"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/Request/RequestDetails.js
import { jsx as _jsx68, jsxs as _jsxs46, Fragment as _Fragment25 } from "react/jsx-runtime";
import { memo as memo40, useMemo as useMemo14 } from "react";
init_styled_components_esm();

// node_modules/@redocly/openapi-docs/lib-esm/components/OperationItem/Description.js
import { jsx as _jsx57, Fragment as _Fragment20, jsxs as _jsxs36 } from "react/jsx-runtime";

// node_modules/@redocly/openapi-docs/lib-esm/components/common/Extensions.js
init_styled_components_esm();
import { jsxs as _jsxs35, jsx as _jsx56 } from "react/jsx-runtime";
import { memo as memo36 } from "react";
init_src();
var Extension = styled_components_esm_default(Markdown).withConfig({
  displayName: "Extensions__Extension",
  componentId: "sc-1gqz8aj-0"
})(["margin:2px 0;"]);
function ExtensionsComponent2({
  extensions: o
}) {
  const {
    showExtensions: s
  } = useAtomValue(globalOptionsAtom);
  return s ? _jsx56("div", {
    children: Object.keys(o).map((s2) => _jsxs35(Extension, {
      children: [_jsxs35(FieldLabel, {
        children: [s2.substring(2), ": "]
      }), " ", _jsx56(ExtensionValue, {
        children: "string" == typeof o[s2] ? o[s2] : JSON.stringify(o[s2])
      })]
    }, s2))
  }) : null;
}
var Extensions2 = memo36(ExtensionsComponent2);

// node_modules/@redocly/openapi-docs/lib-esm/components/OperationItem/Description.js
function Description2({ description: n2, externalDocs: t, extensions: e2 }) {
  return n2 ? _jsxs36(_Fragment20, { children: [_jsx57(Markdown2, { source: n2 }), t && _jsx57(ExternalDocumentation, { externalDocs: t }), Object.keys(e2 || {}).length ? _jsx57(Extensions2, { extensions: e2 }) : null] }) : null;
}

// node_modules/@redocly/openapi-docs/lib-esm/components/Security/Security.js
init_src();
import { jsx as _jsx64, Fragment as _Fragment23, jsxs as _jsxs43 } from "react/jsx-runtime";
import { useState as useState15 } from "react";

// node_modules/@redocly/openapi-docs/lib-esm/components/Security/SecurityButton.js
init_styled_components_esm();
init_src();
import { jsx as _jsx58, jsxs as _jsxs37 } from "react/jsx-runtime";
function SecurityButton({
  securities: e2,
  onClick: t
}) {
  return _jsxs37(StyledButton3, {
    onClick: t,
    children: [_jsx58(SecurityIcon, {}), _jsx58(Title4, {
      children: "Security:"
    }), _jsx58(SecurityList, {
      children: e2.map((t2) => {
        const i2 = e2.length > 1 && t2.schemes.length > 1;
        return `
          ${i2 ? "(" : ""}
          ${t2.schemes.map(({
          id: e3
        }) => e3).join(" and ")}
          ${i2 ? ")" : ""}
          `;
      }).join(" or ")
    })]
  });
}
var StyledButton3 = styled_components_esm_default.button.withConfig({
  displayName: "SecurityButton__StyledButton",
  componentId: "sc-9uf09-0"
})(["display:flex;align-items:center;align-self:flex-start;gap:var(--spacing-xxs);min-height:32px;background:var(--color-info-bg);padding:0 var(--spacing-xs);margin-top:var(--spacing-base);color:var(--link-color-primary);border:none;font-size:var(--font-size-base);font-family:var(--font-family-base);line-height:var(--line-height-base);border-radius:var(--border-radius-md);max-width:100%;"]);
var Title4 = styled_components_esm_default.span.withConfig({
  displayName: "SecurityButton__Title",
  componentId: "sc-9uf09-1"
})(["font-family:var(--font-family-monospaced);font-weight:var(--font-weight-semibold);letter-spacing:-0.5px;"]);
var SecurityList = styled_components_esm_default.span.withConfig({
  displayName: "SecurityButton__SecurityList",
  componentId: "sc-9uf09-2"
})(["flex:1;cursor:pointer;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/Security/SecurityModal.js
init_styled_components_esm();
init_src();
import { jsx as _jsx63, jsxs as _jsxs42 } from "react/jsx-runtime";
import { Fragment as Fragment2, useState as useState14, useRef as useRef7 } from "react";

// node_modules/@redocly/openapi-docs/lib-esm/components/Security/SecurityFlow.js
init_styled_components_esm();
import { jsx as _jsx61, Fragment as _Fragment22, jsxs as _jsxs40 } from "react/jsx-runtime";

// node_modules/@redocly/openapi-docs/lib-esm/components/Security/SecuritySchemeItem.js
init_styled_components_esm();
import { jsx as _jsx59, jsxs as _jsxs38 } from "react/jsx-runtime";
function SecuritySchemeItem({
  label: e2,
  value: t
}) {
  return e2 && t ? _jsxs38(Row5, {
    children: [_jsx59(Label, {
      children: e2
    }), _jsx59(Value, {
      children: t
    })]
  }) : null;
}
var Row5 = styled_components_esm_default.div.withConfig({
  displayName: "SecuritySchemeItem__Row",
  componentId: "sc-zl68ja-0"
})(["display:flex;justify-content:flex-start;margin-bottom:var(--spacing-xxs);font-size:var(--font-size-sm);color:var(--text-color-secondary);"]);
var Label = styled_components_esm_default.div.withConfig({
  displayName: "SecuritySchemeItem__Label",
  componentId: "sc-zl68ja-1"
})(["display:flex;align-items:center;justify-content:flex-start;font-size:var(--font-size-base);line-height:var(--line-height-base);flex:1;"]);
var Value = styled_components_esm_default.div.withConfig({
  displayName: "SecuritySchemeItem__Value",
  componentId: "sc-zl68ja-2"
})(["flex:1;font-size:var(--font-size-base);line-height:var(--line-height-base);word-break:break-word;"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/Security/OAuthFlow.js
init_styled_components_esm();
import { jsx as _jsx60, Fragment as _Fragment21, jsxs as _jsxs39 } from "react/jsx-runtime";
import { memo as memo37 } from "react";

// node_modules/@redocly/openapi-docs/lib-esm/components/Security/styled.js
init_styled_components_esm();
var Tag4 = styled_components_esm_default.div.withConfig({
  displayName: "styled__Tag",
  componentId: "sc-rcquvv-0"
})(["border-radius:var(--border-radius);padding:0 var(--spacing-xxs);font-family:var(--font-family-monospaced);font-size:var(--font-size-sm);line-height:var(--line-height-sm);color:var(--text-color-primary);background-color:var(--tag-bg-color);"]);
var StyledLink = styled_components_esm_default.a.withConfig({
  displayName: "styled__StyledLink",
  componentId: "sc-rcquvv-1"
})(["color:var(--link-color-primary);text-decoration:none;word-wrap:break-word;"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/Security/OAuthFlow.js
function OAuthFlowComponent({
  flow: e2
}) {
  const r = Object.keys((null == e2 ? void 0 : e2.scopes) || {}), o = useTranslate();
  return _jsxs39(_Fragment21, {
    children: [_jsx60(SecuritySchemeItem, {
      label: `${o("openapi.authorizationUrl", "Authorization URL")}:`,
      value: (null == e2 ? void 0 : e2.authorizationUrl) && _jsx60(StyledLink, {
        target: "_blank",
        rel: "noopener noreferrer",
        href: null == e2 ? void 0 : e2.authorizationUrl,
        children: null == e2 ? void 0 : e2.authorizationUrl
      })
    }), _jsx60(SecuritySchemeItem, {
      label: `${o("openapi.tokenUrl", "Token URL")}:`,
      value: null == e2 ? void 0 : e2.tokenUrl
    }), _jsx60(SecuritySchemeItem, {
      label: `${o("openapi.refreshUrl", "Refresh URL")}:`,
      value: null == e2 ? void 0 : e2.refreshUrl
    }), r.length && _jsxs39(_Fragment21, {
      children: [_jsx60(SecuritySchemeItem, {
        label: `${o("openapi.scopes", "Scopes")}:`,
        value: " "
      }), r.map((r2) => _jsx60(SecuritySchemeItem, {
        label: _jsx60(StyledTag, {
          className: "tag-grey",
          children: r2
        }),
        value: _jsx60(Markdown2, {
          source: (null == e2 ? void 0 : e2.scopes[r2]) || ""
        })
      }, r2))]
    }) || null]
  });
}
var StyledTag = styled_components_esm_default(Tag4).withConfig({
  displayName: "OAuthFlow__StyledTag",
  componentId: "sc-6njw0u-0"
})(["margin-left:var(--spacing-xs);"]);
var OAuthFlow = memo37(OAuthFlowComponent);

// node_modules/@redocly/openapi-docs/lib-esm/components/Security/helper.js
function getRequiredScopes(e2, r) {
  const o = /* @__PURE__ */ new Set();
  return r.forEach(({ schemes: r2 }) => {
    r2.forEach(({ id: r3, scopes: c }) => {
      r3 === e2 && c.forEach((e3) => o.add(e3));
    });
  }), Array.from(o);
}

// node_modules/@redocly/openapi-docs/lib-esm/components/Security/SecurityFlow.js
function SecurityFlow({
  type: e2,
  bearerFormat: r,
  name: t,
  flows: a,
  openIdConnectUrl: o,
  description: i2,
  id: s,
  securities: n2,
  in: l
}) {
  const m = useTranslate();
  if (!e2 || !s)
    return null;
  const c = getRequiredScopes(s, n2), p = {
    http: _jsxs40(_Fragment22, {
      children: [_jsx61(SecuritySchemeItem, {
        label: m("openapi.httpAuthorizationScheme", "HTTP Authorization Scheme"),
        value: e2
      }), _jsx61(SecuritySchemeItem, {
        label: m("openapi.bearerFormat", "Bearer Format"),
        value: r
      })]
    }),
    apiKey: _jsx61(SecuritySchemeItem, {
      label: `${titleize(l || "")} ${m("openapi.parameterName", "parameter name")}:`,
      value: t
    }),
    oauth2: _jsxs40(_Fragment22, {
      children: [_jsx61(SecuritySchemeItem, {
        label: m("openapi.flowType", "Flow type"),
        value: e2
      }), a && Object.keys(a).map((e3) => _jsx61(OAuthFlow, {
        flow: a[e3]
      }, e3))]
    }),
    openIdConnect: _jsx61(SecuritySchemeItem, {
      label: m("openapi.connectUrl", "Connect URL"),
      value: o && _jsx61(StyledLink, {
        target: "_blank",
        rel: "noopener noreferrer",
        href: o,
        children: o
      })
    })
  };
  return _jsxs40(Wrapper13, {
    children: [_jsx61(TitleSchema, {
      children: s
    }), _jsx61(Markdown2, {
      source: i2
    }), _jsxs40(List, {
      children: [p[e2] || null, _jsx61(SecuritySchemeItem, {
        label: m("openapi.requiredScopes", "Required scopes"),
        value: c.length && _jsx61(Row6, {
          children: c.map((e3) => _jsx61(Tag4, {
            className: "tag-grey",
            children: e3
          }, e3))
        })
      })]
    })]
  });
}
var Wrapper13 = styled_components_esm_default.div.withConfig({
  displayName: "SecurityFlow__Wrapper",
  componentId: "sc-1g1ayjw-0"
})(["background:var(--layer-color);padding:var(--spacing-base);border-radius:var(--border-radius);border:1px solid var(--border-color-secondary);width:100%;margin-top:var(--spacing-base);"]);
var List = styled_components_esm_default.div.withConfig({
  displayName: "SecurityFlow__List",
  componentId: "sc-1g1ayjw-1"
})(["width:100%;margin-top:var(--spacing-md);"]);
var Row6 = styled_components_esm_default.div.withConfig({
  displayName: "SecurityFlow__Row",
  componentId: "sc-1g1ayjw-2"
})(["display:flex;gap:var(--spacing-xxs);word-break:normal;"]);
var TitleSchema = styled_components_esm_default.p.withConfig({
  displayName: "SecurityFlow__TitleSchema",
  componentId: "sc-1g1ayjw-3"
})(["font-size:var(--font-size-base);margin:0 0 var(--spacing-xs);text-transform:capitalize;font-weight:var(--font-weight-semibold);"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/Security/Divider.js
init_styled_components_esm();
import { jsx as _jsx62, jsxs as _jsxs41 } from "react/jsx-runtime";
function Divider({
  label: r
}) {
  return _jsxs41(Wrapper14, {
    children: [_jsx62(Tag4, {
      className: "tag-grey",
      children: r
    }), " ", _jsx62("hr", {})]
  });
}
var Wrapper14 = styled_components_esm_default.div.withConfig({
  displayName: "Divider__Wrapper",
  componentId: "sc-1vh371k-0"
})(["font-size:var(--font-size-sm);width:100%;display:flex;align-items:center;margin:var(--spacing-base) 0;hr{height:1px;border:none;background:var(--border-color-primary);width:100%;margin-left:var(--spacing-xs);}"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/Security/SecurityModal.js
function SecurityModal({
  securities: e2,
  onClose: t
}) {
  const s = useTranslate(), [o, i2] = useState14(0), r = useRef7(null), {
    schemes: a
  } = e2[o] || {};
  useOutsideClick(r, t), useFocusTrap(r);
  const n2 = e2.map(({
    schemes: e3
  }, t2) => ({
    label: e3.map(({
      id: e4
    }) => e4).join(" and "),
    value: t2
  }));
  return _jsx63(StyledBackground, {
    children: _jsxs42(Wrapper15, {
      ref: r,
      tabIndex: 0,
      children: [_jsx63(Close, {
        onClick: t,
        "data-testid": "close",
        variant: "ghost",
        icon: _jsx63(CloseIcon, {})
      }), _jsxs42(Title5, {
        children: [_jsx63(SecurityIcon, {
          size: "24px"
        }), s("openapi.security", "Security")]
      }), _jsx63(Segmented, {
        value: o,
        onChange: ({
          value: e3
        }) => i2(e3),
        options: n2
      }), a.map((t2, s2) => _jsxs42(Fragment2, {
        children: [_jsx63(SecurityFlow, Object.assign({}, t2, {
          securities: e2
        })), s2 !== a.length - 1 && _jsx63(Divider, {
          label: "and"
        })]
      }, t2.id))]
    })
  });
}
var Wrapper15 = styled_components_esm_default.div.withConfig({
  displayName: "SecurityModal__Wrapper",
  componentId: "sc-1woyfh8-0"
})(["background:var(--bg-color);box-shadow:var(--bg-raised-shadow);border-radius:var(--border-radius-lg);padding:var(--spacing-lg);display:flex;flex-direction:column;align-items:flex-start;position:absolute;width:720px;max-width:100%;height:auto;max-height:600px;overflow-y:scroll;left:50%;top:100px;transform:translateX(-50%);.tag-grey span{font-size:var(--font-size-base);line-height:var(--line-height-base);}"]);
var StyledBackground = styled_components_esm_default.div.withConfig({
  displayName: "SecurityModal__StyledBackground",
  componentId: "sc-1woyfh8-1"
})(["background:var(--bg-color-modal-overlay);position:fixed;width:100vw;height:100vh;z-index:var(--z-index-popover);left:0;top:0;pointer-events:auto;"]);
var Close = styled_components_esm_default(Button).withConfig({
  displayName: "SecurityModal__Close",
  componentId: "sc-1woyfh8-2"
})(["position:absolute;right:var(--spacing-md);top:var(--spacing-md);"]);
var Title5 = styled_components_esm_default(Typography).withConfig({
  displayName: "SecurityModal__Title",
  componentId: "sc-1woyfh8-3"
})(["display:flex;align-items:center;font-size:var(--h4-font-size);font-weight:var(--h4-font-weight);margin-bottom:var(--spacing-lg);svg{margin-right:var(--spacing-xs);}"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/Security/Security.js
function Security({ securities: t }) {
  const [r, e2] = useState15(false);
  return useModalScrollLock(r), t.length ? _jsxs43(_Fragment23, { children: [_jsx64(SecurityButton, { securities: t, onClick: () => e2(true) }), r && _jsx64(Portal, { mountId: "api-content", children: _jsx64(SecurityModal, { securities: t, onClose: () => e2(false) }) })] }) : null;
}

// node_modules/@redocly/openapi-docs/lib-esm/components/RequestParameters/RequestParameters.js
import { jsx as _jsx67, Fragment as _Fragment24, jsxs as _jsxs45 } from "react/jsx-runtime";

// node_modules/@redocly/openapi-docs/lib-esm/components/RequestParameters/ParametersGroup.js
init_styled_components_esm();
init_src();
import { jsx as _jsx65, jsxs as _jsxs44 } from "react/jsx-runtime";
import { memo as memo38 } from "react";
function ParametersGroupComponent({
  title: e2,
  parameters: r,
  deepLink: i2
}) {
  return r && r.length ? _jsxs44(Wrapper16, {
    children: [_jsxs44(Title6, {
      children: [_jsx65(LinkToField, {
        to: i2
      }), e2]
    }), r.map((e3, r2) => _jsx65(PropertyDetails, {
      isFirst: 0 === r2,
      field: e3
    }, e3.name))]
  }) : null;
}
var ParametersGroup = memo38(ParametersGroupComponent);
var Title6 = styled_components_esm_default.span.withConfig({
  displayName: "ParametersGroup__Title",
  componentId: "sc-xscl75-0"
})(["position:relative;display:flex;align-items:center;gap:var(--spacing-xs);font-size:18px;line-height:var(--line-height-lg);font-weight:var(--font-weight-semibold);color:var(--text-color-primary);padding:var(--spacing-xxs) 0;:hover{", "{opacity:1;visibility:visible;}}"], LinkIcon);
var Wrapper16 = styled_components_esm_default.div.withConfig({
  displayName: "ParametersGroup__Wrapper",
  componentId: "sc-xscl75-1"
})(["margin-top:var(--spacing-md);"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/RequestParameters/Body.js
import { jsx as _jsx66 } from "react/jsx-runtime";
import { memo as memo39 } from "react";
function BodyComponent({ content: e2, description: o, required: t, deepLink: n2 }) {
  return _jsx66(BodyContent, { content: e2, required: t, description: o, skipReadOnly: e2.isRequestType, skipWriteOnly: !e2.isRequestType, deepLink: n2 });
}
var Body = memo39(BodyComponent);

// node_modules/@redocly/openapi-docs/lib-esm/components/RequestParameters/RequestParameters.js
var PARAM_PLACES = ["path", "query", "cookie", "header"];
function RequestParameters({ body: e2, parameters: r = [], operationId: t, callbackId: n2 }) {
  const a = useTranslate();
  if (!e2 && !r.length)
    return null;
  const o = { [PARAM_PLACES[0]]: a("openapi.path", "Path"), [PARAM_PLACES[1]]: a("openapi.query", "Query"), [PARAM_PLACES[2]]: a("openapi.cookie", "Cookies"), [PARAM_PLACES[3]]: a("openapi.header", "Headers") }, s = ((e3) => {
    const r2 = {};
    return e3.forEach((e4) => {
      safePush(r2, e4.in, e4);
    }), r2;
  })(r), i2 = r.length > 0 ? PARAM_PLACES : [], { content: p, description: u, required: m } = e2 || {};
  return _jsxs45(_Fragment24, { children: [i2.map((e3) => _jsx67(ParametersGroup, { title: o[e3], parameters: s[e3], deepLink: generateDeepLink3(t, n2, e3) }, e3)), p && _jsx67(Body, { content: p, description: u, required: m, deepLink: generateDeepLink3(t, n2) })] });
}
function safePush(e2, r = "", t) {
  e2[r] || (e2[r] = []), e2[r].push(t);
}
function generateDeepLink3(e2, r, t = "body") {
  return makeDeepLink(e2, r ? `${r}/request/${t}` : `request/${t}`);
}

// node_modules/@redocly/openapi-docs/lib-esm/components/Request/RequestDetails.js
function RequestDetailsComponent({
  operation: {
    id: e2,
    description: t,
    externalDocs: o,
    parameters: i2,
    requestBody: r,
    pointer: s,
    security: m,
    extensions: n2,
    callbackId: a
  },
  title: p,
  translate: l
}) {
  const c = useAtomValue(activeMimeNameAtom), d = useMemo14(() => {
    var e3;
    const t2 = i2.some(({
      schema: e4
    }) => !e4.isPrimitive && !e4.isCircular);
    if (!(null == r ? void 0 : r.content) || t2)
      return t2;
    const {
      schema: o2
    } = getActiveMediaType(r.content, c) || {};
    return null === (e3 = null == o2 ? void 0 : o2.fields) || void 0 === e3 ? void 0 : e3.some(({
      schema: e4
    }) => !e4.isPrimitive && !e4.isCircular);
  }, [c, i2, null == r ? void 0 : r.content]);
  return _jsxs46(_Fragment25, {
    children: [_jsx68(Row, {
      children: _jsxs46(HeadingWrapper, {
        children: [_jsxs46(Title2, {
          children: [e2 && _jsx68(LinkToField, {
            to: makeDeepLink(e2, "request")
          }), p || (null == l ? void 0 : l("openapi.request", "Request")), d && _jsx68(ExpandAllButton, {
            operationPointer: s,
            type: "request"
          })]
        }), _jsx68(Description2, {
          description: t || o ? t : void 0,
          externalDocs: o,
          extensions: n2
        }), _jsx68(Security, {
          securities: m
        })]
      })
    }), _jsx68(RequestParameters, {
      parameters: i2,
      body: r,
      operationId: e2,
      callbackId: a
    })]
  });
}
var HeadingWrapper = styled_components_esm_default.div.withConfig({
  displayName: "RequestDetails__HeadingWrapper",
  componentId: "sc-1ibktm2-0"
})(["width:100%;"]);
var RequestDetails = memo40(RequestDetailsComponent);

// node_modules/@redocly/openapi-docs/lib-esm/components/Callbacks/CallbackDetails.js
function CallbackDetailsComponent({
  operation: e2,
  translate: t
}) {
  var i2;
  const s = useCallback15((i3) => _jsxs47(Title7, {
    children: [_jsx69(LinkToField, {
      to: makeDeepLink(e2.id, `${e2.callbackId}/callback-response&c=${i3.key}`)
    }), t("openapi.callbackResponse", "Callback Response")]
  }), [e2.callbackId, e2.id, t]);
  return _jsxs47(_Fragment26, {
    children: [_jsx69(RequestDetails, {
      operation: e2,
      title: _jsxs47(_Fragment26, {
        children: [_jsx69(LinkToField, {
          to: makeDeepLink(e2.id, `${e2.callbackId}/callback-request`)
        }), t("openapi.callbackRequest", "Callback Request")]
      })
    }), (null === (i2 = e2.responses) || void 0 === i2 ? void 0 : i2.length) ? _jsx69(OperationResponseList, {
      responses: e2.responses,
      operationId: e2.id,
      operationPointer: e2.pointer,
      callbackId: e2.callbackId,
      renderTitle: s
    }) : null]
  });
}
var CallbackDetails = memo41(CallbackDetailsComponent);
var Title7 = styled_components_esm_default.h4.withConfig({
  displayName: "CallbackDetails__Title",
  componentId: "sc-nquizc-0"
})(["position:relative;font-size:var(--font-size-lg);font-weight:var(--h4-font-weight);line-height:var(--h4-line-height);padding:0;color:var(--h4-text-color);display:flex;align-items:center;justify-content:space-between;margin:0 var(--spacing-sm) 0 0;:hover{", "{opacity:1;visibility:visible;}}"], LinkIcon);

// node_modules/@redocly/openapi-docs/lib-esm/components/Callbacks/CallbackSummary.js
init_src();
init_styled_components_esm();
import { jsx as _jsx70, jsxs as _jsxs48 } from "react/jsx-runtime";

// node_modules/@redocly/openapi-docs/lib-esm/components/Callbacks/styled.js
init_src();
init_styled_components_esm();
var CallbackTitle = styled_components_esm_default(PanelHeaderTitle).withConfig({
  displayName: "styled__CallbackTitle",
  componentId: "sc-olpck6-0"
})(["text-decoration:", ";margin:0 4px;vertical-align:middle;color:var(--panel-response-callback-heading-text-color);font-weight:var(--font-weight-medium);"], ({
  deprecated: e2
}) => e2 ? "line-through" : "none");

// node_modules/@redocly/openapi-docs/lib-esm/components/Callbacks/CallbackSummary.js
function CallbackSummary({
  expanded: e2 = false,
  toggle: r,
  callback: {
    name: a,
    httpVerb: i2,
    deprecated: n2,
    callbackId: o,
    id: l
  },
  translate: t
}) {
  return _jsxs48(CallbackHeader, {
    expanded: e2,
    onClick: r,
    children: [_jsx70(LinkToField, {
      to: makeDeepLink(l, `callbacks/${o}`)
    }), _jsxs48(Trigger, {
      children: [_jsx70(CircleIconWrap, {
        children: _jsx70(CircleIcon, {
          sign: e2 ? "-" : "+"
        })
      }), _jsx70(CallbackTitle, {
        deprecated: n2,
        children: a
      }), _jsx70(HttpVerb, {
        color: i2,
        children: shortenHTTPVerb(i2)
      }), n2 ? _jsx70(Badge, {
        deprecated: true,
        children: t("openapi.badges.deprecated", "Deprecated")
      }) : null]
    })]
  });
}
var CallbackHeader = styled_components_esm_default(PanelHeader).withConfig({
  displayName: "CallbackSummary__CallbackHeader",
  componentId: "sc-1yyhn1g-0"
})(["padding:var(--spacing-sm) 0 var(--spacing-sm) calc(var(--spacing-unit) / 2);margin:0;line-height:var(--line-height-base);position:relative;"]);
var CircleIconWrap = styled_components_esm_default.button.withConfig({
  displayName: "CallbackSummary__CircleIconWrap",
  componentId: "sc-1yyhn1g-1"
})(["background:none;border:none;cursor:pointer;display:flex;align-items:center;padding:0;gap:var(--spacing-xxs);color:var(--text-color-secondary);font-size:var(--font-size-base);font-family:var(--font-family-base);line-height:var(--line-height-base);"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/Callbacks/CallbackOperation.js
var CallbackOperation = ({
  operation: a,
  operation: {
    callbackId: l
  },
  onExpand: e2,
  selectedCallback: o
}) => {
  const t = useTranslate(), r = useLocation10();
  return _jsx71(CallbackPanel, {
    header: ({
      expanded: l2,
      toggle: o2
    }) => _jsx71(CallbackSummary, {
      callback: a,
      toggle: (t2) => {
        null == o2 || o2(t2), null == e2 || e2(l2 ? null : a);
      },
      expanded: l2,
      translate: t
    }),
    expanded: (null == o ? void 0 : o.callbackId) === l || pathIncludesLink(r, l),
    className: "panel-response-callback",
    children: _jsxs49(CallbackDetailsWrap, {
      children: [_jsx71(CallbackDetails, {
        operation: a,
        translate: t
      }), _jsx71(LeftBorder, {})]
    })
  });
};
var CallbackDetailsWrap = styled_components_esm_default.div.withConfig({
  displayName: "CallbackOperation__CallbackDetailsWrap",
  componentId: "sc-1k0e3pk-0"
})(["position:relative;.property:last-child{border-bottom:none;padding-bottom:0;}"]);
var LeftBorder = styled_components_esm_default.div.withConfig({
  displayName: "CallbackOperation__LeftBorder",
  componentId: "sc-1k0e3pk-1"
})(["position:absolute;height:calc(100% + 14px);border-left:1px solid var(--border-color-primary);top:-14px;left:-12px;z-index:0;"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/Callbacks/CallbacksList.js
import { jsx as _jsx72 } from "react/jsx-runtime";
import { memo as memo42 } from "react";
function CallbacksListComponent({ callbacks: a, selectedCallback: o, onExpand: t }) {
  if (!a || 0 === a.length)
    return null;
  const e2 = (a2) => {
    t(a2);
  };
  return _jsx72("div", { children: a.map((a2) => a2.operations.map((a3) => _jsx72(CallbackOperation, { operation: a3, selectedCallback: o, onExpand: e2 }, a3.name))) });
}
var CallbacksList = memo42(CallbacksListComponent);

// node_modules/@redocly/openapi-docs/lib-esm/components/CallbackSamples/CallbackSamples.js
init_src();
init_styled_components_esm();
import { jsx as _jsx75, jsxs as _jsxs52 } from "react/jsx-runtime";
import { memo as memo43 } from "react";

// node_modules/@redocly/openapi-docs/lib-esm/components/ServerListDropdown/ServerListDropdown.js
init_src();
import { jsx as _jsx74, jsxs as _jsxs51 } from "react/jsx-runtime";
import { useMemo as useMemo15, useCallback as useCallback16 } from "react";

// node_modules/@redocly/openapi-docs/lib-esm/components/ServerListDropdown/styled.js
init_styled_components_esm();
init_src();
var PathWrapper = styled_components_esm_default(Button).withConfig({
  displayName: "styled__PathWrapper",
  componentId: "sc-1bjrtic-0"
})(["display:inline-flex;overflow-x:hidden;font-weight:var(--font-weight-regular);"]);
var Path2 = styled_components_esm_default.span.withConfig({
  displayName: "styled__Path",
  componentId: "sc-1bjrtic-1"
})(["overflow-x:hidden;text-overflow:ellipsis;white-space:nowrap;display:inline-block;line-height:var(--line-height-base);font-size:var(--font-size-base);"]);
var StyledDropdownMenuItem2 = styled_components_esm_default(DropdownMenuItem).withConfig({
  displayName: "styled__StyledDropdownMenuItem",
  componentId: "sc-1bjrtic-2"
})(["padding:calc(var(--spacing-unit) * 1.5) var(--spacing-xs) calc(var(--spacing-unit) * 1.5) var(--spacing-lg);@media screen and (max-width:", "){max-width:280px;}"], breakpoints.large);
var StyledCopyButton = styled_components_esm_default(CopyButton).withConfig({
  displayName: "styled__StyledCopyButton",
  componentId: "sc-1bjrtic-3"
})([":hover{background-color:var(--dropdown-menu-item-bg-color-hover);}"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/PanelItem/PanelItem.js
import { jsx as _jsx73, jsxs as _jsxs50 } from "react/jsx-runtime";

// node_modules/@redocly/openapi-docs/lib-esm/components/PanelItem/styled.js
init_styled_components_esm();
init_src();
var PanelItemWrap = styled_components_esm_default.span.withConfig({
  displayName: "styled__PanelItemWrap",
  componentId: "sc-kd7gg1-0"
})(["display:flex;justify-content:space-between;align-items:center;padding:0;position:relative;width:100%;"]);
var Item2 = styled_components_esm_default.span.withConfig({
  displayName: "styled__Item",
  componentId: "sc-kd7gg1-1"
})(["display:flex;flex-direction:column;justify-content:flex-start;overflow:hidden;"]);
var Header = styled_components_esm_default.span.withConfig({
  displayName: "styled__Header",
  componentId: "sc-kd7gg1-2"
})(["text-align:left;color:var(--menu-content-title-color);font-size:var(--h6-font-size);line-height:var(--line-height-xsm);"]);
var Title8 = styled_components_esm_default.span.withConfig({
  displayName: "styled__Title",
  componentId: "sc-kd7gg1-3"
})(["margin:0;color:var(--text-color-secondary);font-size:var(--font-size-base);line-height:var(--line-height-base);overflow:hidden;text-overflow:ellipsis;font-weight:", ";"], ({
  active: t
}) => t && "var(--font-weight-medium)");
var ActionsWrap = styled_components_esm_default.div.withConfig({
  displayName: "styled__ActionsWrap",
  componentId: "sc-kd7gg1-4"
})(["display:flex;gap:var(--spacing-xs);"]);
var PanelItemsList = styled_components_esm_default.div.withConfig({
  displayName: "styled__PanelItemsList",
  componentId: "sc-kd7gg1-5"
})(["& > span{border-bottom:1px solid var(--border-color-secondary);margin-bottom:var(--spacing-xs);padding-bottom:var(--spacing-xs);}& > span:last-child{border-bottom:none;margin-bottom:0;padding-bottom:0;}"]);
var PanelItemDescription = styled_components_esm_default.span.withConfig({
  displayName: "styled__PanelItemDescription",
  componentId: "sc-kd7gg1-6"
})(["color:var(--text-color-secondary);font-size:var(--font-size-base);line-height:var(--line-height-base);font-weight:var(--font-weight-medium);"]);
var StyledCheckmarkIcon2 = styled_components_esm_default(CheckmarkIcon).withConfig({
  displayName: "styled__StyledCheckmarkIcon",
  componentId: "sc-kd7gg1-7"
})(["width:14px;height:14px;position:absolute;left:-18px;bottom:3px;"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/PanelItem/PanelItem.js
var PanelItem = ({ header: e2, title: s, actions: t, active: r, withCheckmark: a }) => _jsxs50(PanelItemWrap, { children: [_jsxs50(Item2, { children: [e2 && ("string" == typeof e2 ? _jsx73(Header, { children: e2 }) : e2), _jsxs50(Title8, { active: r, suppressHydrationWarning: true, children: [a && r && _jsx73(StyledCheckmarkIcon2, {}), " ", s] })] }), _jsx73(ActionsWrap, { children: null == t ? void 0 : t.map((e3) => e3) })] });

// node_modules/@redocly/openapi-docs/lib-esm/components/ServerListDropdown/ServerListDropdown.js
var ServerListDropdown = ({ operation: e2, className: r }) => {
  const [[t], o] = useAtom(environmentAtom), s = useActiveWithFallback(e2.servers.map((e3) => Object.assign(Object.assign({}, e3), { key: e3.url })), t.server), a = useCallback16((e3) => {
    e3.stopPropagation();
  }, []), n2 = useCallback16((r2) => () => {
    1 !== e2.servers.length && o({ environment: getServerEnvName(r2) });
  }, [e2.servers.length, o]), i2 = useMemo15(() => e2.servers.map((r2) => {
    const t2 = joinWithSeparator(replaceVariables(r2), e2.path);
    return _jsx74(StyledDropdownMenuItem2, { onAction: n2(r2), children: _jsx74(PanelItem, { header: r2.description, title: t2, actions: [_jsx74(StyledCopyButton, { data: t2, toasterPlacement: "left", onCopyClick: a }, t2)], active: r2.url === s, withCheckmark: true }) }, t2);
  }), [e2.servers, e2.path, n2, a, s]);
  return _jsx74(Dropdown, { className: r, trigger: _jsxs51(PathWrapper, { variant: "ghost", children: [_jsx74(HttpVerb, { color: e2.httpVerb, children: e2.httpVerb }), _jsx74(Path2, { children: e2.path })] }), withArrow: true, children: _jsx74(DropdownMenu, { children: i2 }) });
};

// node_modules/@redocly/openapi-docs/lib-esm/components/CallbackSamples/CallbackSamples.js
function CallbackSamplesComponent({
  callback: e2,
  translate: a
}) {
  var o;
  if (!(null == e2 ? void 0 : e2.hasSamples))
    return null;
  return _jsx75(CodeBlockPanel, {
    className: "panel-callback-samples",
    header: () => _jsxs52(StyledPanelHeader, {
      isExpandable: false,
      children: [_jsx75(StyledServerListDropdown, {
        operation: e2
      }), _jsx75(PayloadTitle, {
        children: a("openapi.payload", "Payload")
      })]
    }),
    isExpandable: false,
    children: (null === (o = null == e2 ? void 0 : e2.payload) || void 0 === o ? void 0 : o.requestBodyContent) && _jsx75(PayloadSamples, {
      content: e2.payload.requestBodyContent
    })
  });
}
var CallbackSamples = memo43(CallbackSamplesComponent);
var PayloadTitle = styled_components_esm_default.div.withConfig({
  displayName: "CallbackSamples__PayloadTitle",
  componentId: "sc-1csjsm0-0"
})(["font-size:var(--font-size-sm);font-style:normal;font-weight:var(--font-weight-regular);line-height:var(--line-height-sm);padding:0 var(--spacing-xs);border-radius:var(--border-radius);background:var(--dropdown-bg-color);color:var(--dropdown-text-color);"]);
var StyledPanelHeader = styled_components_esm_default(PanelHeader).withConfig({
  displayName: "CallbackSamples__StyledPanelHeader",
  componentId: "sc-1csjsm0-1"
})(["flex-wrap:nowrap;"]);
var StyledServerListDropdown = styled_components_esm_default(ServerListDropdown).withConfig({
  displayName: "CallbackSamples__StyledServerListDropdown",
  componentId: "sc-1csjsm0-2"
})(["padding-right:var(--spacing-base);min-width:0;"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/RequestSamples/CodeSample.js
init_src();
init_styled_components_esm();
import { jsx as _jsx77 } from "react/jsx-runtime";
import { memo as memo45, useCallback as useCallback17 } from "react";

// node_modules/@redocly/openapi-docs/lib-esm/components/RequestSamples/Example.js
import { jsx as _jsx76, Fragment as _Fragment27, jsxs as _jsxs53 } from "react/jsx-runtime";
import { memo as memo44 } from "react";
function ExampleComponent({ mediaType: e2, mediaContent: m, renderSample: t }) {
  const a = e2.examples || {}, o = Object.keys(a), p = useActivateExample(m), { exampleKey: s } = useExampleKey(e2.operation, a);
  if (!o.length || 1 === o.length)
    return t();
  return _jsxs53(_Fragment27, { children: [_jsx76(ExampleSwitch, { examples: a, exampleKey: s, onChange: (e3) => p(e3) }), t(s)] });
}
var Example2 = memo44(ExampleComponent);

// node_modules/@redocly/openapi-docs/lib-esm/components/RequestSamples/CodeSample.js
var __rest10 = function(e2, o) {
  var r = {};
  for (var t in e2)
    Object.prototype.hasOwnProperty.call(e2, t) && o.indexOf(t) < 0 && (r[t] = e2[t]);
  if (null != e2 && "function" == typeof Object.getOwnPropertySymbols) {
    var l = 0;
    for (t = Object.getOwnPropertySymbols(e2); l < t.length; l++)
      o.indexOf(t[l]) < 0 && Object.prototype.propertyIsEnumerable.call(e2, t[l]) && (r[t[l]] = e2[t[l]]);
  }
  return r;
};
function CodeSampleComponent(e2) {
  var o, {
    onCopyClick: r
  } = e2, t = __rest10(e2, ["onCopyClick"]);
  const l = null === (o = t.operation.requestBody) || void 0 === o ? void 0 : o.content, a = useCallback17((e3) => {
    var o2, r2;
    return (null !== (r2 = null === (o2 = null == l ? void 0 : l.mediaTypes) || void 0 === o2 ? void 0 : o2.length) && void 0 !== r2 ? r2 : 0) > 1 ? _jsx77(SelectWrapper, {
      children: _jsx77(SelectOrLabel, Object.assign({
        Label: MimeLabel,
        Select: Select2,
        variant: "dark",
        fullWidth: true
      }, e3))
    }) : null;
  }, [l]), n2 = useCallback17((e3) => t.source ? _jsx77(StyledCodeBlock2, {
    lang: t.lang,
    source: t.source,
    header: {
      className: "code-block-header",
      controls: {
        copy: {
          onClick: r
        }
      }
    }
  }) : _jsx77(StyledCodeBlock2, {
    lang: t.lang,
    externalSource: {
      sample: t.externalSample,
      exampleName: e3,
      operation: t.operation,
      pathParams: t.pathParams,
      properties: t.properties
    },
    header: {
      className: "code-block-header",
      controls: {
        copy: {
          onClick: r
        }
      }
    }
  }), [r, t.externalSample, t.lang, t.operation, t.pathParams, t.properties, t.source]);
  return void 0 === l || null != t.source ? n2() : _jsx77(MediaTypesSwitch, {
    content: l,
    renderSelect: a,
    children: (e3) => _jsx77(Example2, {
      mediaType: e3,
      mediaContent: l,
      renderSample: n2
    })
  });
}
var CodeSample = memo45(CodeSampleComponent);
var StyledCodeBlock2 = styled_components_esm_default(CodeBlock).withConfig({
  displayName: "CodeSample__StyledCodeBlock",
  componentId: "sc-1xr3r0g-0"
})(["border:none;margin:0;.code-block-header{border-bottom:0;padding-right:var(--spacing-sm);}"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/RequestSamples/RequestSamples.js
import { jsx as _jsx95, jsxs as _jsxs69 } from "react/jsx-runtime";
import { memo as memo50, useCallback as useCallback21, useMemo as useMemo18 } from "react";
init_src();
init_styled_components_esm();

// node_modules/@redocly/openapi-docs/lib-esm/components/RequestSamples/useCodeSamples.js
function useCodeSamples({ payload: e2, isWebhook: a, definitionSamples: t, pointer: o }) {
  var n2;
  const { parser: r, options: { codeSamples: s, generatedSamplesMaxDepth: l } } = useAtomValue(globalStoreAtom), i2 = useAtomValue(operationStore(o)), { languages: g } = useAtomValue(languageAtom), [m] = useAtomValue(environmentAtom), p = useTranslate(), u = new Map(null == g ? void 0 : g.map(({ key: e3, order: a2 }) => [e3, a2])), d = t.filter((e3) => u.has(getLangKey(e3))), c = new Set(d.map(getLangKey));
  let b = [];
  if (!a) {
    b = createCodeSamples((null === (n2 = s.languages) || void 0 === n2 ? void 0 : n2.filter(({ lang: e3, label: a2 }) => "Payload" !== e3 && !c.has(getLangKey({ lang: e3, label: a2 })))) || [], s, r.definition, l, i2, m, p);
  }
  const f = [...d, ...b];
  e2 && u.has(e2.lang.toLowerCase()) && f.push(Object.assign(Object.assign({}, e2), { order: u.get(e2.lang.toLowerCase()) }));
  const S = f.map((e3) => {
    var a2;
    const t2 = null !== (a2 = e3.label) && void 0 !== a2 ? a2 : e3.lang;
    return Object.assign({ key: getLangKey(e3), title: t2, order: "number" == typeof u.get(t2.toLowerCase()) ? u.get(t2.toLowerCase()) : 9999 }, e3);
  }).sort((e3, a2) => e3.order - a2.order);
  return { samples: S };
}
function createCodeSamples(e2, { skipOptionalParameters: a, withOAuth2Call: t }, o, n2, r, s, l) {
  return e2.map(({ lang: e3, label: i2, options: g }) => ({ lang: e3, label: i2, get: (i3) => getCodeSample(Object.assign(Object.assign({}, i3), { lang: e3, options: Object.assign(Object.assign({}, g), { skipOptionalParameters: a, withOAuth2Call: t, spec: o, generatedPayloadSamplesMaxDepth: n2, store: r }), environment: s, translate: l })) }));
}

// node_modules/@redocly/openapi-docs/lib-esm/events/types.js
var AnalyticsEventType;
!function(e2) {
  e2.CodeSampleLanguageSwitched = "CodeSampleLanguageSwitched", e2.CodeSampleCopied = "CodeSampleCopied", e2.OperationServerExpanded = "OperationServerExpanded", e2.PanelToggle = "PanelToggle", e2.TargetServerSwitched = "TargetServerSwitched";
}(AnalyticsEventType || (AnalyticsEventType = {}));

// node_modules/@redocly/openapi-docs/lib-esm/events/creator.js
function createTrackingEvent(e2) {
  return (n2) => Object.assign(Object.assign({}, n2), { eventType: e2 });
}

// node_modules/@redocly/openapi-docs/lib-esm/events/languageSwitch.js
var languageSwitchEvent = createTrackingEvent(AnalyticsEventType.CodeSampleLanguageSwitched);

// node_modules/@redocly/openapi-docs/lib-esm/events/panelToggle.js
var panelToggleEvent = createTrackingEvent(AnalyticsEventType.PanelToggle);

// node_modules/@redocly/openapi-docs/lib-esm/events/codeSampleCopy.js
var codeSampleCopyEvent = createTrackingEvent(AnalyticsEventType.CodeSampleCopied);
var createCodeSampleCopyEvent = ({ operation: e2, type: o, lang: t = "", label: a = "" }) => {
  const { activeExampleName: p } = readAtom(operationStore(e2.pointer));
  return codeSampleCopyEvent({ resource: "Redocly_CodeSample", action: "CodeSampleCopied", operationId: e2.id, operationPath: e2.path, operationHttpVerb: e2.httpVerb, operationSummary: e2.name, exampleId: p, exampleMimeType: readAtom(activeMimeNameAtom), label: a, lang: t, type: o });
};

// node_modules/@redocly/openapi-docs/lib-esm/components/Language/LanguageDropdown.js
init_src();
import { jsx as _jsx90 } from "react/jsx-runtime";
import { useCallback as useCallback18, useMemo as useMemo16 } from "react";

// node_modules/@redocly/openapi-docs/lib-esm/components/Language/LanguageItem.js
init_src();
import { jsx as _jsx89, jsxs as _jsxs65, Fragment as _Fragment28 } from "react/jsx-runtime";

// node_modules/@redocly/openapi-docs/lib-esm/icons/CurlIcon/CurlIcon.js
init_styled_components_esm();
import { jsx as _jsx78, jsxs as _jsxs54 } from "react/jsx-runtime";
var Icon = () => _jsxs54("svg", {
  width: "14",
  height: "14",
  viewBox: "0 0 24 21",
  fill: "none",
  xmlns: "http://www.w3.org/2000/svg",
  children: [_jsxs54("g", {
    clipPath: "url(#clip0_3789_6604)",
    children: [_jsx78("path", {
      d: "M22.2305 2.73601C21.6963 2.73601 21.264 2.30296 21.264 1.76946C21.264 1.2352 21.6963 0.802917 22.2305 0.802917C22.764 0.802917 23.1971 1.2352 23.1971 1.76946C23.1971 2.30296 22.764 2.73601 22.2305 2.73601ZM12.6313 19.2502C12.097 19.2502 11.6647 18.8172 11.6647 18.2837C11.6647 17.7494 12.097 17.3171 12.6313 17.3171C13.1648 17.3171 13.5971 17.7494 13.5971 18.2837C13.5971 18.8172 13.1648 19.2502 12.6313 19.2502ZM22.2305 0C21.2533 0 20.4611 0.792261 20.4611 1.76946C20.4611 1.97799 20.5136 2.17206 20.5798 2.35776L12.2789 16.585C11.4768 16.7532 10.8618 17.4313 10.8618 18.2837C10.8618 19.2609 11.6541 20.0531 12.6313 20.0531C13.6077 20.0531 14.4 19.2609 14.4 18.2837C14.4 18.0873 14.3475 17.9077 14.2889 17.7312L22.6316 3.45749C23.4094 3.27103 24 2.60434 24 1.76946C24 0.792261 23.2077 0 22.2305 0Z",
      fill: "#0C544C"
    }), _jsx78("path", {
      d: "M14.9906 2.73601C14.4563 2.73601 14.024 2.30296 14.024 1.76946C14.024 1.2352 14.4563 0.802917 14.9906 0.802917C15.5241 0.802917 15.9564 1.2352 15.9564 1.76946C15.9564 2.30296 15.5241 2.73601 14.9906 2.73601ZM5.39059 19.2502C4.85708 19.2502 4.42404 18.8172 4.42404 18.2837C4.42404 17.7494 4.85708 17.3171 5.39059 17.3171C5.92485 17.3171 6.35713 17.7494 6.35713 18.2837C6.35713 18.8172 5.92485 19.2502 5.39059 19.2502ZM14.9906 0C14.0126 0 13.2211 0.792261 13.2211 1.76946C13.2211 1.97799 13.2736 2.17206 13.3399 2.35776L5.03898 16.585C4.23606 16.7532 3.62112 17.4313 3.62112 18.2837C3.62112 19.2609 4.41339 20.0531 5.39059 20.0531C6.36779 20.0531 7.16005 19.2609 7.16005 18.2837C7.16005 18.0873 7.10754 17.9077 7.04894 17.7312L15.3917 3.45749C16.1695 3.27103 16.7601 2.60434 16.7601 1.76946C16.7601 0.792261 15.967 0 14.9906 0Z",
      fill: "#073551"
    }), _jsx78("path", {
      d: "M1.76946 5.69424C2.30296 5.69424 2.73601 6.12729 2.73601 6.66079C2.73601 7.19429 2.30296 7.62733 1.76946 7.62733C1.2352 7.62733 0.802917 7.19429 0.802917 6.66079C0.802917 6.12729 1.2352 5.69424 1.76946 5.69424ZM1.76946 8.43025C2.74666 8.43025 3.53892 7.63799 3.53892 6.66079C3.53892 6.4652 3.48565 6.28483 3.42705 6.10826C3.19264 5.4058 2.55031 4.89133 1.76946 4.89133C1.64465 4.89133 1.53506 4.93775 1.41709 4.96286C0.614936 5.1303 0 5.8084 0 6.66079C0 7.63799 0.792261 8.43025 1.76946 8.43025Z",
      fill: "#073551"
    }), _jsx78("path", {
      d: "M0.802917 12.8436C0.802917 12.3094 1.23596 11.8771 1.76946 11.8771C2.30296 11.8771 2.73601 12.3094 2.73601 12.8436C2.73601 13.3771 2.30296 13.8094 1.76946 13.8094C1.23596 13.8094 0.802917 13.3771 0.802917 12.8436ZM3.53892 12.8436C3.53892 12.6473 3.48565 12.4677 3.42705 12.2911C3.19264 11.5886 2.55107 11.0742 1.76946 11.0742C1.64465 11.0742 1.53506 11.1206 1.41709 11.145C0.614936 11.3131 0 11.9912 0 12.8436C0 13.8201 0.792261 14.6131 1.76946 14.6131C2.74666 14.6131 3.53892 13.8201 3.53892 12.8436Z",
      fill: "#073551"
    })]
  }), _jsx78("defs", {
    children: _jsx78("clipPath", {
      id: "clip0_3789_6604",
      children: _jsx78("rect", {
        width: "24",
        height: "20.0531",
        fill: "white"
      })
    })
  })]
});
var CurlIcon = styled_components_esm_default(Icon).attrs(() => ({
  "data-component-name": "icons/CurlIcon"
})).withConfig({
  displayName: "CurlIcon",
  componentId: "sc-u2ce2v-0"
})([""]);

// node_modules/@redocly/openapi-docs/lib-esm/icons/CSharpIcon/CSharpIcon.js
init_styled_components_esm();
import { jsx as _jsx79, jsxs as _jsxs55 } from "react/jsx-runtime";
var Icon2 = () => _jsxs55("svg", {
  width: "17",
  height: "18",
  viewBox: "0 0 17 18",
  fill: "none",
  xmlns: "http://www.w3.org/2000/svg",
  children: [_jsx79("g", {
    id: "Logo_C_sharp 1",
    clipPath: "url(#clip0_6336_15430)",
    children: _jsxs55("g", {
      id: "Group",
      children: [_jsx79("path", {
        id: "Vector",
        d: "M16.1225 5.27827C16.1224 4.9764 16.0578 4.70965 15.9272 4.48071C15.799 4.25559 15.6069 4.0669 15.3493 3.91771C13.2227 2.69152 11.0941 1.46909 8.96823 0.241649C8.3951 -0.0892265 7.83941 -0.077164 7.27054 0.258461C6.4241 0.757648 2.18629 3.18559 0.923477 3.91702C0.403414 4.21809 0.150352 4.67884 0.150227 5.27771C0.149414 7.74365 0.150227 10.2095 0.149414 12.6755C0.149414 12.9708 0.211352 13.2323 0.336164 13.4578C0.464477 13.6898 0.659227 13.8836 0.922789 14.0362C2.18566 14.7676 6.42404 17.1954 7.27029 17.6947C7.83941 18.0305 8.3951 18.0425 8.96841 17.7115C11.0944 16.484 13.2231 15.2616 15.35 14.0355C15.6135 13.883 15.8083 13.689 15.9366 13.4572C16.0612 13.2317 16.1233 12.9701 16.1233 12.6748C16.1233 12.6748 16.1233 7.74427 16.1225 5.27827Z",
        fill: "#A179DC"
      }), _jsx79("path", {
        id: "Vector_2",
        d: "M8.16056 8.95312L0.335938 13.4584C0.46425 13.6903 0.659 13.8842 0.922562 14.0368C2.18544 14.7682 6.42381 17.1959 7.27006 17.6953C7.83919 18.0311 8.39487 18.0431 8.96819 17.7121C11.0941 16.4846 13.2229 15.2622 15.3497 14.036C15.6133 13.8835 15.8081 13.6895 15.9364 13.4577L8.16056 8.95312Z",
        fill: "#280068"
      }), _jsx79("path", {
        id: "Vector_3",
        d: "M16.1218 5.27705C16.1217 4.97518 16.0572 4.70843 15.9266 4.47949L8.16016 8.95137L15.936 13.456C16.0606 13.2305 16.1225 12.9689 16.1227 12.6736C16.1227 12.6736 16.1227 7.74305 16.1218 5.27705Z",
        fill: "#390091"
      }), _jsx79("path", {
        id: "Vector_4",
        d: "M12.768 7.26837V8.11048H13.6101V7.26837H14.0312V8.11048H14.8733V8.53153H14.0312V9.37363H14.8733V9.79469H14.0312V10.6368H13.6101V9.79469H12.768V10.6368H12.347V9.79469H11.5049V9.37363H12.347V8.53153H11.5049V8.11048H12.347V7.26837H12.768ZM13.6101 8.53153H12.768V9.37363H13.6101V8.53153Z",
        fill: "white"
      }), _jsx79("path", {
        id: "Vector_5",
        d: "M8.17777 3.03809C10.3743 3.03809 12.292 4.23098 13.3191 6.00409L13.3091 5.98702L10.7248 7.47504C10.2157 6.61294 9.28223 6.03116 8.2115 6.01918L8.17777 6.01899C6.54492 6.01899 5.22114 7.3427 5.22114 8.97555C5.22114 9.50953 5.3635 10.0101 5.61108 10.4424C6.12071 11.3321 7.07876 11.9322 8.17777 11.9322C9.28357 11.9322 10.2471 11.3245 10.7541 10.4253L10.7418 10.4468L13.3222 11.9417C12.3063 13.6998 10.4149 14.889 8.24391 14.9127L8.17777 14.9131C5.97436 14.9131 4.05119 13.7128 3.02661 11.9304C2.52643 11.0602 2.24023 10.0513 2.24023 8.97555C2.24023 5.69642 4.8985 3.03809 8.17777 3.03809Z",
        fill: "white"
      })]
    })
  }), _jsx79("defs", {
    children: _jsx79("clipPath", {
      id: "clip0_6336_15430",
      children: _jsx79("rect", {
        width: "16",
        height: "18",
        fill: "white",
        transform: "translate(0.149414)"
      })
    })
  })]
});
var CSharpIcon = styled_components_esm_default(Icon2).attrs(() => ({
  "data-component-name": "icons/CSharpIcon"
})).withConfig({
  displayName: "CSharpIcon",
  componentId: "sc-1k3fnii-0"
})([""]);

// node_modules/@redocly/openapi-docs/lib-esm/icons/NodeJSIcon/NodeJSIcon.js
init_styled_components_esm();
import { jsx as _jsx80, jsxs as _jsxs56 } from "react/jsx-runtime";
var Icon3 = () => _jsxs56("svg", {
  width: "17",
  height: "18",
  viewBox: "0 0 17 18",
  fill: "none",
  xmlns: "http://www.w3.org/2000/svg",
  children: [_jsx80("g", {
    id: "nodejs-seeklogo.com 1",
    clipPath: "url(#clip0_6336_14396)",
    children: _jsx80("g", {
      id: "Group",
      children: _jsx80("path", {
        id: "Vector",
        d: "M8.72232 17.9666C8.47473 17.9666 8.24365 17.9006 8.02907 17.785L5.8338 16.4811C5.50368 16.2995 5.66874 16.2335 5.76777 16.2005C6.21343 16.0519 6.29596 16.0189 6.75812 15.7548C6.80764 15.7218 6.87366 15.7383 6.92318 15.7713L8.60678 16.7782C8.6728 16.8112 8.75533 16.8112 8.80485 16.7782L15.3907 12.9653C15.4567 12.9323 15.4897 12.8663 15.4897 12.7838V5.17458C15.4897 5.09205 15.4567 5.02603 15.3907 4.99302L8.80485 1.19667C8.73882 1.16366 8.6563 1.16366 8.60678 1.19667L2.02095 4.99302C1.95493 5.02603 1.92191 5.10856 1.92191 5.17458V12.7838C1.92191 12.8498 1.95493 12.9323 2.02095 12.9653L3.82009 14.0052C4.79393 14.5004 5.40465 13.9227 5.40465 13.345V5.83481C5.40465 5.73578 5.48717 5.63674 5.60272 5.63674H6.44451C6.54355 5.63674 6.64258 5.71927 6.64258 5.83481V13.345C6.64258 14.6489 5.93283 15.4082 4.69489 15.4082C4.31526 15.4082 4.01816 15.4082 3.17636 14.9956L1.44325 14.0052C1.01409 13.7576 0.75 13.2955 0.75 12.8003V5.19109C0.75 4.69591 1.01409 4.23375 1.44325 3.98616L8.02907 0.173311C8.44172 -0.0577704 9.00292 -0.0577704 9.41556 0.173311L16.0014 3.98616C16.4305 4.23375 16.6946 4.69591 16.6946 5.19109V12.8003C16.6946 13.2955 16.4305 13.7576 16.0014 14.0052L9.41556 17.8181C9.20099 17.9171 8.9534 17.9666 8.72232 17.9666ZM10.7525 12.7343C7.86401 12.7343 7.26981 11.4138 7.26981 10.2914C7.26981 10.1924 7.35233 10.0933 7.46788 10.0933H8.32618C8.42521 10.0933 8.50774 10.1593 8.50774 10.2584C8.63979 11.1332 9.01942 11.5623 10.769 11.5623C12.1555 11.5623 12.7497 11.2487 12.7497 10.506C12.7497 10.0768 12.5847 9.7632 10.4224 9.54863C8.62328 9.36706 7.50089 8.97092 7.50089 7.53491C7.50089 6.19794 8.62328 5.40566 10.5049 5.40566C12.6177 5.40566 13.6576 6.13192 13.7896 7.71648C13.7896 7.766 13.7731 7.81551 13.7401 7.86503C13.7071 7.89804 13.6576 7.93105 13.608 7.93105H12.7497C12.6672 7.93105 12.5847 7.86503 12.5682 7.7825C12.3701 6.87468 11.8584 6.57758 10.5049 6.57758C8.98641 6.57758 8.80485 7.10576 8.80485 7.5019C8.80485 7.98057 9.01942 8.12912 11.0661 8.39322C13.0964 8.65731 14.0537 9.03695 14.0537 10.4564C14.0372 11.909 12.8488 12.7343 10.7525 12.7343Z",
        fill: "#539E43"
      })
    })
  }), _jsx80("defs", {
    children: _jsx80("clipPath", {
      id: "clip0_6336_14396",
      children: _jsx80("rect", {
        width: "15.9446",
        height: "18",
        fill: "white",
        transform: "translate(0.75)"
      })
    })
  })]
});
var NodeJSIcon = styled_components_esm_default(Icon3).attrs(() => ({
  "data-component-name": "icons/NodeJSIcon"
})).withConfig({
  displayName: "NodeJSIcon",
  componentId: "sc-3ytcsi-0"
})([""]);

// node_modules/@redocly/openapi-docs/lib-esm/icons/JavaScriptIcon/JavaScriptIcon.js
init_styled_components_esm();
import { jsx as _jsx81, jsxs as _jsxs57 } from "react/jsx-runtime";
var Icon4 = () => _jsxs57("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "14",
  height: "14",
  viewBox: "0 0 14 14",
  fill: "none",
  children: [_jsxs57("g", {
    clipPath: "url(#clip0_6336_14297)",
    children: [_jsx81("path", {
      d: "M14 0H0V14H14V0Z",
      fill: "#F7DF1E"
    }), _jsx81("path", {
      d: "M9.40475 10.9376C9.68675 11.398 10.0536 11.7365 10.7025 11.7365C11.2476 11.7365 11.5959 11.464 11.5959 11.0876C11.5959 10.6365 11.2381 10.4767 10.6381 10.2142L10.3092 10.0731C9.35986 9.66867 8.72919 9.16201 8.72919 8.0909C8.72919 7.10423 9.48097 6.35312 10.6559 6.35312C11.4923 6.35312 12.0936 6.64423 12.527 7.40645L11.5025 8.06423C11.277 7.65979 11.0336 7.50045 10.6559 7.50045C10.2705 7.50045 10.0263 7.7449 10.0263 8.06423C10.0263 8.4589 10.2707 8.61867 10.8352 8.86312L11.1641 9.00401C12.2819 9.48334 12.913 9.97201 12.913 11.0707C12.913 12.2551 11.9825 12.904 10.733 12.904C9.51119 12.904 8.72186 12.3218 8.33563 11.5587L9.40475 10.9376ZM4.75741 11.0516C4.96408 11.4182 5.15208 11.7282 5.60408 11.7282C6.0363 11.7282 6.30897 11.5591 6.30897 10.9016V6.42823H7.62452V10.9193C7.62452 12.2816 6.82586 12.9016 5.66008 12.9016C4.60675 12.9016 3.99675 12.3565 3.68652 11.6999L4.75741 11.0516Z",
      fill: "black"
    })]
  }), _jsx81("defs", {
    children: _jsx81("clipPath", {
      id: "clip0_6336_14297",
      children: _jsx81("rect", {
        width: "14",
        height: "14",
        fill: "white"
      })
    })
  })]
});
var JavaScriptIcon = styled_components_esm_default(Icon4).attrs(() => ({
  "data-component-name": "icons/NodeJSIcon"
})).withConfig({
  displayName: "JavaScriptIcon",
  componentId: "sc-n2k6p7-0"
})([""]);

// node_modules/@redocly/openapi-docs/lib-esm/icons/PythonIcon/PythonIcon.js
init_styled_components_esm();
import { jsx as _jsx82, jsxs as _jsxs58 } from "react/jsx-runtime";
var Icon5 = () => _jsxs58("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "12",
  height: "12",
  viewBox: "0 0 12 12",
  fill: "none",
  children: [_jsxs58("g", {
    clipPath: "url(#clip0_6336_14290)",
    children: [_jsx82("path", {
      d: "M5.5928 9.36167e-05C5.12601 0.00226256 4.68024 0.0420729 4.28801 0.111479C3.13253 0.315613 2.92274 0.742882 2.92274 1.53084V2.57149H5.65327V2.91838H2.92274H1.898C1.10444 2.91838 0.409568 3.39536 0.192222 4.30273C-0.0584838 5.3428 -0.069604 5.99182 0.192222 7.07781C0.386317 7.88618 0.849843 8.46217 1.64341 8.46217H2.58223V7.21466C2.58223 6.3134 3.36201 5.51842 4.28801 5.51842H7.01535C7.77454 5.51842 8.38061 4.89333 8.38061 4.13088V1.53084C8.38061 0.790854 7.75634 0.234979 7.01535 0.111479C6.54628 0.0333971 6.05959 -0.00207535 5.5928 9.36167e-05ZM4.11616 0.837072C4.3982 0.837072 4.62853 1.07116 4.62853 1.35899C4.62853 1.6458 4.3982 1.87773 4.11616 1.87773C3.8331 1.87773 3.60378 1.6458 3.60378 1.35899C3.60378 1.07116 3.8331 0.837072 4.11616 0.837072Z",
      fill: "url(#paint0_linear_6336_14290)"
    }), _jsx82("path", {
      d: "M8.72123 2.91797V4.13047C8.72123 5.07051 7.92426 5.86171 7.01545 5.86171H4.28811C3.54105 5.86171 2.92285 6.5011 2.92285 7.24925V9.84929C2.92285 10.5893 3.56632 11.0245 4.28811 11.2368C5.15244 11.491 5.98129 11.5369 7.01545 11.2368C7.70287 11.0378 8.38071 10.6373 8.38071 9.84929V8.80864H5.65337V8.46176H8.38071H9.74598C10.5395 8.46176 10.8353 7.90823 11.1112 7.0774C11.3963 6.22208 11.3842 5.39955 11.1112 4.30232C10.9151 3.51232 10.5406 2.91797 9.74598 2.91797H8.72123ZM7.1873 9.50241C7.47036 9.50241 7.69967 9.73434 7.69967 10.0211C7.69967 10.309 7.47036 10.5431 7.1873 10.5431C6.90526 10.5431 6.67493 10.309 6.67493 10.0211C6.67493 9.73434 6.90526 9.50241 7.1873 9.50241Z",
      fill: "url(#paint1_linear_6336_14290)"
    })]
  }), _jsxs58("defs", {
    children: [_jsxs58("linearGradient", {
      id: "paint0_linear_6336_14290",
      x1: "-3.4002e-08",
      y1: "-2.95366e-08",
      x2: "6.29629",
      y2: "5.36531",
      gradientUnits: "userSpaceOnUse",
      children: [_jsx82("stop", {
        stopColor: "#5A9FD4"
      }), _jsx82("stop", {
        offset: "1",
        stopColor: "#306998"
      })]
    }), _jsxs58("linearGradient", {
      id: "paint1_linear_6336_14290",
      x1: "7.12169",
      y1: "9.93365",
      x2: "4.86282",
      y2: "6.76831",
      gradientUnits: "userSpaceOnUse",
      children: [_jsx82("stop", {
        stopColor: "#FFD43B"
      }), _jsx82("stop", {
        offset: "1",
        stopColor: "#FFE873"
      })]
    }), _jsx82("clipPath", {
      id: "clip0_6336_14290",
      children: _jsx82("rect", {
        width: "11.5",
        height: "11.5",
        fill: "white"
      })
    })]
  })]
});
var PythonIcon = styled_components_esm_default(Icon5).attrs(() => ({
  "data-component-name": "icons/PythonIcon"
})).withConfig({
  displayName: "PythonIcon",
  componentId: "sc-1vk0d0p-0"
})([""]);

// node_modules/@redocly/openapi-docs/lib-esm/icons/RIcon/RIcon.js
init_styled_components_esm();
import { jsx as _jsx83, jsxs as _jsxs59 } from "react/jsx-runtime";
var Icon6 = () => _jsxs59("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  preserveAspectRatio: "xMidYMid",
  width: "724",
  height: "561",
  viewBox: "0 0 724 561",
  children: [_jsxs59("defs", {
    children: [_jsxs59("linearGradient", {
      id: "gradientFill-1",
      x1: "0",
      x2: "1",
      y1: "0",
      y2: "1",
      gradientUnits: "objectBoundingBox",
      spreadMethod: "pad",
      children: [_jsx83("stop", {
        offset: "0",
        stopColor: "rgb(203,206,208)",
        stopOpacity: "1"
      }), _jsx83("stop", {
        offset: "1",
        stopColor: "rgb(132,131,139)",
        stopOpacity: "1"
      })]
    }), _jsxs59("linearGradient", {
      id: "gradientFill-2",
      x1: "0",
      x2: "1",
      y1: "0",
      y2: "1",
      gradientUnits: "objectBoundingBox",
      spreadMethod: "pad",
      children: [_jsx83("stop", {
        offset: "0",
        stopColor: "rgb(39,109,195)",
        stopOpacity: "1"
      }), _jsx83("stop", {
        offset: "1",
        stopColor: "rgb(22,92,170)",
        stopOpacity: "1"
      })]
    })]
  }), _jsx83("path", {
    d: "M361.453,485.937 C162.329,485.937 0.906,377.828 0.906,244.469 C0.906,111.109 162.329,3.000 361.453,3.000 C560.578,3.000 722.000,111.109 722.000,244.469 C722.000,377.828 560.578,485.937 361.453,485.937 ZM416.641,97.406 C265.289,97.406 142.594,171.314 142.594,262.484 C142.594,353.654 265.289,427.562 416.641,427.562 C567.992,427.562 679.687,377.033 679.687,262.484 C679.687,147.971 567.992,97.406 416.641,97.406 Z",
    fill: "url(#gradientFill-1)",
    fillRule: "evenodd"
  }), _jsx83("path", {
    d: "M550.000,377.000 C550.000,377.000 571.822,383.585 584.500,390.000 C588.899,392.226 596.510,396.668 602.000,402.500 C607.378,408.212 610.000,414.000 610.000,414.000 L696.000,559.000 L557.000,559.062 L492.000,437.000 C492.000,437.000 478.690,414.131 470.500,407.500 C463.668,401.969 460.755,400.000 454.000,400.000 C449.298,400.000 420.974,400.000 420.974,400.000 L421.000,558.974 L298.000,559.026 L298.000,152.938 L545.000,152.938 C545.000,152.938 657.500,154.967 657.500,262.000 C657.500,369.033 550.000,377.000 550.000,377.000 ZM496.500,241.024 L422.037,240.976 L422.000,310.026 L496.500,310.002 C496.500,310.002 531.000,309.895 531.000,274.877 C531.000,239.155 496.500,241.024 496.500,241.024 Z",
    fill: "url(#gradientFill-2)",
    fillRule: "evenodd"
  })]
});
var RIcon = styled_components_esm_default(Icon6).attrs(() => ({
  "data-component-name": "icons/RIcon"
})).withConfig({
  displayName: "RIcon",
  componentId: "sc-1smfpo6-0"
})([""]);

// node_modules/@redocly/openapi-docs/lib-esm/icons/RubyIcon/RubyIcon.js
init_styled_components_esm();
import { jsx as _jsx84, jsxs as _jsxs60 } from "react/jsx-runtime";
var Icon7 = () => _jsxs60("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "10",
  height: "10",
  viewBox: "0 0 10 10",
  fill: "none",
  children: [_jsxs60("g", {
    clipPath: "url(#clip0_6351_16623)",
    children: [_jsx84("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7.74747 6.58131L2.03809 9.97151L9.43066 9.46987L10 2.01562L7.74747 6.58131Z",
      fill: "url(#paint0_linear_6351_16623)"
    }), _jsx84("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M9.4423 9.46549L8.8069 5.07999L7.07617 7.36535L9.4423 9.46549Z",
      fill: "url(#paint1_linear_6351_16623)"
    }), _jsx84("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M9.45103 9.46503L4.79606 9.09961L2.0625 9.96222L9.45103 9.46503Z",
      fill: "url(#paint2_linear_6351_16623)"
    }), _jsx84("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M2.06988 9.96392L3.23275 6.1543L0.673828 6.70146L2.06988 9.96392Z",
      fill: "url(#paint3_linear_6351_16623)"
    }), _jsx84("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7.07647 7.37869L6.00647 3.1875L2.94434 6.05784L7.07647 7.37869Z",
      fill: "url(#paint4_linear_6351_16623)"
    }), _jsx84("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M9.75724 3.24496L6.86268 0.880859L6.05664 3.48672L9.75724 3.24496Z",
      fill: "url(#paint5_linear_6351_16623)"
    }), _jsx84("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M8.40341 0.0380086L6.701 0.978805L5.62695 0.0253906L8.40341 0.0380086Z",
      fill: "url(#paint6_linear_6351_16623)"
    }), _jsx84("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M0 7.97912L0.713168 6.67845L0.136274 5.12897L0 7.97912Z",
      fill: "url(#paint7_linear_6351_16623)"
    }), _jsx84("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M0.0976562 5.08L0.678083 6.72639L3.20016 6.16055L6.07959 3.48453L6.89218 0.903447L5.61267 0L3.43733 0.814112C2.75197 1.45157 1.42204 2.71286 1.37409 2.73659C1.32665 2.76081 0.49588 4.33099 0.0976562 5.08Z",
      fill: "white"
    }), _jsx84("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M2.13575 2.1231C3.62114 0.650327 5.53604 -0.219808 6.27091 0.521624C7.00533 1.26306 6.2265 3.0649 4.74111 4.53717C3.25572 6.00943 1.36454 6.92752 0.630172 6.18609C-0.104699 5.44516 0.65036 3.59536 2.13575 2.1231Z",
      fill: "url(#paint8_linear_6351_16623)"
    }), _jsx84("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M2.06934 9.96236L3.22312 6.14062L7.05495 7.37163C5.6695 8.67078 4.12859 9.76905 2.06934 9.96236Z",
      fill: "url(#paint9_linear_6351_16623)"
    }), _jsx84("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M6.08496 3.47728L7.06866 7.37371C8.22598 6.15683 9.26469 4.8486 9.7734 3.23047L6.08496 3.47728Z",
      fill: "url(#paint10_linear_6351_16623)"
    }), _jsx84("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M9.76328 3.25002C10.157 2.06191 10.2478 0.357474 8.39141 0.0410156L6.86816 0.882382L9.76328 3.25002Z",
      fill: "url(#paint11_linear_6351_16623)"
    }), _jsx84("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M0 7.96238C0.0545097 9.92326 1.46924 9.95249 2.07187 9.9697L0.679857 6.71875L0 7.96238Z",
      fill: "#9E1209"
    }), _jsx84("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M6.08984 3.48401C6.97916 4.03062 8.77147 5.12839 8.80781 5.14858C8.86428 5.18037 9.58053 3.94078 9.74305 3.24023L6.08984 3.48401Z",
      fill: "url(#paint12_radial_6351_16623)"
    }), _jsx84("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M3.22168 6.14062L4.7641 9.11645C5.67613 8.62182 6.39031 8.01919 7.04442 7.37365L3.22168 6.14062Z",
      fill: "url(#paint13_radial_6351_16623)"
    }), _jsx84("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M0.673622 6.72331L0.455078 9.32564C0.867434 9.8889 1.43474 9.93786 2.0298 9.89395C1.59928 8.82243 0.739235 6.6799 0.673622 6.72331Z",
      fill: "url(#paint14_linear_6351_16623)"
    }), _jsx84("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M6.85938 0.889009L9.92352 1.31903C9.76 0.626051 9.2578 0.17887 8.4018 0.0390625L6.85938 0.889009Z",
      fill: "url(#paint15_linear_6351_16623)"
    })]
  }), _jsxs60("defs", {
    children: [_jsxs60("linearGradient", {
      id: "paint0_linear_6351_16623",
      x1: "8.78586",
      y1: "10.8784",
      x2: "6.67627",
      y2: "7.15383",
      gradientUnits: "userSpaceOnUse",
      children: [_jsx84("stop", {
        stopColor: "#FB7655"
      }), _jsx84("stop", {
        offset: "0.41",
        stopColor: "#E42B1E"
      }), _jsx84("stop", {
        offset: "0.99",
        stopColor: "#990000"
      }), _jsx84("stop", {
        offset: "1",
        stopColor: "#990000"
      })]
    }), _jsxs60("linearGradient", {
      id: "paint1_linear_6351_16623",
      x1: "9.83628",
      y1: "7.75033",
      x2: "7.11749",
      y2: "5.92586",
      gradientUnits: "userSpaceOnUse",
      children: [_jsx84("stop", {
        stopColor: "#871101"
      }), _jsx84("stop", {
        offset: "0.99",
        stopColor: "#911209"
      }), _jsx84("stop", {
        offset: "1",
        stopColor: "#911209"
      })]
    }), _jsxs60("linearGradient", {
      id: "paint2_linear_6351_16623",
      x1: "7.66112",
      y1: "10.9916",
      x2: "4.94241",
      y2: "9.16714",
      gradientUnits: "userSpaceOnUse",
      children: [_jsx84("stop", {
        stopColor: "#871101"
      }), _jsx84("stop", {
        offset: "0.99",
        stopColor: "#911209"
      }), _jsx84("stop", {
        offset: "1",
        stopColor: "#911209"
      })]
    }), _jsxs60("linearGradient", {
      id: "paint3_linear_6351_16623",
      x1: "1.95361",
      y1: "6.4299",
      x2: "2.37508",
      y2: "9.16906",
      gradientUnits: "userSpaceOnUse",
      children: [_jsx84("stop", {
        stopColor: "white"
      }), _jsx84("stop", {
        offset: "0.23",
        stopColor: "#E57252"
      }), _jsx84("stop", {
        offset: "0.46",
        stopColor: "#DE3B20"
      }), _jsx84("stop", {
        offset: "0.99",
        stopColor: "#A60003"
      }), _jsx84("stop", {
        offset: "1",
        stopColor: "#A60003"
      })]
    }), _jsxs60("linearGradient", {
      id: "paint4_linear_6351_16623",
      x1: "4.85231",
      y1: "3.87267",
      x2: "5.00761",
      y2: "6.66815",
      gradientUnits: "userSpaceOnUse",
      children: [_jsx84("stop", {
        stopColor: "white"
      }), _jsx84("stop", {
        offset: "0.23",
        stopColor: "#E4714E"
      }), _jsx84("stop", {
        offset: "0.56",
        stopColor: "#BE1A0D"
      }), _jsx84("stop", {
        offset: "0.99",
        stopColor: "#A80D00"
      }), _jsx84("stop", {
        offset: "1",
        stopColor: "#A80D00"
      })]
    }), _jsxs60("linearGradient", {
      id: "paint5_linear_6351_16623",
      x1: "7.42458",
      y1: "1.28721",
      x2: "7.88948",
      y2: "3.2907",
      gradientUnits: "userSpaceOnUse",
      children: [_jsx84("stop", {
        stopColor: "white"
      }), _jsx84("stop", {
        offset: "0.18",
        stopColor: "#E46342"
      }), _jsx84("stop", {
        offset: "0.4",
        stopColor: "#C82410"
      }), _jsx84("stop", {
        offset: "0.99",
        stopColor: "#A80D00"
      }), _jsx84("stop", {
        offset: "1",
        stopColor: "#A80D00"
      })]
    }), _jsxs60("linearGradient", {
      id: "paint6_linear_6351_16623",
      x1: "6.00479",
      y1: "0.581667",
      x2: "8.00815",
      y2: "-0.420014",
      gradientUnits: "userSpaceOnUse",
      children: [_jsx84("stop", {
        stopColor: "white"
      }), _jsx84("stop", {
        offset: "0.54",
        stopColor: "#C81F11"
      }), _jsx84("stop", {
        offset: "0.99",
        stopColor: "#BF0905"
      }), _jsx84("stop", {
        offset: "1",
        stopColor: "#BF0905"
      })]
    }), _jsxs60("linearGradient", {
      id: "paint7_linear_6351_16623",
      x1: "0.197007",
      y1: "5.73133",
      x2: "0.361894",
      y2: "7.38217",
      gradientUnits: "userSpaceOnUse",
      children: [_jsx84("stop", {
        stopColor: "white"
      }), _jsx84("stop", {
        offset: "0.31",
        stopColor: "#DE4024"
      }), _jsx84("stop", {
        offset: "0.99",
        stopColor: "#BF190B"
      }), _jsx84("stop", {
        offset: "1",
        stopColor: "#BF190B"
      })]
    }), _jsxs60("linearGradient", {
      id: "paint8_linear_6351_16623",
      x1: "-0.936764",
      y1: "7.82917",
      x2: "6.81425",
      y2: "-0.141038",
      gradientUnits: "userSpaceOnUse",
      children: [_jsx84("stop", {
        stopColor: "#BD0012"
      }), _jsx84("stop", {
        offset: "0.07",
        stopColor: "white"
      }), _jsx84("stop", {
        offset: "0.17",
        stopColor: "white"
      }), _jsx84("stop", {
        offset: "0.27",
        stopColor: "#C82F1C"
      }), _jsx84("stop", {
        offset: "0.33",
        stopColor: "#820C01"
      }), _jsx84("stop", {
        offset: "0.46",
        stopColor: "#A31601"
      }), _jsx84("stop", {
        offset: "0.72",
        stopColor: "#B31301"
      }), _jsx84("stop", {
        offset: "0.99",
        stopColor: "#E82609"
      }), _jsx84("stop", {
        offset: "1",
        stopColor: "#E82609"
      })]
    }), _jsxs60("linearGradient", {
      id: "paint9_linear_6351_16623",
      x1: "5.00048",
      y1: "8.63258",
      x2: "2.6658",
      y2: "8.05637",
      gradientUnits: "userSpaceOnUse",
      children: [_jsx84("stop", {
        stopColor: "#8C0C01"
      }), _jsx84("stop", {
        offset: "0.54",
        stopColor: "#990C00"
      }), _jsx84("stop", {
        offset: "0.99",
        stopColor: "#A80D0E"
      }), _jsx84("stop", {
        offset: "1",
        stopColor: "#A80D0E"
      })]
    }), _jsxs60("linearGradient", {
      id: "paint10_linear_6351_16623",
      x1: "9.01061",
      y1: "5.83051",
      x2: "6.93656",
      y2: "3.9716",
      gradientUnits: "userSpaceOnUse",
      children: [_jsx84("stop", {
        stopColor: "#7E110B"
      }), _jsx84("stop", {
        offset: "0.99",
        stopColor: "#9E0C00"
      }), _jsx84("stop", {
        offset: "1",
        stopColor: "#9E0C00"
      })]
    }), _jsxs60("linearGradient", {
      id: "paint11_linear_6351_16623",
      x1: "9.77255",
      y1: "2.41961",
      x2: "8.73942",
      y2: "1.31512",
      gradientUnits: "userSpaceOnUse",
      children: [_jsx84("stop", {
        stopColor: "#79130D"
      }), _jsx84("stop", {
        offset: "0.99",
        stopColor: "#9E120B"
      }), _jsx84("stop", {
        offset: "1",
        stopColor: "#9E120B"
      })]
    }), _jsxs60("radialGradient", {
      id: "paint12_radial_6351_16623",
      cx: "0",
      cy: "0",
      r: "1",
      gradientUnits: "userSpaceOnUse",
      gradientTransform: "translate(7.2589 4.00782) scale(2.54164 2.54164)",
      children: [_jsx84("stop", {
        stopColor: "#A80D00"
      }), _jsx84("stop", {
        offset: "0.99",
        stopColor: "#7E0E08"
      }), _jsx84("stop", {
        offset: "1",
        stopColor: "#7E0E08"
      })]
    }), _jsxs60("radialGradient", {
      id: "paint13_radial_6351_16623",
      cx: "0",
      cy: "0",
      r: "1",
      gradientUnits: "userSpaceOnUse",
      gradientTransform: "translate(3.73964 7.35654) scale(3.37878)",
      children: [_jsx84("stop", {
        stopColor: "#A30C00"
      }), _jsx84("stop", {
        offset: "0.99",
        stopColor: "#800E08"
      }), _jsx84("stop", {
        offset: "1",
        stopColor: "#800E08"
      })]
    }), _jsxs60("linearGradient", {
      id: "paint14_linear_6351_16623",
      x1: "1.3459",
      y1: "9.96087",
      x2: "0.503971",
      y2: "7.10447",
      gradientUnits: "userSpaceOnUse",
      children: [_jsx84("stop", {
        stopColor: "#8B2114"
      }), _jsx84("stop", {
        offset: "0.43",
        stopColor: "#9E100A"
      }), _jsx84("stop", {
        offset: "0.99",
        stopColor: "#B3100C"
      }), _jsx84("stop", {
        offset: "1",
        stopColor: "#B3100C"
      })]
    }), _jsxs60("linearGradient", {
      id: "paint15_linear_6351_16623",
      x1: "7.80527",
      y1: "0.494718",
      x2: "9.69282",
      y2: "1.32791",
      gradientUnits: "userSpaceOnUse",
      children: [_jsx84("stop", {
        stopColor: "#B31000"
      }), _jsx84("stop", {
        offset: "0.44",
        stopColor: "#910F08"
      }), _jsx84("stop", {
        offset: "0.99",
        stopColor: "#791C12"
      }), _jsx84("stop", {
        offset: "1",
        stopColor: "#791C12"
      })]
    }), _jsx84("clipPath", {
      id: "clip0_6351_16623",
      children: _jsx84("rect", {
        width: "10",
        height: "9.97224",
        fill: "white"
      })
    })]
  })]
});
var RubyIcon = styled_components_esm_default(Icon7).attrs(() => ({
  "data-component-name": "icons/RubyIcon"
})).withConfig({
  displayName: "RubyIcon",
  componentId: "sc-hzgo6i-0"
})([""]);

// node_modules/@redocly/openapi-docs/lib-esm/icons/PHPIcon/PHPIcon.js
init_styled_components_esm();
import { jsx as _jsx85, jsxs as _jsxs61 } from "react/jsx-runtime";
var Icon8 = () => _jsxs61("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "22",
  height: "12",
  viewBox: "0 0 22 12",
  fill: "none",
  children: [_jsxs61("g", {
    clipPath: "url(#clip0_6351_15636)",
    children: [_jsx85("mask", {
      id: "mask0_6351_15636",
      maskUnits: "userSpaceOnUse",
      x: "0",
      y: "0",
      width: "21",
      height: "12",
      children: _jsx85("path", {
        d: "M0.394531 5.6623C0.394531 8.62697 4.96343 11.0304 10.5992 11.0304C16.235 11.0304 20.804 8.62697 20.804 5.6623C20.804 2.69767 16.235 0.294237 10.5992 0.294237C4.96343 0.294237 0.394531 2.69767 0.394531 5.6623Z",
        fill: "white"
      })
    }), _jsx85("g", {
      mask: "url(#mask0_6351_15636)",
      children: _jsx85("path", {
        d: "M0.394531 5.6623C0.394531 8.62697 4.96343 11.0304 10.5992 11.0304C16.235 11.0304 20.804 8.62697 20.804 5.6623C20.804 2.69767 16.235 0.294237 10.5992 0.294237C4.96343 0.294237 0.394531 2.69767 0.394531 5.6623Z",
        fill: "url(#paint0_radial_6351_15636)"
      })
    }), _jsx85("mask", {
      id: "mask1_6351_15636",
      maskUnits: "userSpaceOnUse",
      x: "-1",
      y: "-1",
      width: "23",
      height: "13",
      children: _jsx85("path", {
        d: "M-0.0302734 -0.315971H21.2295V11.6427H-0.0302734V-0.315971Z",
        fill: "white"
      })
    }), _jsx85("g", {
      mask: "url(#mask1_6351_15636)",
      children: _jsx85("path", {
        d: "M10.6 10.6319C16.0157 10.6319 20.4061 8.40699 20.4061 5.66241C20.4061 2.91786 16.0157 0.692893 10.6 0.692893C5.18435 0.692893 0.793945 2.91786 0.793945 5.66241C0.793945 8.40699 5.18435 10.6319 10.6 10.6319Z",
        fill: "#777BB3"
      })
    }), _jsx85("mask", {
      id: "mask2_6351_15636",
      maskUnits: "userSpaceOnUse",
      x: "-1",
      y: "-1",
      width: "23",
      height: "13",
      children: _jsx85("path", {
        d: "M-0.0302734 -0.315971H21.2295V11.6427H-0.0302734V-0.315971Z",
        fill: "white"
      })
    }), _jsxs61("g", {
      mask: "url(#mask2_6351_15636)",
      children: [_jsx85("path", {
        d: "M5.93929 6.27975C6.3846 6.27975 6.71705 6.19763 6.92739 6.03575C7.13549 5.87552 7.27921 5.59793 7.35454 5.21071C7.42478 4.84878 7.39802 4.59606 7.27504 4.45968C7.14929 4.32038 6.87742 4.24974 6.46698 4.24974H5.75533L5.36081 6.27975H5.93929ZM3.61167 8.78036C3.57864 8.78036 3.54727 8.7656 3.52627 8.74006C3.50523 8.71456 3.4967 8.68097 3.50301 8.64852L4.54858 3.26894C4.5587 3.21694 4.60428 3.17937 4.65728 3.17937H6.91075C7.61896 3.17937 8.1461 3.37166 8.47744 3.75098C8.81055 4.13229 8.91341 4.6653 8.78316 5.33517C8.73016 5.60808 8.63899 5.86153 8.51221 6.08845C8.38528 6.31563 8.21752 6.52583 8.01352 6.71333C7.76933 6.94187 7.49295 7.10759 7.19281 7.20511C6.89742 7.30133 6.51807 7.35013 6.0653 7.35013H5.15283L4.89225 8.69075C4.88213 8.74279 4.83659 8.78036 4.78358 8.78036H3.61167Z",
        fill: "black"
      }), _jsx85("path", {
        d: "M5.84699 4.36107H6.46737C6.96273 4.36107 7.1348 4.46976 7.19326 4.53454C7.29026 4.64209 7.30857 4.86886 7.24623 5.19031C7.17618 5.55018 7.04633 5.80533 6.86023 5.94861C6.6697 6.09529 6.35996 6.16963 5.93967 6.16963H5.49551L5.84699 4.36107ZM6.91113 3.06924H4.65763C4.55162 3.06924 4.46049 3.14438 4.44027 3.24843L3.3947 8.62801C3.38208 8.69294 3.39913 8.76007 3.44117 8.81112C3.48324 8.86217 3.54592 8.89169 3.61206 8.89169H4.78393C4.88997 8.89169 4.9811 8.81655 5.00133 8.7125L5.24449 7.46145H6.06568C6.53008 7.46145 6.92102 7.41081 7.22755 7.31097C7.5428 7.20855 7.83283 7.03489 8.08954 6.79483C8.30184 6.59951 8.47671 6.38027 8.60922 6.14312C8.74176 5.90591 8.83699 5.64138 8.89224 5.35688C9.02936 4.65176 8.91797 4.08712 8.5612 3.67876C8.2079 3.27431 7.65271 3.06924 6.91113 3.06924ZM5.22684 6.39108H5.93967C6.41215 6.39108 6.76408 6.30209 6.99532 6.12408C7.22659 5.94603 7.38257 5.64887 7.46363 5.23246C7.54117 4.83266 7.50585 4.55052 7.35766 4.38616C7.20928 4.22181 6.91257 4.13961 6.46737 4.13961H5.66444L5.22684 6.39108ZM6.91113 3.29069C7.58904 3.29069 8.08359 3.4686 8.39444 3.82444C8.70526 4.18028 8.79886 4.67697 8.67484 5.31466C8.6238 5.57734 8.53747 5.81751 8.41592 6.03509C8.29423 6.25282 8.13534 6.45191 7.93898 6.63243C7.70498 6.85142 7.44502 7.00747 7.15898 7.10041C6.87293 7.1936 6.5086 7.24 6.06568 7.24H5.0619L4.78393 8.67024H3.61206L4.65763 3.29069H6.91113Z",
        fill: "white"
      }), _jsx85("path", {
        d: "M11.4707 7.35074C11.4376 7.35074 11.4063 7.33597 11.3853 7.31043C11.3642 7.28493 11.3557 7.25138 11.362 7.2189L11.8245 4.83865C11.8685 4.61228 11.8576 4.44981 11.794 4.38116C11.755 4.33919 11.6379 4.2688 11.2917 4.2688H10.4538L9.87231 7.26112C9.8622 7.31316 9.81662 7.35074 9.76361 7.35074H8.60097C8.5679 7.35074 8.53656 7.33597 8.51552 7.31043C8.49449 7.28493 8.48596 7.25134 8.49227 7.2189L9.53784 1.83932C9.54795 1.78731 9.59354 1.74974 9.64654 1.74974H10.8092C10.8423 1.74974 10.8736 1.7645 10.8946 1.79001C10.9157 1.81555 10.9242 1.8491 10.9179 1.88158L10.6656 3.17998H11.567C12.2537 3.17998 12.7193 3.30104 12.9905 3.55011C13.267 3.80419 13.3532 4.21045 13.2469 4.75774L12.7605 7.26112C12.7504 7.31316 12.7048 7.35074 12.6518 7.35074H11.4707Z",
        fill: "black"
      }), _jsx85("path", {
        d: "M10.8086 1.63955H9.64594C9.5399 1.63955 9.44877 1.7147 9.42855 1.81874L8.38298 7.19833C8.37036 7.26325 8.38741 7.33039 8.42949 7.38143C8.47156 7.43248 8.53423 7.46201 8.60038 7.46201H9.76302C9.86903 7.46201 9.96019 7.38686 9.98042 7.28281L10.5445 4.38007H11.2911C11.6367 4.38007 11.7093 4.45389 11.7122 4.45706C11.7331 4.47962 11.7607 4.58407 11.7152 4.81808L11.2527 7.19833C11.2401 7.26325 11.2571 7.33039 11.2992 7.38143C11.3413 7.43248 11.4039 7.46201 11.4701 7.46201H12.6512C12.7572 7.46201 12.8484 7.38686 12.8686 7.28281L13.355 4.77943C13.4692 4.1918 13.3715 3.75099 13.0649 3.46915C12.7722 3.20041 12.2821 3.06979 11.5664 3.06979H10.7993L11.026 1.90327C11.0386 1.83834 11.0216 1.77117 10.9795 1.72016C10.9374 1.66911 10.8747 1.63955 10.8086 1.63955ZM10.8086 1.86101L10.5306 3.29124H11.5664C12.2181 3.29124 12.6676 3.405 12.915 3.63221C13.1624 3.85958 13.2365 4.22797 13.1376 4.73721L12.6512 7.24055H11.4701L11.9326 4.86034C11.9852 4.58957 11.9659 4.40487 11.8745 4.3064C11.7831 4.20793 11.5886 4.15862 11.2911 4.15862H10.3619L9.76302 7.24055H8.60038L9.64594 1.86101H10.8086Z",
        fill: "white"
      }), _jsx85("path", {
        d: "M15.0867 6.27975C15.5321 6.27975 15.8645 6.19763 16.0748 6.03575C16.2829 5.87556 16.4267 5.59796 16.502 5.21071C16.5723 4.84878 16.5455 4.59606 16.4225 4.45968C16.2967 4.32038 16.0249 4.24974 15.6144 4.24974H14.9028L14.5083 6.27975H15.0867ZM12.7592 8.78036C12.7261 8.78036 12.6948 8.7656 12.6738 8.74006C12.6527 8.71456 12.6442 8.68097 12.6505 8.64852L13.696 3.26894C13.7062 3.21694 13.7517 3.17937 13.8048 3.17937H16.0582C16.7665 3.17937 17.2936 3.37166 17.6249 3.75098C17.958 4.13225 18.0609 4.66526 17.9307 5.33517C17.8776 5.60808 17.7864 5.86153 17.6597 6.08845C17.5327 6.31563 17.365 6.52583 17.161 6.71333C16.9168 6.94187 16.6404 7.10759 16.3403 7.20511C16.0449 7.30133 15.6655 7.35013 15.2128 7.35013H14.3002L14.0398 8.69075C14.0296 8.74279 13.9841 8.78036 13.931 8.78036H12.7592Z",
        fill: "black"
      }), _jsx85("path", {
        d: "M14.9934 4.36107H15.6138C16.1092 4.36107 16.2812 4.46976 16.3397 4.53454C16.4367 4.64209 16.4551 4.86887 16.3927 5.19027C16.3226 5.55018 16.1927 5.80533 16.0067 5.94861C15.8162 6.09529 15.5064 6.16963 15.0861 6.16963H14.642L14.9934 4.36107ZM16.0576 3.06924H13.8041C13.6981 3.06924 13.607 3.14438 13.5868 3.24843L12.5412 8.62801C12.5286 8.69294 12.5456 8.76007 12.5877 8.81112C12.6297 8.86217 12.6924 8.89169 12.7585 8.89169H13.9304C14.0364 8.89169 14.1276 8.81655 14.1478 8.7125L14.3909 7.46145H15.2121C15.6765 7.46145 16.0675 7.41081 16.374 7.31097C16.6892 7.20855 16.9794 7.03486 17.2361 6.79476C17.4484 6.59947 17.6232 6.38027 17.7557 6.14312C17.8882 5.90591 17.9834 5.64138 18.0387 5.35688C18.1758 4.65173 18.0644 4.08709 17.7076 3.67872C17.3544 3.27431 16.7992 3.06924 16.0576 3.06924ZM14.3733 6.39108H15.0861C15.5586 6.39108 15.9105 6.30209 16.1418 6.12408C16.3731 5.94603 16.529 5.64887 16.6101 5.23246C16.6877 4.83266 16.6523 4.55052 16.5041 4.38616C16.3557 4.22181 16.059 4.13961 15.6138 4.13961H14.8109L14.3733 6.39108ZM16.0576 3.29069C16.7355 3.29069 17.23 3.4686 17.5409 3.82444C17.8517 4.18028 17.9453 4.67697 17.8213 5.31466C17.7702 5.57734 17.6839 5.81751 17.5624 6.03509C17.4407 6.25282 17.2818 6.45191 17.0854 6.63243C16.8514 6.85142 16.5915 7.00747 16.3054 7.10041C16.0194 7.1936 15.655 7.24 15.2121 7.24H14.2083L13.9304 8.67024H12.7585L13.8041 3.29069H16.0576Z",
        fill: "white"
      })]
    })]
  }), _jsxs61("defs", {
    children: [_jsxs61("radialGradient", {
      id: "paint0_radial_6351_15636",
      cx: "0",
      cy: "0",
      r: "1",
      gradientUnits: "userSpaceOnUse",
      gradientTransform: "translate(6.52149 2.18148) scale(13.4002)",
      children: [_jsx85("stop", {
        stopColor: "#AEB2D5"
      }), _jsx85("stop", {
        offset: "0.3",
        stopColor: "#AEB2D5"
      }), _jsx85("stop", {
        offset: "0.75",
        stopColor: "#484C89"
      }), _jsx85("stop", {
        offset: "1",
        stopColor: "#484C89"
      })]
    }), _jsx85("clipPath", {
      id: "clip0_6351_15636",
      children: _jsx85("rect", {
        width: "21",
        height: "11.3267",
        fill: "white",
        transform: "translate(0.0996094)"
      })
    })]
  })]
});
var PHPIcon = styled_components_esm_default(Icon8).attrs(() => ({
  "data-component-name": "icons/PHPIcon"
})).withConfig({
  displayName: "PHPIcon",
  componentId: "sc-1oc5574-0"
})([""]);

// node_modules/@redocly/openapi-docs/lib-esm/icons/GOIcon/GOIcon.js
init_styled_components_esm();
import { jsx as _jsx86, jsxs as _jsxs62 } from "react/jsx-runtime";
var Icon9 = () => _jsxs62("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "21",
  height: "19",
  viewBox: "0 0 12 5",
  fill: "none",
  children: [_jsxs62("g", {
    clipPath: "url(#clip0_6351_16646)",
    children: [_jsx86("path", {
      d: "M1.33603 1.58431C1.31445 1.58431 1.30906 1.57353 1.31985 1.55735L1.4331 1.41173C1.44389 1.39555 1.47086 1.38477 1.49243 1.38477H3.41779C3.43936 1.38477 3.44476 1.40095 3.43397 1.41712L3.34229 1.55735C3.3315 1.57353 3.30454 1.58971 3.28836 1.58971L1.33603 1.58431Z",
      fill: "#3B3C45"
    }), _jsx86("path", {
      d: "M0.521573 2.08627C0.5 2.08627 0.494607 2.07548 0.505393 2.0593L0.61865 1.91368C0.629436 1.89751 0.656402 1.88672 0.677975 1.88672H3.13726C3.15884 1.88672 3.16962 1.9029 3.16423 1.91908L3.12108 2.04851C3.11569 2.07009 3.09412 2.08087 3.07255 2.08087L0.521573 2.08627Z",
      fill: "#00ACD7"
    }), _jsx86("path", {
      d: "M1.82626 2.57845C1.80469 2.57845 1.79929 2.56227 1.81008 2.54609L1.88559 2.41127C1.89637 2.39509 1.91794 2.37891 1.93952 2.37891H3.01815C3.03973 2.37891 3.05051 2.39509 3.05051 2.41666L3.03972 2.54609C3.03972 2.56767 3.01815 2.58385 3.00197 2.58385L1.82626 2.57845Z",
      fill: "#00ACD7"
    }), _jsx86("path", {
      d: "M7.42518 1.49193C7.08541 1.57822 6.8535 1.64294 6.51913 1.72923C6.43823 1.7508 6.43284 1.75619 6.36273 1.6753C6.28183 1.58361 6.2225 1.52429 6.10925 1.47036C5.76948 1.30317 5.44049 1.35171 5.13308 1.55125C4.76635 1.78855 4.57758 2.13911 4.58298 2.57596C4.58837 3.00741 4.885 3.36336 5.31106 3.42269C5.67779 3.47122 5.9852 3.34179 6.2279 3.06674C6.27643 3.00741 6.31958 2.94269 6.37351 2.86719C6.17936 2.86719 5.93666 2.86719 5.33263 2.86719C5.21937 2.86719 5.19241 2.79708 5.23016 2.70539C5.30027 2.5382 5.42971 2.25776 5.50521 2.11754C5.52139 2.08518 5.55914 2.03125 5.64004 2.03125C5.91509 2.03125 6.92901 2.03125 7.60316 2.03125C7.59237 2.17686 7.59237 2.32248 7.5708 2.46809C7.51147 2.8564 7.36586 3.21235 7.12856 3.52516C6.74025 4.03751 6.23329 4.3557 5.5915 4.442C5.06297 4.51211 4.57219 4.40964 4.14074 4.08605C3.74164 3.78403 3.51513 3.38493 3.4558 2.88876C3.38569 2.3009 3.55827 1.77237 3.91422 1.30856C4.29714 0.806995 4.8041 0.488798 5.42431 0.375541C5.93127 0.283857 6.41666 0.343182 6.8535 0.639807C7.13934 0.828568 7.34428 1.08744 7.47911 1.40024C7.51147 1.44878 7.4899 1.47575 7.42518 1.49193Z",
      fill: "#00ACD7"
    }), _jsx86("path", {
      d: "M9.21072 4.4733C8.71994 4.46252 8.2723 4.3223 7.89478 3.9987C7.57658 3.72365 7.37704 3.3731 7.31232 2.95782C7.21524 2.34839 7.38243 1.80907 7.74916 1.32908C8.14287 0.811337 8.61747 0.541679 9.25925 0.428422C9.80936 0.331345 10.3271 0.385277 10.7963 0.703474C11.2224 0.994705 11.4866 1.38841 11.5567 1.90615C11.6484 2.63423 11.4381 3.22748 10.9365 3.73444C10.5806 4.09578 10.1437 4.3223 9.64217 4.42477C9.49655 4.45173 9.35094 4.45712 9.21072 4.4733ZM10.4943 2.29446C10.4889 2.22435 10.4889 2.17042 10.4781 2.11649C10.381 1.58256 9.89026 1.28054 9.3779 1.39919C8.87634 1.51245 8.55275 1.83065 8.4341 2.33761C8.33702 2.75827 8.54196 3.18433 8.93027 3.35692C9.2269 3.48635 9.52352 3.47017 9.80936 3.32456C10.2354 3.10344 10.4673 2.75827 10.4943 2.29446Z",
      fill: "#00ACD7"
    })]
  }), _jsx86("defs", {
    children: _jsx86("clipPath", {
      id: "clip0_6351_16646",
      children: _jsx86("rect", {
        width: "11.0769",
        height: "4.5",
        fill: "white",
        transform: "translate(0.5)"
      })
    })
  })]
});
var GOIcon = styled_components_esm_default(Icon9).attrs(() => ({
  "data-component-name": "icons/GOIcon"
})).withConfig({
  displayName: "GOIcon",
  componentId: "sc-x5tns7-0"
})([""]);

// node_modules/@redocly/openapi-docs/lib-esm/icons/JavaIcon/JavaIcon.js
init_styled_components_esm();
import { jsx as _jsx87, jsxs as _jsxs63 } from "react/jsx-runtime";
var Icon10 = () => _jsxs63("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "19",
  height: "19",
  viewBox: "0 0 19 19",
  fill: "none",
  children: [_jsxs63("g", {
    clipPath: "url(#clip0_6351_16166)",
    children: [_jsx87("path", {
      d: "M9.11124 3.58526C8.27951 4.17023 7.33687 4.83324 6.83177 5.93016C5.95448 7.8439 8.62693 9.93138 8.74115 10.0193C8.7677 10.0397 8.79948 10.0499 8.83115 10.0499C8.8648 10.0499 8.89848 10.0384 8.92583 10.0155C8.97888 9.97114 8.99393 9.89576 8.96208 9.83438C8.95241 9.81575 7.99313 7.95246 8.02878 6.61574C8.0414 6.15017 8.69295 5.62201 9.38272 5.06285C10.0145 4.55069 10.7306 3.97023 11.1496 3.29118C12.0694 1.79647 11.0471 0.326724 11.0367 0.312028C10.996 0.255005 10.9211 0.234368 10.857 0.262458C10.793 0.290724 10.7575 0.359947 10.7721 0.428396C10.7742 0.438134 10.973 1.41007 10.4198 2.41143C10.1919 2.82522 9.69115 3.17741 9.11124 3.58526Z",
      fill: "#DB380E"
    }), _jsx87("path", {
      d: "M12.6158 4.2449C12.6744 4.20071 12.6917 4.12009 12.6562 4.05576C12.6206 3.99142 12.5433 3.96305 12.4746 3.98913C12.3333 4.04285 9.01465 5.32209 9.01465 6.86774C9.01465 7.93322 9.46978 8.49608 9.80212 8.90713C9.93248 9.06835 10.045 9.20757 10.0821 9.32644C10.1865 9.66896 9.93916 10.2881 9.83513 10.4977C9.80514 10.558 9.81984 10.6311 9.87085 10.6751C9.89841 10.6989 9.93283 10.711 9.96728 10.711C9.9966 10.711 10.0261 10.7022 10.0515 10.6845C10.1086 10.6449 11.4461 9.69923 11.2062 8.55992C11.1168 8.12686 10.904 7.81046 10.7163 7.53125C10.4254 7.09865 10.2153 6.78618 10.534 6.20905C10.9074 5.53587 12.5986 4.25769 12.6158 4.2449Z",
      fill: "#DB380E"
    }), _jsx87("path", {
      d: "M3.97636 10.7348C3.91948 10.9052 3.94634 11.0741 4.05395 11.2236C4.41371 11.7231 5.68802 11.9981 7.64229 11.9981C7.6424 11.9981 7.64247 11.9981 7.64254 11.9981C7.90734 11.9981 8.1869 11.9929 8.47325 11.9826C11.5978 11.8708 12.7567 10.8974 12.8045 10.856C12.8566 10.8109 12.8705 10.7358 12.8381 10.675C12.8057 10.6143 12.7359 10.5838 12.6691 10.6022C11.5687 10.9026 9.51388 11.0093 8.08864 11.0093C6.49384 11.0093 5.68166 10.8944 5.48281 10.8096C5.58484 10.6695 6.21414 10.4193 6.99394 10.2659C7.06847 10.2513 7.11969 10.1825 7.11231 10.1069C7.10493 10.0313 7.04144 9.97363 6.96546 9.97363C6.50836 9.97363 4.21599 10.0103 3.97636 10.7348Z",
      fill: "#73A1FB"
    }), _jsx87("path", {
      d: "M14.4317 9.7334C13.7872 9.7334 13.1761 10.0564 13.1503 10.0701C13.0908 10.102 13.0605 10.1704 13.0769 10.236C13.0933 10.3016 13.1522 10.3477 13.2199 10.3478C13.2335 10.3478 14.5945 10.3589 14.7178 11.1365C14.827 11.8074 13.4301 12.8943 12.8826 13.2566C12.8234 13.2957 12.8005 13.3713 12.8279 13.4367C12.8513 13.4924 12.9055 13.5272 12.9639 13.5272C12.9741 13.5272 12.9844 13.5261 12.9947 13.5239C13.1246 13.4961 16.1731 12.8243 15.8507 11.0495C15.6541 9.96174 14.9705 9.7334 14.4317 9.7334Z",
      fill: "#73A1FB"
    }), _jsx87("path", {
      d: "M12.3413 13.0394C12.352 12.9825 12.3283 12.9247 12.281 12.8915L11.55 12.3795C11.5144 12.3545 11.4694 12.3467 11.4275 12.3578C11.4199 12.3597 10.6555 12.5607 9.54578 12.6839C9.10534 12.7333 8.61202 12.7594 8.11906 12.7594C7.0096 12.7594 6.28418 12.629 6.17853 12.5334C6.16454 12.5065 6.16897 12.4943 6.17147 12.4875C6.19066 12.4342 6.29353 12.3708 6.35984 12.3457C6.43307 12.3185 6.47255 12.239 6.44977 12.1644C6.42705 12.0896 6.35003 12.0456 6.27402 12.0638C5.5408 12.2408 5.18227 12.4882 5.20836 12.7992C5.25469 13.3507 6.532 13.6337 7.61183 13.7086C7.76711 13.7192 7.93505 13.7246 8.11087 13.7246C8.11098 13.7246 8.11105 13.7246 8.11115 13.7246C9.90673 13.7246 12.2086 13.1612 12.2316 13.1554C12.2878 13.1417 12.3307 13.0963 12.3413 13.0394Z",
      fill: "#73A1FB"
    }), _jsx87("path", {
      d: "M6.83099 14.2232C6.88636 14.1872 6.9109 14.1188 6.89124 14.0557C6.87166 13.9927 6.8127 13.9513 6.74647 13.9522C6.64821 13.9548 5.78498 13.9937 5.72454 14.5433C5.70626 14.7076 5.7533 14.8576 5.86443 14.9893C6.17437 15.3566 7.01102 15.5749 8.42174 15.6567C8.58863 15.6667 8.75815 15.6718 8.92567 15.6718C10.7192 15.6718 11.9271 15.1102 11.9777 15.0863C12.0267 15.0631 12.0591 15.0149 12.0619 14.9608C12.0648 14.9066 12.0378 14.8553 11.9915 14.827L11.0678 14.263C11.0357 14.2435 10.9974 14.237 10.9608 14.2445C10.955 14.2458 10.3685 14.3674 9.48332 14.4876C9.31584 14.5103 9.1061 14.5219 8.86 14.5219C7.97582 14.5219 6.99235 14.3774 6.80374 14.2828C6.801 14.2652 6.80448 14.2428 6.83099 14.2232Z",
      fill: "#73A1FB"
    }), _jsx87("path", {
      d: "M8.08944 17.3678C12.1976 17.3643 14.4025 16.6338 14.8273 16.174C14.9776 16.0114 14.9939 15.8574 14.9811 15.7568C14.9495 15.5093 14.7241 15.3578 14.6985 15.3413C14.6369 15.3017 14.5541 15.3121 14.506 15.3675C14.458 15.423 14.4569 15.5041 14.5051 15.5595C14.531 15.5929 14.5459 15.6486 14.4702 15.7245C14.3004 15.8831 12.5877 16.3645 9.73617 16.5091C9.34555 16.5294 8.93583 16.5397 8.51849 16.5398C5.96533 16.5398 4.0968 16.1901 3.85152 15.9863C3.94605 15.8504 4.60699 15.6334 5.30987 15.5107C5.38908 15.4968 5.44259 15.4222 5.43032 15.3427C5.41805 15.2633 5.34482 15.2087 5.26477 15.219C5.24494 15.2217 5.17765 15.2257 5.09974 15.2305C3.94001 15.3013 2.59981 15.4592 2.52988 16.0567C2.50865 16.2388 2.56275 16.4041 2.69076 16.5479C3.00397 16.8999 3.90422 17.3678 8.0893 17.3678C8.08937 17.3678 8.08937 17.3678 8.08944 17.3678Z",
      fill: "#73A1FB"
    }), _jsx87("path", {
      d: "M15.6342 16.3037C15.5762 16.2768 15.5075 16.2904 15.4642 16.3372C15.4582 16.3437 14.8406 16.9895 12.9835 17.3688C12.2725 17.5113 10.9379 17.5835 9.0169 17.5835C7.09226 17.5835 5.26086 17.5078 5.24261 17.507C5.16611 17.5033 5.10068 17.5589 5.09028 17.6342C5.07984 17.7094 5.12835 17.7804 5.20222 17.798C5.22127 17.8025 7.14056 18.2521 9.76478 18.2521C11.0234 18.2521 12.2482 18.1499 13.4052 17.9482C15.5624 17.57 15.7134 16.5003 15.7188 16.455C15.7263 16.3916 15.6922 16.3306 15.6342 16.3037Z",
      fill: "#73A1FB"
    })]
  }), _jsx87("defs", {
    children: _jsx87("clipPath", {
      id: "clip0_6351_16166",
      children: _jsx87("rect", {
        width: "18",
        height: "18",
        fill: "white",
        transform: "translate(0.200195 0.25)"
      })
    })
  })]
});
var JavaIcon = styled_components_esm_default(Icon10).attrs(() => ({
  "data-component-name": "icons/JavaIcon"
})).withConfig({
  displayName: "JavaIcon",
  componentId: "sc-e5igzm-0"
})([""]);

// node_modules/@redocly/openapi-docs/lib-esm/icons/PayloadIcon/PayloadIcon.js
init_styled_components_esm();
import { jsx as _jsx88, jsxs as _jsxs64 } from "react/jsx-runtime";
var Icon11 = () => _jsxs64("svg", {
  width: "32",
  height: "32",
  viewBox: "0 0 32 32",
  fill: "none",
  xmlns: "http://www.w3.org/2000/svg",
  children: [_jsx88("circle", {
    cx: "16",
    cy: "16",
    r: "12",
    fill: "#1F7CFF"
  }), _jsx88("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M11.05 12.22C11.05 10.9939 12.0439 10 13.27 10C13.5682 10 13.81 10.2418 13.81 10.54C13.81 10.8382 13.5682 11.08 13.27 11.08C12.6404 11.08 12.13 11.5904 12.13 12.22V14.6409C12.13 15.15 11.9423 15.6306 11.6179 16C11.9423 16.3694 12.13 16.85 12.13 17.3591V19.78C12.13 20.4096 12.6404 20.92 13.27 20.92C13.5682 20.92 13.81 21.1618 13.81 21.46C13.81 21.7582 13.5682 22 13.27 22C12.0439 22 11.05 21.0061 11.05 19.78V17.3591C11.05 16.9909 10.8435 16.6539 10.5159 16.4867C10.3351 16.3996 10.21 16.2145 10.21 16C10.21 15.7855 10.3351 15.6004 10.5158 15.5133C10.8435 15.3461 11.05 15.0091 11.05 14.6409V12.22ZM18.73 10C19.9561 10 20.95 10.9939 20.95 12.22V14.6409C20.95 15.0091 21.1566 15.3461 21.4842 15.5133C21.6649 15.6004 21.79 15.7855 21.79 16C21.79 16.2145 21.6649 16.3996 21.4842 16.4867C21.1566 16.6539 20.95 16.9909 20.95 17.3591V19.78C20.95 21.0061 19.9561 22 18.73 22C18.4318 22 18.19 21.7582 18.19 21.46C18.19 21.1618 18.4318 20.92 18.73 20.92C19.3596 20.92 19.87 20.4096 19.87 19.78V17.3591C19.87 16.85 20.0577 16.3694 20.3821 16C20.0577 15.6306 19.87 15.15 19.87 14.6409V12.22C19.87 11.5904 19.3596 11.08 18.73 11.08C18.4318 11.08 18.19 10.8382 18.19 10.54C18.19 10.2418 18.4318 10 18.73 10Z",
    fill: "white"
  })]
});
var PayloadIcon = styled_components_esm_default(Icon11).attrs(() => ({
  "data-component-name": "icons/PayloadIcon"
})).withConfig({
  displayName: "PayloadIcon",
  componentId: "sc-185p2fi-0"
})([""]);

// node_modules/@redocly/openapi-docs/lib-esm/components/Language/styled.js
init_styled_components_esm();
init_src();

// node_modules/@redocly/openapi-docs/lib-esm/components/Language/constants.js
var ITEM_WIDTH = 78;
var DROPDOWN_TRIGGER_WIDTH = 32;

// node_modules/@redocly/openapi-docs/lib-esm/components/Language/styled.js
var Container4 = styled_components_esm_default.span.withConfig({
  displayName: "styled__Container",
  componentId: "sc-cqsxtk-0"
})(["display:flex;justify-content:space-between;align-items:center;"]);
var LanguageTitle = styled_components_esm_default.span.withConfig({
  displayName: "styled__LanguageTitle",
  componentId: "sc-cqsxtk-1"
})(["max-width:150px;text-overflow:ellipsis;overflow:hidden;white-space:nowrap;padding:0 var(--spacing-xxs);font-size:var(--font-size-base);line-height:var(--line-height-base);font-weight:", ";"], ({
  active: t
}) => t ? "var(--font-weight-medium)" : "var(--font-weight-regular)");
var LanguageTitleContainer = styled_components_esm_default.span.withConfig({
  displayName: "styled__LanguageTitleContainer",
  componentId: "sc-cqsxtk-2"
})(["width:100%;display:inherit;gap:inherit;flex-direction:inherit;justify-content:inherit;align-items:inherit;"]);
var LanguageIcon = styled_components_esm_default.span.withConfig({
  displayName: "styled__LanguageIcon",
  componentId: "sc-cqsxtk-3"
})(["width:24px;height:24px;display:flex;align-items:center;justify-content:center;flex-shrink:0;overflow:hidden;"]);
var LanguageListContainer = styled_components_esm_default.div.withConfig({
  displayName: "styled__LanguageListContainer",
  componentId: "sc-cqsxtk-4"
})(["display:flex;justify-content:", ";align-items:center;width:100%;"], ({
  $justifyContent: t = "start"
}) => t);
var LanguageListItem = styled_components_esm_default.button.withConfig({
  displayName: "styled__LanguageListItem",
  componentId: "sc-cqsxtk-5"
})(["background:none;border:none;width:", "px;flex-shrink:0;display:flex;align-items:center;cursor:pointer;flex-direction:column;gap:calc(var(--spacing-unit) * 0.5);padding:var(--spacing-xs) 0;color:", ";border-radius:var(--border-radius);text-align:center;position:relative;:hover{color:var(--text-color-primary);}", ""], ITEM_WIDTH, ({
  active: t
}) => t ? "var(--text-color-primary)" : "var(--text-color-description)", ({
  active: t
}) => t && Ne(["&::before{position:absolute;top:-21px;border-top:3px solid var(--text-color-primary);width:100%;content:'';border-bottom-left-radius:calc(var(--border-radius) / 2);border-bottom-right-radius:calc(var(--border-radius) / 2);}"]));
var StyledDropdownMenuItem3 = styled_components_esm_default(DropdownMenuItem).withConfig({
  displayName: "styled__StyledDropdownMenuItem",
  componentId: "sc-cqsxtk-6"
})(["display:flex;justify-content:space-between;align-items:center;gap:var(--spacing-xs);padding:calc(var(--spacing-unit) * 1.5) var(--spacing-xs) calc(var(--spacing-unit) * 1.5) var(--spacing-sm);width:", "px;fill:var(--menu-content-color-active);"], ({
  $width: t = 204
}) => t);
var DropdownTriggerButton = styled_components_esm_default(Button).withConfig({
  displayName: "styled__DropdownTriggerButton",
  componentId: "sc-cqsxtk-7"
})(["display:inline-flex;line-height:var(--line-height-base);font-size:var(--font-size-base);font-weight:var(--font-weight-medium);cursor:pointer;"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/Language/LanguageItem.js
var iconMap = { Payload: _jsx89(PayloadIcon, {}), curl: _jsx89(CurlIcon, {}), "C#": _jsx89(CSharpIcon, {}), "C#+Newtonsoft": _jsx89(CSharpIcon, {}), "Node.js": _jsx89(NodeJSIcon, {}), JavaScript: _jsx89(JavaScriptIcon, {}), Python: _jsx89(PythonIcon, {}), R: _jsx89(RIcon, {}), Ruby: _jsx89(RubyIcon, {}), PHP: _jsx89(PHPIcon, {}), Go: _jsx89(GOIcon, {}), Java: _jsx89(JavaIcon, {}), "Java8+Apache": _jsx89(JavaIcon, {}) };
var LanguageItem = ({ item: o, active: n2, withCheckmark: c, withIcon: a }) => _jsxs65(_Fragment28, { children: [_jsxs65(LanguageTitleContainer, { children: [a && _jsx89(LanguageIcon, { children: iconMap[o.lang] }), _jsx89(LanguageTitle, { active: n2, title: o.title, children: o.title })] }), c && n2 && _jsx89(CheckmarkIcon, {})] });

// node_modules/@redocly/openapi-docs/lib-esm/components/Language/LanguageDropdown.js
var LanguageDropdown = ({ samples: e2, activeTab: o, onChange: t, trigger: r, width: n2, withArrow: i2 = true, withCheckmark: a = true, withIcon: m = true }) => {
  const d = useCallback18((o2) => () => {
    const r2 = e2.find(({ key: e3 }) => e3 === o2.key);
    r2 && t(r2.key);
  }, [t, e2]), g = useMemo16(() => e2.map((e3) => _jsx90(StyledDropdownMenuItem3, { $width: n2, onAction: d(e3), children: _jsx90(LanguageItem, { item: e3, active: o === e3.key, withCheckmark: a, withIcon: m }) }, e3.key)), [o, d, e2, n2, a, m]), s = e2.find(({ key: e3 }) => e3 === o), c = r || _jsx90(DropdownTriggerButton, { variant: "ghost", children: null == s ? void 0 : s.title });
  return g.length > 1 ? _jsx90(Dropdown, { trigger: c, withArrow: i2, alignment: "end", children: _jsx90(DropdownMenu, { children: g }) }) : c;
};

// node_modules/@redocly/openapi-docs/lib-esm/components/Language/LanguageList.js
import { jsx as _jsx92, jsxs as _jsxs67 } from "react/jsx-runtime";
import { useLayoutEffect as useLayoutEffect3, useRef as useRef8, useState as useState16, useCallback as useCallback19, memo as memo47, useMemo as useMemo17 } from "react";
init_src();

// node_modules/@redocly/openapi-docs/lib-esm/components/common/Skeleton/LanguageListSkeleton.js
init_styled_components_esm();
import { jsx as _jsx91, jsxs as _jsxs66 } from "react/jsx-runtime";
import { memo as memo46 } from "react";
var Container5 = styled_components_esm_default.div.withConfig({
  displayName: "LanguageListSkeleton__Container",
  componentId: "sc-tm4xfs-0"
})(["width:100%;display:flex;justify-content:space-between;gap:var(--spacing-xs);padding:var(--spacing-xs) 0;"]);
var Item3 = styled_components_esm_default.div.withConfig({
  displayName: "LanguageListSkeleton__Item",
  componentId: "sc-tm4xfs-1"
})(["display:flex;flex-direction:column;width:100%;justify-content:center;align-items:center;gap:var(--spacing-sm);"]);
var SkeletonBox2 = styled_components_esm_default.div.withConfig({
  displayName: "LanguageListSkeleton__SkeletonBox",
  componentId: "sc-tm4xfs-2"
})(["display:inline-block;height:", ";position:relative;overflow:hidden;background-color:var(--layer-color-hover);border-radius:var(--border-radius);width:", ";"], ({
  type: e2
}) => "icon" === e2 ? "var(--control-height-sm)" : "calc(var(--control-height-sm) * 0.5)", ({
  type: e2
}) => "icon" === e2 ? "var(--control-height-sm)" : "64px");
function LanguageListSkeletonComponent() {
  return _jsxs66(Container5, {
    children: [_jsxs66(Item3, {
      children: [_jsx91(SkeletonBox2, {
        type: "icon"
      }), _jsx91(SkeletonBox2, {
        type: "label"
      })]
    }), _jsxs66(Item3, {
      children: [_jsx91(SkeletonBox2, {
        type: "icon"
      }), _jsx91(SkeletonBox2, {
        type: "label"
      })]
    }), _jsxs66(Item3, {
      children: [_jsx91(SkeletonBox2, {
        type: "icon"
      }), _jsx91(SkeletonBox2, {
        type: "label"
      })]
    }), _jsxs66(Item3, {
      children: [_jsx91(SkeletonBox2, {
        type: "icon"
      }), _jsx91(SkeletonBox2, {
        type: "label"
      })]
    })]
  });
}
var LanguageListSkeleton = memo46(LanguageListSkeletonComponent);

// node_modules/@redocly/openapi-docs/lib-esm/components/Language/LanguageList.js
function LanguageListComponent({ languages: e2, activeLanguage: t }) {
  const [n2, o] = useState16([]), [a, s] = useState16([]), i2 = useRef8(null), r = useAtomValue(layoutAtom), u = useSetAtom(languageAtom), m = useCallback19(() => {
    var n3;
    const a2 = null === (n3 = null == i2 ? void 0 : i2.current) || void 0 === n3 ? void 0 : n3.offsetWidth;
    if (!a2)
      return;
    const { newVisibleItems: r2, newHiddenItems: u2 } = calculateVisibleAndHiddenItems(a2, [...e2]), m2 = u2.findIndex((e3) => e3.key === t);
    -1 !== m2 && swapItems(r2, u2, m2), o(r2), s(u2);
  }, [t, e2]);
  useLayoutEffect3(() => (m(), window.addEventListener("resize", m), () => {
    window.removeEventListener("resize", m);
  }), [r, t]);
  const g = useMemo17(() => n2.length >= 5 || a.length ? "space-between" : "start", [a.length, n2.length]);
  return _jsxs67(Container4, { ref: i2, children: [_jsxs67(LanguageListContainer, { $justifyContent: g, children: [!n2.length && _jsx92(LanguageListSkeleton, {}), n2.map((e3) => _jsx92(LanguageListItem, { onClick: () => u(e3.key), active: t === e3.key, children: _jsx92(LanguageItem, { item: e3, withIcon: true }) }, e3.key))] }), a.length ? _jsx92(LanguageDropdown, { activeTab: t, samples: a, onChange: (e3) => {
    const t2 = a.findIndex((t3) => t3.key === e3);
    if (-1 !== t2) {
      const i3 = [...a], r2 = [...n2];
      swapItems(r2, i3, t2), o(r2), s(i3), u(e3);
    }
  }, trigger: _jsx92(Button, { icon: _jsx92(OverflowMenuVerticalIcon, {}), variant: "text", style: { height: "100%" } }), withArrow: false, withCheckmark: false, width: 156 }) : null] });
}
var LanguageList = memo47(LanguageListComponent);
function calculateVisibleAndHiddenItems(e2, t) {
  let n2 = 0;
  const o = [], a = [];
  return t.forEach((s, i2) => {
    const r = i2 === t.length - 1 && 0 === a.length ? 0 : DROPDOWN_TRIGGER_WIDTH;
    e2 && n2 + ITEM_WIDTH + r <= e2 ? (o.push(s), n2 += ITEM_WIDTH) : a.push(s);
  }), { newVisibleItems: o, newHiddenItems: a };
}
function swapItems(e2, t, n2) {
  const o = e2[e2.length - 1];
  o && (e2[e2.length - 1] = t[n2], t[n2] = o);
}

// node_modules/@redocly/openapi-docs/lib-esm/components/Replay/Replay.js
init_src();
init_styled_components_esm();
import { jsx as _jsx93, jsxs as _jsxs68 } from "react/jsx-runtime";
import { memo as memo48, Suspense, useCallback as useCallback20, useRef as useRef9, useState as useState17, lazy } from "react";

// node_modules/@redocly/openapi-docs/lib-esm/jotai/replay.js
var replayStateAtom = atom(LOADING_STATE.NOT_LOADED);

// node_modules/@redocly/openapi-docs/lib-esm/components/Replay/utils.js
init_src();
var __rest11 = function(e2, n2) {
  var t = {};
  for (var a in e2)
    Object.prototype.hasOwnProperty.call(e2, a) && n2.indexOf(a) < 0 && (t[a] = e2[a]);
  if (null != e2 && "function" == typeof Object.getOwnPropertySymbols) {
    var i2 = 0;
    for (a = Object.getOwnPropertySymbols(e2); i2 < a.length; i2++)
      n2.indexOf(a[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(e2, a[i2]) && (t[a[i2]] = e2[a[i2]]);
  }
  return t;
};
function convertOperationToReplayValue(e2, n2, t, a) {
  var i2, r;
  const o = (null == a ? void 0 : a.activeMimeName) || "application/json";
  return { name: e2.name, method: e2.httpVerb, parameters: convertParameters(e2.parameters, null == t ? void 0 : t.requestValues), body: convertRequestBody(e2.requestBody, n2, (null === (i2 = null == t ? void 0 : t.requestValues) || void 0 === i2 ? void 0 : i2.body) ? { activeExampleName: null == t ? void 0 : t.activeExampleName, [o]: null === (r = null == t ? void 0 : t.requestValues) || void 0 === r ? void 0 : r.body } : { activeExampleName: null == t ? void 0 : t.activeExampleName }), path: e2.path, servers: e2.servers, security: convertRequestSecurity(e2.security) };
}
function convertParameters(e2, n2) {
  const t = /* @__PURE__ */ new Set(), a = e2.map((e3) => {
    var a2;
    return t.add(e3.in + ":" + e3.name), { name: e3.name, in: e3.in, required: e3.required, description: e3.description, example: (null === (a2 = null == n2 ? void 0 : n2[String(e3.in)]) || void 0 === a2 ? void 0 : a2[e3.name]) || e3.example, schema: e3.schema };
  });
  for (const [e3, i2] of Object.entries(n2 || {}))
    for (const [n3, r] of Object.entries(i2 || {}))
      t.has(e3 + ":" + n3) || a.push({ name: n3, in: e3, required: false, description: "", example: String(r), schema: void 0 });
  return a;
}
function getInputType({ type: e2, format: n2, enum: t }) {
  return "string" !== e2 || "binary" !== n2 && "base64" !== n2 ? "object" === e2 ? "multiline" : t.length > 0 ? "select" : "text" : "file";
}
function getFieldExamples(e2, n2) {
  var t, a, i2, r, o;
  const l = (null === (t = e2[0]) || void 0 === t ? void 0 : t.example) || (null === (a = e2[0]) || void 0 === a ? void 0 : a.examples);
  if (l)
    return l;
  if (null === (i2 = e2.schema) || void 0 === i2 ? void 0 : i2.example)
    return e2.schema.example;
  const m = (null === (r = null == n2 ? void 0 : n2.default) || void 0 === r ? void 0 : r.value) || (null === (o = null == n2 ? void 0 : n2.default) || void 0 === o ? void 0 : o.rawValue);
  return (null == m ? void 0 : m[e2.name]) ? isPrimitive(null == m ? void 0 : m[e2.name]) ? String(null == m ? void 0 : m[e2.name]) : JSON.stringify(null == m ? void 0 : m[e2.name]) : "";
}
function convertRequestBody(e2, n2, t) {
  var a;
  if (!e2 || !(null === (a = e2.content) || void 0 === a ? void 0 : a.mediaTypes)) {
    if (!t)
      return;
    const { activeExampleName: e3 } = t, n3 = __rest11(t, ["activeExampleName"]);
    return { activeExampleName: e3, mediaTypes: Object.fromEntries(Object.entries(n3).map(([e4, n4]) => [e4, { name: e4, examples: { default: { value: n4 } }, schema: {}, parameters: [] }])) };
  }
  return { required: e2.required, activeExampleName: null == t ? void 0 : t.activeExampleName, mediaTypes: e2.content.mediaTypes.reduce((e3, a2) => {
    var i2, r;
    const o = a2.schema, l = (null == t ? void 0 : t[a2.name]) ? { default: { value: null == t ? void 0 : t[a2.name], rawValue: null == t ? void 0 : t[a2.name], mime: a2.name } } : a2.examples || a2.formExamples;
    return e3[a2.name] = { name: a2.name, examples: l, schema: getBodySchema(null === (i2 = a2.schema) || void 0 === i2 ? void 0 : i2.rawSchema, n2), parameters: null === (r = null == o ? void 0 : o.fields) || void 0 === r ? void 0 : r.map((e4) => ({ inputType: getInputType(e4.schema), name: e4.name, example: getFieldExamples(e4, l) })) }, e3;
  }, {}) };
}
function getBodySchema(e2, n2) {
  if (e2 && n2)
    return Object.assign(Object.assign({}, e2), { components: (null == n2 ? void 0 : n2.components) || {} });
}
function convertRequestSecurity(e2) {
  if (e2)
    return e2.map(({ schemes: e3 }) => e3.map((e4) => ({ id: e4.id, type: e4.type, in: e4.in, openIdConnectUrl: e4.openIdConnectUrl, scopes: e4.scopes, scheme: e4.scheme, name: e4.name, flows: e4.flows })));
}

// node_modules/@redocly/openapi-docs/lib-esm/components/Replay/Replay.js
var __awaiter = function(e2, o, t, a) {
  return new (t || (t = Promise))(function(r, n2) {
    function i2(e3) {
      try {
        l(a.next(e3));
      } catch (e4) {
        n2(e4);
      }
    }
    function s(e3) {
      try {
        l(a.throw(e3));
      } catch (e4) {
        n2(e4);
      }
    }
    function l(e3) {
      var o2;
      e3.done ? r(e3.value) : (o2 = e3.value, o2 instanceof t ? o2 : new t(function(e4) {
        e4(o2);
      })).then(i2, s);
    }
    l((a = a.apply(e2, o || [])).next());
  });
};
var ReplayOverlay = lazy(() => __awaiter(void 0, void 0, void 0, function* () {
  return import("./replay-OUVJFQ73.js").then((e2) => ({
    default: e2.ReplayOverlay
  }));
}));
function ReplayComponent({
  operation: e2,
  corsProxyUrl: o,
  fullOpenApi: t
}) {
  var a, r;
  const n2 = useTranslate(), i2 = useRef9(null), {
    routingBasePath: s,
    mockServer: l,
    oAuth2RedirectURI: m
  } = useAtomValue(globalOptionsAtom), {
    parser: c
  } = useAtomValue(globalStoreAtom), [p, u] = useState17(false), [d, v] = useAtom(replayStateAtom), [A, f] = useAtom(operationStore(e2.pointer)), [y, S] = useAtom(activeMimeNameAtom), [[, O], _] = useAtom(environmentAtom);
  useFocusTrap(i2), useModalScrollLock(p);
  const h = useCallback20(({
    requestValues: e3,
    activeExampleName: o2,
    activeMimeName: t2,
    environment: a2,
    environments: r2,
    activeSecuritySchemeIds: n3
  }) => {
    f((t3) => Object.assign(Object.assign({}, t3), {
      requestValues: e3,
      activeExampleName: o2,
      activeSecuritySchemeIds: n3
    })), S(t2 || y), _({
      environment: a2,
      environments: r2
    });
  }, [f, S, y, _]), x = () => {
    d !== LOADING_STATE.LOADING && u(!p), d === LOADING_STATE.NOT_LOADED && v(LOADING_STATE.LOADING);
  };
  return _jsxs68(Wrapper17, {
    children: [_jsx93(Button, {
      onClick: x,
      variant: "primary",
      iconPosition: "left",
      icon: d === LOADING_STATE.LOADING ? _jsx93(CircleDashIcon, {}) : _jsx93(RocketIcon, {}),
      children: d === LOADING_STATE.LOADING ? n2("openapi.loading", "Loading...") : n2("openapi.tryIt", "Try it")
    }), p && _jsx93(Suspense, {
      children: _jsx93(Portal, {
        mountId: "api-content",
        children: _jsx93("div", {
          ref: i2,
          children: _jsx93(ReplayOverlay, {
            value: convertOperationToReplayValue(e2, t, A),
            onRequestChange: h,
            onClose: x,
            corsProxyUrl: o,
            operationUrl: s + e2.href,
            onLoad: () => v(LOADING_STATE.LOADED),
            mockServer: l,
            environment: O,
            apiId: null === (r = null === (a = null == c ? void 0 : c.definition.info) || void 0 === a ? void 0 : a["x-metadata"]) || void 0 === r ? void 0 : r.apiId,
            oAuth2RedirectURI: m,
            definitionUrl: null == c ? void 0 : c.definitionUrl,
            disableCollectionsTab: true
          })
        })
      })
    })]
  });
}
var Replay = memo48(ReplayComponent);
var Wrapper17 = styled_components_esm_default.div.withConfig({
  displayName: "Replay__Wrapper",
  componentId: "sc-1eebrqo-0"
})(["display:flex;justify-content:flex-end;border-top:var(--panel-border);padding:var(--spacing-base) var(--spacing-md) var(--spacing-md);"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/Replay/EmbeddedReplay.js
init_styled_components_esm();
import { jsx as _jsx94 } from "react/jsx-runtime";
import { Suspense as Suspense2, memo as memo49, useEffect as useEffect11, useState as useState18, lazy as lazy2 } from "react";
var __awaiter2 = function(e2, o, r, t) {
  return new (r || (r = Promise))(function(n2, a) {
    function i2(e3) {
      try {
        l(t.next(e3));
      } catch (e4) {
        a(e4);
      }
    }
    function p(e3) {
      try {
        l(t.throw(e3));
      } catch (e4) {
        a(e4);
      }
    }
    function l(e3) {
      var o2;
      e3.done ? n2(e3.value) : (o2 = e3.value, o2 instanceof r ? o2 : new r(function(e4) {
        e4(o2);
      })).then(i2, p);
    }
    l((t = t.apply(e2, o || [])).next());
  });
};
var EmbeddedReplayOrig = lazy2(() => __awaiter2(void 0, void 0, void 0, function* () {
  return import("./replay-OUVJFQ73.js").then((e2) => ({
    default: e2.EmbeddedReplay
  }));
}));
function EmbeddedReplayComponent({
  operation: e2,
  corsProxyUrl: o,
  fullOpenApi: r
}) {
  const t = useTranslate(), {
    routingBasePath: n2,
    mockServer: a
  } = useAtomValue(globalOptionsAtom), i2 = useAtomValue(operationStore(e2.pointer)), p = useAtomValue(appStore), l = useAtomValue(environmentsAtom), [s, d] = useState18(false);
  return useEffect11(() => {
    d(true);
  }, []), _jsx94(CompactWrapper, {
    children: s ? _jsx94(Suspense2, {
      fallback: _jsx94(LoadingWrapper, {
        children: t("openapi.loading", "Loading...")
      }),
      children: _jsx94(EmbeddedReplayOrig, {
        value: convertOperationToReplayValue(e2, r, i2, p),
        environment: p.environment,
        predefinedEnvValues: l,
        corsProxyUrl: o,
        operationUrl: n2 + e2.href,
        mockServer: a,
        disableCollectionsTab: true
      })
    }) : _jsx94(LoadingWrapper, {
      children: t("openapi.loading", "Loading...")
    })
  });
}
var EmbeddedReplay = memo49(EmbeddedReplayComponent);
var LoadingWrapper = styled_components_esm_default.div.withConfig({
  displayName: "EmbeddedReplay__LoadingWrapper",
  componentId: "sc-6p2v3f-0"
})(["display:flex;justify-content:center;align-items:center;min-height:100px;"]);
var CompactWrapper = styled_components_esm_default.div.withConfig({
  displayName: "EmbeddedReplay__CompactWrapper",
  componentId: "sc-6p2v3f-1"
})(["border:1px solid var(--border-color-primary);border-radius:var(--border-radius-lg);padding:0;"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/RequestSamples/RequestSamples.js
var __rest12 = function(e2, o) {
  var a = {};
  for (var t in e2)
    Object.prototype.hasOwnProperty.call(e2, t) && o.indexOf(t) < 0 && (a[t] = e2[t]);
  if (null != e2 && "function" == typeof Object.getOwnPropertySymbols) {
    var r = 0;
    for (t = Object.getOwnPropertySymbols(e2); r < t.length; r++)
      o.indexOf(t[r]) < 0 && Object.prototype.propertyIsEnumerable.call(e2, t[r]) && (a[t[r]] = e2[t[r]]);
  }
  return a;
};
function RequestSamplesComponent(e2) {
  var {
    operation: o,
    disableFooter: a
  } = e2, t = __rest12(e2, ["operation", "disableFooter"]);
  const [{
    activeLanguage: r
  }, l] = useAtom(languageAtom), {
    samples: s
  } = useCodeSamples(o), {
    parser: n2,
    options: {
      events: p,
      corsProxyUrl: m,
      hideReplay: i2
    }
  } = useAtomValue(globalStoreAtom), d = useActiveWithFallback(s, r), c = useCallback21(({
    lang: e3,
    title: a2
  }) => () => {
    var t2;
    const r2 = createCodeSampleCopyEvent({
      operation: o,
      label: a2,
      lang: e3,
      type: "request"
    });
    null === (t2 = null == p ? void 0 : p.codeSamplesCopy) || void 0 === t2 || t2.call(p, r2);
  }, [o, p]), u = useMemo18(() => {
    if (!(a || o.isWebhook || i2 || o.hideReplay))
      return _jsx95(Replay, {
        operation: o,
        corsProxyUrl: m,
        fullOpenApi: n2.definition
      });
  }, [m, a, i2, o, n2.definition]), y = useMemo18(() => s.map((e3) => e3.key === d ? _jsx95("div", {
    children: isPayloadSample(e3) ? _jsx95(PayloadSamples, Object.assign({
      content: e3.requestBodyContent,
      onCopyClick: c(e3)
    }, t)) : _jsx95(CodeSample, Object.assign({
      lang: e3.lang,
      source: e3.source,
      externalSample: e3,
      operation: o,
      onCopyClick: c(e3)
    }, t))
  }, e3.key + o.id) : null), [d, c, o, t, s]);
  return s.length ? _jsx95(CodeBlockPanel, {
    className: "panel-request-samples",
    header: () => _jsxs69(StyledPanelHeader2, {
      isExpandable: false,
      children: [_jsx95(StyledServerListDropdown2, {
        operation: o
      }), _jsx95(LanguageDropdown, {
        activeTab: d,
        samples: s,
        onChange: l
      })]
    }),
    footer: u,
    isExpandable: false,
    children: y
  }) : null;
}
var RequestSamples = memo50(RequestSamplesComponent);
var StyledPanelHeader2 = styled_components_esm_default(PanelHeader).withConfig({
  displayName: "RequestSamples__StyledPanelHeader",
  componentId: "sc-y6wg0f-0"
})(["flex-wrap:nowrap;"]);
var StyledServerListDropdown2 = styled_components_esm_default(ServerListDropdown).withConfig({
  displayName: "RequestSamples__StyledServerListDropdown",
  componentId: "sc-y6wg0f-1"
})(["padding-right:var(--spacing-base);min-width:0;"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/ResponseSamples/ResponseSamples.js
import { jsx as _jsx97 } from "react/jsx-runtime";
import { memo as memo51, useCallback as useCallback22 } from "react";

// node_modules/@redocly/openapi-docs/lib-esm/components/ResponseSamples/Summary.js
init_src();
import { jsx as _jsx96, jsxs as _jsxs70 } from "react/jsx-runtime";
var Summary = ({ tabs: e2 }) => {
  const s = useTranslate();
  return _jsxs70(PanelHeader, { isExpandable: false, children: [_jsx96(PanelHeaderTitle, { "data-testid": "title", children: s("openapi.response", "Response") }), e2] });
};

// node_modules/@redocly/openapi-docs/lib-esm/components/ResponseSamples/ResponseSamples.js
function ResponseSamplesComponent({ operation: e2, activeResponseTab: o, onTabChange: a }) {
  const { events: n2 } = useAtomValue(globalOptionsAtom), l = e2.responses.filter((e3) => {
    var o2, a2;
    return null !== (a2 = null === (o2 = e3.content) || void 0 === o2 ? void 0 : o2.hasSample) && void 0 !== a2 && a2;
  }), s = l.map(({ code: e3 }) => ({ key: e3, title: e3 })), t = (null == s ? void 0 : s.find(({ key: e3 }) => e3 === o)) || (null == s ? void 0 : s[0]), m = useCallback22(() => {
    var o2;
    const a2 = createCodeSampleCopyEvent({ operation: e2, type: "response" });
    null === (o2 = null == n2 ? void 0 : n2.codeSamplesCopy) || void 0 === o2 || o2.call(n2, a2);
  }, [e2, n2]);
  if (!l.length)
    return null;
  return _jsx97(CodeBlockPanel, { className: "panel-response-samples", header: () => _jsx97(Summary, { tabs: _jsx97(Tabs, { tabs: s, activeTab: t, onChange: (e3) => a(e3.key) }) }), isExpandable: false, children: l.map((e3) => e3.code === t.key ? _jsx97("div", { children: _jsx97(PayloadSamples, { content: e3.content, onCopyClick: m }) }, e3.code) : null) });
}
var ResponseSamples = memo51(ResponseSamplesComponent);

// node_modules/@redocly/openapi-docs/lib-esm/components/OperationItem/OperationItem.js
function OperationItemComponent({
  item: {
    operationDefinition: e2,
    parent: a,
    href: o
  }
}) {
  var t, s;
  const i2 = useLocation11(), l = useMemo19(() => !IS_BROWSER || "undefined" != typeof window || pathIncludesLink(i2, e2.operationId), [i2, e2.operationId]), {
    isVisible: n2,
    targetRef: r
  } = useIsContentVisible({
    defaultVisible: l
  }), p = useTranslate(), {
    parser: d,
    options: m
  } = useAtomValue(globalStoreAtom), c = useAtomValue(layoutAtom), [u, k] = useState19(), {
    unstable_hooks: S,
    feedback: b
  } = m, h = useMemo19(() => getOperation(d, e2, a, m, o, void 0, n2), [o, n2, e2, m, a, d]), {
    name: x,
    deprecated: f,
    isWebhook: j,
    badges: g
  } = h || {}, _ = c === LayoutVariant.STACKED, R = (null == b ? void 0 : b.type) || "sentiment", O = true !== (null == b ? void 0 : b.hide), [y, v] = useState19(null), C = useCallback23((e3) => {
    u !== e3 && k(e3);
  }, [u]), w = useMemo19(() => O ? _jsx98(FeedbackWrapper, {
    children: _jsx98(Feedback, {
      type: R,
      settings: b.settings,
      path: joinWithSeparator(m.routingBasePath, h.href)
    })
  }) : null, [O, R, b.settings, m.routingBasePath, h.href]);
  return _jsxs71(OperationRow, {
    layout: c,
    ref: r,
    children: [_jsx98(OperationSubRowStyled, {
      layout: c,
      children: _jsxs71(SamplesMiddlePanel, {
        isStacked: _,
        children: [_jsx98(RenderHook, {
          Hook: BeforeOpenApiOperation || (null == S ? void 0 : S.BeforeOperation),
          props: {
            operation: h
          }
        }), _jsxs71(Heading3, {
          "data-testid": "operation-item-header",
          children: [_jsx98(ShareLink, {
            to: o,
            "aria-label": `link to ${x}`
          }), _jsx98(CustomBadges, {
            badges: g,
            children: x
          }), f && _jsx98(StyledBadge, {
            deprecated: true,
            children: p("openapi.badges.deprecated", "Deprecated")
          }), j && _jsx98(StyledBadge, {
            children: p("openapi.badges.webhook", "Webhook")
          })]
        })]
      })
    }), _jsxs71(OperationSubRowStyled, {
      layout: c,
      children: [_jsx98(SamplesMiddlePanel, {
        isStacked: _,
        children: _jsx98(RequestDetails, {
          operation: h,
          translate: p
        })
      }), n2 && _jsx98(OperationSamplesPanel, {
        isStacked: _,
        "data-testid": "samples-block",
        className: "panel-container-request-samples",
        children: _jsx98(RequestSamples, {
          operation: h
        })
      })]
    }), _jsxs71(OperationSubRowStyled, {
      layout: c,
      children: [_jsx98(SamplesMiddlePanel, {
        isStacked: _,
        children: (null === (t = h.responses) || void 0 === t ? void 0 : t.length) ? _jsx98(OperationResponseList, {
          responses: h.responses,
          operationId: h.id,
          operationPointer: h.pointer,
          callbackId: h.callbackId,
          activeResponseTab: u,
          onTabChange: C
        }) : null
      }), n2 && _jsx98(OperationSamplesPanel, {
        isStacked: _,
        "data-testid": "samples-block",
        className: "panel-container-response-samples",
        children: _jsx98(ResponseSamples, {
          operation: h,
          activeResponseTab: u,
          onTabChange: C
        })
      })]
    }), _jsxs71(OperationSubRowStyled, {
      layout: c,
      children: [_jsxs71(SamplesMiddlePanel, {
        isStacked: _,
        children: [(null === (s = h.callbacks) || void 0 === s ? void 0 : s.length) ? _jsxs71(_Fragment29, {
          children: [_jsxs71(Title2, {
            children: [_jsx98(LinkToField, {
              to: makeDeepLink(h.id, "callbacks")
            }), p("openapi.callbacks", "Callbacks")]
          }), _jsx98(CallbacksList, {
            callbacks: h.callbacks,
            onExpand: v,
            selectedCallback: y
          })]
        }) : null, _jsx98(RenderHook, {
          Hook: AfterOpenApiOperation || (null == S ? void 0 : S.AfterOperation),
          props: {
            operation: h
          }
        })]
      }), y ? _jsx98(OperationSamplesPanel, {
        isStacked: _,
        "data-testid": "samples-block",
        children: _jsx98(CallbackSamples, {
          callback: y,
          translate: p
        })
      }) : null]
    }), _jsx98(OperationSubRowStyled, {
      layout: c,
      children: _jsx98(SamplesMiddlePanel, {
        isStacked: _,
        fullWidth: true,
        children: w
      })
    })]
  });
}
var OperationItem = memo52(OperationItemComponent);
var OperationSamplesPanel = styled_components_esm_default(SamplesPanel).withConfig({
  displayName: "OperationItem__OperationSamplesPanel",
  componentId: "sc-1w8m8ja-0"
})(["margin-left:auto;--code-block-padding:var(--spacing-xs) 0 var(--spacing-xs) 20px;"]);
var FeedbackWrapper = styled_components_esm_default.div.withConfig({
  displayName: "OperationItem__FeedbackWrapper",
  componentId: "sc-1w8m8ja-1"
})(["& > div{flex:1 1 auto;display:flex;justify-content:center;}& > div > div{width:100%;max-width:var(--feedback-width);}"]);
var OperationRow = styled_components_esm_default(Row).withConfig({
  displayName: "OperationItem__OperationRow",
  componentId: "sc-1w8m8ja-2"
})(["flex-direction:column;align-items:flex-start;padding:var(--spacing-base) 0 calc(var(--spacing-xl) + var(--spacing-xs));"]);
var OperationSubRowStyled = styled_components_esm_default(Row).withConfig({
  displayName: "OperationItem__OperationSubRowStyled",
  componentId: "sc-1w8m8ja-3"
})(["margin:calc(var(--spacing-unit) * 2) 0;"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/ApiInfo/ApiInfo.js
import { jsxs as _jsxs77, jsx as _jsx104 } from "react/jsx-runtime";
init_src();
init_styled_components_esm();

// node_modules/@redocly/openapi-docs/lib-esm/components/ApiInfo/styled.js
init_styled_components_esm();
init_src();
var ApiHeader = styled_components_esm_default(H1).withConfig({
  displayName: "styled__ApiHeader",
  componentId: "sc-1lx7c4f-0"
})(["margin-top:0;margin-bottom:0;& + ", "{margin-top:var(--h1-margin-bottom);}"], Markdown);
var InfoSpan = styled_components_esm_default.span.withConfig({
  displayName: "styled__InfoSpan",
  componentId: "sc-1lx7c4f-1"
})(["&::before{content:'|';display:inline-block;opacity:0.5;width:", "px;text-align:center;}&:last-child::after{display:none;}"], 15);
var InfoSpanBoxWrap = styled_components_esm_default.div.withConfig({
  displayName: "styled__InfoSpanBoxWrap",
  componentId: "sc-1lx7c4f-2"
})(["overflow:hidden;"]);
var InfoSpanBox = styled_components_esm_default.div.withConfig({
  displayName: "styled__InfoSpanBox",
  componentId: "sc-1lx7c4f-3"
})(["display:flex;flex-wrap:wrap;margin-left:-", "px;"], 15);

// node_modules/@redocly/openapi-docs/lib-esm/components/ApiInfo/Metadata.js
init_src();
import { jsx as _jsx99, jsxs as _jsxs72 } from "react/jsx-runtime";
import { useMemo as useMemo20 } from "react";
var FILTER_OUT_KEYS = ["title", "description"];
function metadataMap([e2, t]) {
  return FILTER_OUT_KEYS.includes(e2) ? null : Array.isArray(t) ? { key: e2, value: t.filter((e3) => "object" != typeof e3).join(", ") } : "object" == typeof t ? null : { key: e2, value: t };
}
function Metadata({ metadata: e2, translate: t }) {
  const a = useMemo20(() => Object.entries(e2 || {}).map(metadataMap).filter(isNotNull), [e2]);
  return e2 ? _jsxs72(Markdown, { children: [_jsx99(H3, { children: t("openapi.info.metadata.title", "Metadata") }), _jsxs72("table", { className: "md", children: [_jsx99("thead", { children: _jsxs72("tr", { children: [_jsx99("th", { scope: "col", children: t("openapi.key", "Key") }), _jsx99("th", { scope: "col", children: t("openapi.value", "Value") })] }) }), _jsx99("tbody", { children: a.map(({ key: e3, value: t2 }) => _jsxs72("tr", { children: [_jsx99("td", { children: e3 }), _jsx99("td", { children: `${t2}` })] }, e3)) })] })] }) : null;
}

// node_modules/@redocly/openapi-docs/lib-esm/components/RightPanel/RightPanel.js
init_src();
import { jsx as _jsx103, Fragment as _Fragment32, jsxs as _jsxs76 } from "react/jsx-runtime";

// node_modules/@redocly/openapi-docs/lib-esm/components/Download/DownloadSpecification.js
import { jsx as _jsx100, Fragment as _Fragment30, jsxs as _jsxs73 } from "react/jsx-runtime";
import { memo as memo53, useCallback as useCallback24 } from "react";
init_styled_components_esm();
init_src();

// node_modules/@redocly/openapi-docs/lib-esm/components/Download/useDownloadInfo.js
import { useMemo as useMemo21 } from "react";
var useDownloadInfo = ({ downloadUrls: e2 }) => useMemo21(() => {
  if (e2)
    return e2.map(({ title: e3, url: o }) => ({ url: o, title: e3 || getFileNameFromUrl(o, "openapi.yaml"), iconType: getIconTypeFromUrl(o) }));
}, [e2]);
function getFileNameFromUrl(e2, o) {
  const l = e2.split("?")[0].split(/[\\\/]/).pop();
  return l && (l.includes("yaml") || l.includes("json")) ? l : o;
}
function getIconTypeFromUrl(e2, o) {
  const l = o || e2.split("?")[0].split(/[\\\/]/).pop();
  return l ? l.includes("yaml") ? "yaml" : l.includes("json") ? "json" : "file" : "file";
}

// node_modules/@redocly/openapi-docs/lib-esm/components/Download/DownloadSpecification.js
function DownloadSpecificationComponent() {
  const {
    options: o
  } = useAtomValue(globalStoreAtom), e2 = useDownloadInfo({
    downloadUrls: o.downloadUrls
  }), t = useCallback24((o2) => {
    switch (o2) {
      case "yaml":
        return _jsx100(DocumentIcon, {});
      case "json":
        return _jsx100(JsonIcon, {});
      default:
        return _jsx100(FileIcon, {});
    }
  }, []);
  return e2 ? _jsx100(Wrapper18, {
    children: (e2 || []).map(({
      title: o2,
      url: e3,
      iconType: n2
    }) => _jsxs73(Card, {
      children: [_jsxs73(FileName, {
        children: [t(n2), _jsx100("a", {
          href: e3,
          target: "_blank",
          download: true,
          rel: "noreferrer",
          children: o2
        })]
      }), _jsx100("a", {
        href: e3,
        target: "_blank",
        download: true,
        rel: "noreferrer",
        children: _jsx100(Button, {
          variant: "text",
          size: "small",
          icon: _jsx100(DownloadIcon, {})
        })
      })]
    }, o2))
  }) : _jsx100(_Fragment30, {});
}
var DownloadSpecification = memo53(DownloadSpecificationComponent);
var Card = styled_components_esm_default.div.withConfig({
  displayName: "DownloadSpecification__Card",
  componentId: "sc-fbl4w8-0"
})(["display:flex;align-items:baseline;justify-content:space-between;width:100%;border-bottom:1px solid var(--border-color-secondary);padding-bottom:var(--spacing-sm);:last-of-type{padding-bottom:0px;border-bottom:none;}"]);
var FileName = styled_components_esm_default.span.withConfig({
  displayName: "DownloadSpecification__FileName",
  componentId: "sc-fbl4w8-1"
})(["display:flex;width:calc(100% - 25px);gap:var(--spacing-xs);align-items:center;svg{flex-shrink:0;}a{width:100%;color:var(--text-color-primary);word-break:break-word;text-decoration:none;text-overflow:ellipsis;overflow:hidden;white-space:nowrap;}"]);
var Wrapper18 = styled_components_esm_default.div.withConfig({
  displayName: "DownloadSpecification__Wrapper",
  componentId: "sc-fbl4w8-2"
})(["display:flex;align-items:center;align-self:flex-start;justify-content:space-between;flex-direction:column;gap:var(--spacing-sm);font-size:var(--font-size-base);"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/Overview/Overview.js
init_src();
import { jsx as _jsx101, jsxs as _jsxs74, Fragment as _Fragment31 } from "react/jsx-runtime";
function Overview({ info: e2, translate: t }) {
  const n2 = e2.contact && e2.contact.url && _jsx101(PanelItem, { header: _jsx101(PanelItemDescription, { children: t("openapi.info.contact.url", "URL") }), title: _jsx101("a", { href: e2.contact.url, target: "_blank", rel: "noreferrer", children: e2.contact.url }), actions: [_jsx101(NewTabButton, { data: e2.contact.url }, "NewTabButton")] }) || null, a = e2.contact && e2.contact.email && _jsx101(PanelItem, { header: _jsx101(PanelItemDescription, { children: e2.contact.name || t("openapi.info.contact.name", "E-mail") }), title: _jsx101("a", { href: "mailto:" + e2.contact.email, children: e2.contact.email }), actions: [_jsx101(CopyButton, { data: e2.contact.email }, "CopyButton"), _jsx101(EmailButton, { data: e2.contact.email }, "EmailButton")] }) || null, r = e2.license && _jsx101(PanelItem, { header: _jsx101(PanelItemDescription, { children: t("openapi.info.license", "License") }), title: e2.license.identifier ? e2.license.identifier : _jsx101("a", { href: e2.license.url, target: "_blank", rel: "noreferrer", children: e2.license.name }), actions: [_jsx101(NewTabButton, { data: e2.license.url || "" }, "NewTabButton")] }) || null, i2 = e2.termsOfService && _jsx101(PanelItem, { title: _jsx101("a", { href: e2.termsOfService, target: "_blank", rel: "noreferrer", children: t("openapi.info.termsOfService", "Terms of Service") }), actions: [_jsx101(NewTabButton, { data: e2.termsOfService }, e2.termsOfService)] }) || null;
  return _jsx101(_Fragment31, { children: _jsxs74(PanelItemsList, { children: [n2, a, r, i2] }) });
}

// node_modules/@redocly/openapi-docs/lib-esm/components/ServerList/ServerList.js
init_src();
init_styled_components_esm();
import { jsx as _jsx102, jsxs as _jsxs75 } from "react/jsx-runtime";
var ServerList = ({
  servers: e2,
  path: r,
  translate: i2
}) => _jsx102(ItemsList, {
  children: e2.map((e3) => {
    const a = e3.url + r, t = Object.keys(e3.variables || {}).length, s = 1 === t ? "variable" : "variables", o = `${t || ""} ${i2(`openapi.${s}`, s)}`;
    return _jsxs75("div", {
      children: [_jsx102(PanelItemDescription, {
        children: e3.description
      }), _jsxs75(TitleWrap2, {
        children: [_jsx102(Title8, {
          suppressHydrationWarning: true,
          children: a
        }), _jsx102(CopyButton, {
          data: a
        }, a)]
      }), e3.variables && _jsx102(ViewNested, {
        expandText: `${i2("openapi.actions.show", "Show")} ${o}`,
        hideText: `${i2("openapi.actions.hide", "Hide")} ${o}`,
        expandByDefault: false,
        expandable: true,
        hideDivider: true,
        children: _jsx102(ServerVariablesContainer, {
          children: Object.entries(e3.variables || {}).map(([e4, r2]) => _jsxs75(ServerVariableContainer, {
            children: [_jsx102(ServerVariableName, {
              children: e4
            }), _jsxs75(Variable, {
              children: [i2("openapi.default", "Default"), " ", _jsx102(StyledTag2, {
                children: r2.default
              })]
            }), _jsx102(Description3, {
              source: r2.description
            }), r2.enum && _jsxs75(Variable, {
              children: [i2("openapi.enum", "Enum"), " ", _jsx102(TagWrapper, {
                children: r2.enum.map((e5) => _jsx102(StyledTag2, {
                  children: e5
                }, e5))
              })]
            })]
          }, e4))
        })
      })]
    }, e3.url);
  })
});
var ItemsList = styled_components_esm_default.div.withConfig({
  displayName: "ServerList__ItemsList",
  componentId: "sc-14fpztb-0"
})(["& > div{border-bottom:1px solid var(--border-color-secondary);margin-bottom:var(--spacing-xs);padding-bottom:var(--spacing-sm);}& > div:last-child{border-bottom:none;margin-bottom:0;padding-bottom:0;}"]);
var ServerVariablesContainer = styled_components_esm_default.div.withConfig({
  displayName: "ServerList__ServerVariablesContainer",
  componentId: "sc-14fpztb-1"
})(["padding-left:var(--spacing-xxs);& > div{border-bottom:1px solid var(--border-color-secondary);margin-bottom:var(--spacing-xs);padding-bottom:var(--spacing-sm);}& > div:first-child{margin-top:var(--spacing-sm);padding-top:0;}& > div:last-child{border-bottom:none;margin-bottom:0;padding-bottom:0;}"]);
var ServerVariableContainer = styled_components_esm_default.div.withConfig({
  displayName: "ServerList__ServerVariableContainer",
  componentId: "sc-14fpztb-2"
})(["display:flex;flex-direction:column;flex-wrap:wrap;"]);
var Description3 = styled_components_esm_default(Markdown2).withConfig({
  displayName: "ServerList__Description",
  componentId: "sc-14fpztb-3"
})(["font-size:var(--font-size-sm);line-height:var(--line-height-sm);color:var(--text-color-primary);"]);
var Variable = styled_components_esm_default.span.withConfig({
  displayName: "ServerList__Variable",
  componentId: "sc-14fpztb-4"
})(["display:flex;gap:var(--spacing-xxs);font-size:var(--font-size-sm);line-height:var(--line-height-sm);color:var(--text-color-primary);"]);
var ServerVariableName = styled_components_esm_default(Variable).withConfig({
  displayName: "ServerList__ServerVariableName",
  componentId: "sc-14fpztb-5"
})(["padding-bottom:var(--spacing-xxs);font-weight:var(--font-weight-semibold);"]);
var TagWrapper = styled_components_esm_default.span.withConfig({
  displayName: "ServerList__TagWrapper",
  componentId: "sc-14fpztb-6"
})(["display:flex;gap:var(--spacing-xxs);flex-wrap:wrap;"]);
var StyledTag2 = styled_components_esm_default(Tag3).withConfig({
  displayName: "ServerList__StyledTag",
  componentId: "sc-14fpztb-7"
})(["font-size:var(--font-size-sm);line-height:var(--line-height-sm);"]);
var TitleWrap2 = styled_components_esm_default.div.withConfig({
  displayName: "ServerList__TitleWrap",
  componentId: "sc-14fpztb-8"
})(["display:flex;justify-content:space-between;align-items:center;"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/RightPanel/RightPanel.js
var RightPanel = ({ item: { infoDefinition: e2 } }) => {
  const a = useTranslate(), { options: { hideDownloadButtons: r, mockServer: o }, parser: { definition: n2, definitionUrl: i2 } } = useAtomValue(globalStoreAtom), { languages: s, activeLanguage: t } = useAtomValue(languageAtom), l = normalizeServers(i2, mergeInMockServer(n2.servers || [], o));
  return _jsxs76(_Fragment32, { children: [!r && _jsx103(Panel, { className: "panel-download", header: a("openapi.download.description.title", "Download OpenAPI description"), isExpandable: false, children: _jsx103(DownloadSpecification, {}) }), ((null == e2 ? void 0 : e2.license) || (null == e2 ? void 0 : e2.contact) || (null == e2 ? void 0 : e2.termsOfService)) && _jsx103(Panel, { className: "panel-overview", header: a("openapi.info.title", "Overview"), isExpandable: false, children: _jsx103(Markdown, { children: _jsx103(Overview, { info: e2, translate: a }) }) }), !!(null == s ? void 0 : s.length) && _jsx103(Panel, { className: "panel-language-list", header: a("openapi.languages.title", "Languages"), isExpandable: false, children: _jsx103(LanguageList, { languages: s, activeLanguage: t }) }), !!l.length && _jsx103(Panel, { className: "panel-servers-list", header: a("openapi.servers.title", "Servers"), isExpandable: false, children: _jsx103(ServerList, { servers: l, path: "/", translate: a }) })] });
};

// node_modules/@redocly/openapi-docs/lib-esm/components/ApiInfo/ApiInfo.js
function ApiInfo({
  item: e2
}) {
  const o = useTranslate(), {
    options: {
      unstable_hooks: t,
      hideInfoMetadata: a
    },
    parser: {
      definition: r
    }
  } = useAtomValue(globalStoreAtom), i2 = useAtomValue(layoutAtom), n2 = e2.infoDefinition;
  if (!n2)
    return null;
  const s = saveTextBeforeHeading(getValueFromMdParsedExtension(n2, "description") || ""), l = getValueFromMdParsedExtension(n2, "summary") || void 0, m = null == r ? void 0 : r.externalDocs, d = n2.version && _jsxs77("span", {
    children: ["(", n2.version, ")"]
  }) || null, p = i2 === LayoutVariant.STACKED;
  return _jsxs77(Row, {
    layout: i2,
    children: [_jsxs77(SamplesMiddlePanel, {
      fullWidth: true,
      className: "api-info",
      isStacked: p,
      children: [_jsxs77(ApiHeader, {
        children: [n2.title, " ", d]
      }), _jsx104(RenderHook, {
        Hook: AfterOpenApiTitle || (null == t ? void 0 : t.AfterApiTitle),
        props: {
          info: n2
        }
      }), l && _jsx104(Markdown2, {
        source: l,
        "data-role": "redoc-summary"
      }), s && _jsx104(Markdown2, {
        source: s,
        "data-role": "redoc-description"
      }), m && _jsx104(ExternalDocumentation, {
        externalDocs: m
      }), !a && _jsx104(Metadata, {
        metadata: n2["x-metadata"],
        translate: o
      })]
    }), p && _jsx104(RightPanelContainer, {
      isStacked: p,
      children: _jsx104(RightPanel, {
        item: e2
      })
    })]
  });
}
var RightPanelContainer = styled_components_esm_default(SamplesPanel).withConfig({
  displayName: "ApiInfo__RightPanelContainer",
  componentId: "sc-u5ml76-0"
})(["position:static;"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/ContentItem/useIsExpanded.js
init_src();
import { useMemo as useMemo22 } from "react";
import { useLocation as useLocation12 } from "react-router-dom";
function useIsExpanded({ item: e2, routingBasePath: o }) {
  const t = useLocation12(), r = useMemo22(() => tryDecodeURIComponent(normalizePath(t.pathname.replace(o, ""))), [t.pathname, o]);
  if ("tag" !== e2.type)
    return false;
  return [e2.href, ...e2.items.map((e3) => e3.href)].some((e3) => {
    const o2 = getLegacyHash(t.hash);
    return [e3, tryDecodeURIComponent(e3)].includes(r) || o2 && (e3.endsWith(o2) || e3 === removeLeadingSlash(o2));
  });
}

// node_modules/@redocly/openapi-docs/lib-esm/components/ContentItem/ContentItem.js
var ContentComponentMap = { group: null, tag: TagItem, section: SectionItem, schema: TagItem, operation: OperationItem, root: ApiInfo };
function ContentItemComponent({ item: t, routingBasePath: e2 }) {
  var o;
  const n2 = ContentComponentMap[isRootItem(t) ? "root" : t.type], m = "tag" === t.type && t.items.length > 0, i2 = useIsExpanded({ item: t, routingBasePath: e2 });
  return _jsxs78(_Fragment33, { children: [n2 && _jsx105(Section, { id: t.id, sectionId: joinWithSeparator(e2, t.id), underlined: "operation" === t.type || "schema" === t.type, expanded: m && !i2, children: _jsx105(n2, { item: t, routingBasePath: e2, isExpanded: i2 }) }), (i2 || "tag" !== t.type) && Boolean(null === (o = t.items) || void 0 === o ? void 0 : o.length) && _jsx105(ContentItems, { items: t.items, routingBasePath: e2 })] });
}
var ContentItem = memo54(ContentItemComponent);

// node_modules/@redocly/openapi-docs/lib-esm/components/PageFooter/PageFooter.js
init_src();
import { jsx as _jsx106 } from "react/jsx-runtime";
import { memo as memo55 } from "react";
function PageFooterComponent() {
  const { unstable_hooks: { MiddlePanelFooter: o } } = useAtomValue(globalOptionsAtom);
  switch (true) {
    case Boolean(o):
      return _jsx106(RenderHook, { Hook: o, props: void 0 });
    case Boolean(OpenApiFooter):
      return _jsx106(OpenApiFooter, {});
    default:
      return null;
  }
}
var PageFooter = memo55(PageFooterComponent);

// node_modules/@redocly/openapi-docs/lib-esm/components/SectionContent/SectionContent.js
function SectionContent({
  items: e2,
  hideFooterAndHeader: t
}) {
  const {
    unstable_hooks: {
      MiddlePanelHeader: o
    },
    routingBasePath: a
  } = useAtomValue(globalOptionsAtom), n2 = useAtomValue(layoutAtom), r = n2 === LayoutVariant.STACKED, i2 = useMemo23(() => t ? null : _jsx107(MiddlePanelWrapper, {
    isStacked: r,
    children: _jsx107(PageFooter, {})
  }), [t, r]), l = useMemo23(() => t || !OpenApiHeader && !o ? null : _jsx107(MiddlePanelWrapper, {
    isStacked: r,
    children: o ? _jsx107(RenderHook, {
      Hook: o,
      props: void 0
    }) : _jsx107(OpenApiHeader, {})
  }), [o, t, r]);
  return 0 === e2.length ? null : _jsxs79(_Fragment34, {
    children: [l, _jsxs79(Row, {
      layout: n2,
      children: [_jsx107(SectionContainer, {
        layout: n2,
        children: e2.filter(({
          type: e3
        }) => "section" === e3).map((e3) => _jsx107(ContentItem, {
          item: e3,
          routingBasePath: a
        }, e3.id))
      }), _jsx107(RightPanelContainer2, {
        isStacked: r,
        tabIndex: 0,
        children: _jsx107(RightPanel, {
          item: e2[0]
        })
      })]
    }), e2.filter(({
      type: e3
    }) => "section" !== e3).map((e3) => _jsx107(ContentItem, {
      item: e3,
      routingBasePath: a
    }, e3.id)), i2]
  });
}
var MiddlePanelWrapper = styled_components_esm_default(SamplesMiddlePanel).withConfig({
  displayName: "SectionContent__MiddlePanelWrapper",
  componentId: "sc-10zn1cw-0"
})(["align-self:flex-start;padding-top:var(--panel-gap-vertical);padding-bottom:var(--panel-gap-vertical);"]);
var SectionContainer = styled_components_esm_default.div.withConfig({
  displayName: "SectionContent__SectionContainer",
  componentId: "sc-10zn1cw-1"
})(["width:100%;@media screen and (min-width:", "){width:", ";}"], breakpoints.large, ({
  layout: e2
}) => e2 === LayoutVariant.STACKED ? "100%" : "calc(100% - var(--panel-samples-width))");
var RightPanelContainer2 = styled_components_esm_default(SamplesPanel).withConfig({
  displayName: "SectionContent__RightPanelContainer",
  componentId: "sc-10zn1cw-2"
})(["margin:var(--spacing-base) 0;"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/ContentItems/ContentItems.js
function ContentItemsComponent({ items: t, root: e2 = false, routingBasePath: o }) {
  const n2 = "/", { rootItem: m } = getItemsByType(t), s = !e2 || m ? n2 : getFirstPageLink(t, n2), r = useMemo24(() => _jsxs80(Routes, { children: [m && _jsx108(Route, { path: `${m.href || n2}*`, element: _jsx108(SectionContent, { items: t }) }), _jsx108(Route, { path: "*", element: _jsx108(Navigate, { to: s, replace: true }) })] }), [m, n2, t, s]);
  return e2 && !t.length ? _jsx108(Routes, { children: _jsx108(Route, { path: "*", element: _jsx108(SectionContent, { items: t }) }) }) : t.length ? _jsx108(_Fragment35, { children: e2 ? r : t.map((t2) => _jsx108(ContentItem, { item: t2, routingBasePath: o }, t2.id)) }) : null;
}
var ContentItems = memo56(ContentItemsComponent);

// node_modules/@redocly/openapi-docs/lib-esm/components/Content/Content.js
function ContentComponent({ routingBasePath: t, items: o }) {
  return useAutoScroll(t), _jsx109(ContentItems, { root: true, items: o, routingBasePath: t });
}
var Content = memo57(ContentComponent);

// node_modules/@redocly/openapi-docs/lib-esm/hoc/withRouter.js
init_src();
import { jsx as _jsx110 } from "react/jsx-runtime";
import { createElement as _createElement } from "react";

// node_modules/@redocly/openapi-docs/lib-esm/hoc/utils.js
function getDisplayName(e2) {
  return e2.displayName || e2.name || "Component";
}

// node_modules/@redocly/openapi-docs/lib-esm/hoc/withRouter.js
var __rest13 = function(e2, t) {
  var r = {};
  for (var o in e2)
    Object.prototype.hasOwnProperty.call(e2, o) && t.indexOf(o) < 0 && (r[o] = e2[o]);
  if (null != e2 && "function" == typeof Object.getOwnPropertySymbols) {
    var s = 0;
    for (o = Object.getOwnPropertySymbols(e2); s < o.length; s++)
      t.indexOf(o[s]) < 0 && Object.prototype.propertyIsEnumerable.call(e2, o[s]) && (r[o[s]] = e2[o[s]]);
  }
  return r;
};
function withRouter(e2) {
  const t = (t2) => {
    var r, o, { disableRouter: s = false } = t2, a = __rest13(t2, ["disableRouter"]);
    const i2 = null !== (r = a.basePath) && void 0 !== r ? r : "/", n2 = null !== (o = a.router) && void 0 !== o ? o : "history", { Router: l, routerProps: u } = useRouter(n2, i2);
    return IS_BROWSER && !s ? _createElement(l, Object.assign({}, u, { key: i2 }), _jsx110(e2, Object.assign({}, a))) : _jsx110(e2, Object.assign({}, a));
  };
  return t.displayName = `WithRouter(${getDisplayName(e2)})`, t;
}

// node_modules/@redocly/openapi-docs/lib-esm/hoc/withStore.js
import { jsx as _jsx111 } from "react/jsx-runtime";
import { useEffect as useEffect12 } from "react";
var __rest14 = function(o, t) {
  var e2 = {};
  for (var r in o)
    Object.prototype.hasOwnProperty.call(o, r) && t.indexOf(r) < 0 && (e2[r] = o[r]);
  if (null != o && "function" == typeof Object.getOwnPropertySymbols) {
    var l = 0;
    for (r = Object.getOwnPropertySymbols(o); l < r.length; l++)
      t.indexOf(r[l]) < 0 && Object.prototype.propertyIsEnumerable.call(o, r[l]) && (e2[r[l]] = o[r[l]]);
  }
  return e2;
};
function withStore(o) {
  return (t) => {
    var { portalOptions: e2 } = t, r = __rest14(t, ["portalOptions"]);
    const [l, a] = useAtom(layoutAtom), [s, i2] = useAtom(collapsedSidebarAtom), { options: p, parser: n2 } = useAtomValue(globalStoreAtom);
    return useEffect12(() => {
      (null == e2 ? void 0 : e2.layout) && a(e2.layout);
    }, [null == e2 ? void 0 : e2.layout, a]), useEffect12(() => {
      "boolean" == typeof (null == e2 ? void 0 : e2.collapsedSidebar) && i2(e2.collapsedSidebar);
    }, [null == e2 ? void 0 : e2.collapsedSidebar, i2]), n2 ? _jsx111(o, Object.assign({}, r, { options: p, layout: l, collapsedSidebar: s, parser: n2 })) : null;
  };
}

// node_modules/@redocly/realm/dist/server/esbuild/plugins/openapi-docs-module-replacer/empty-check.js
function e() {
  return { licenseInfo: { allowed: true, valid: true }, isValid: true };
}

// node_modules/@redocly/openapi-docs/lib-esm/components/RedoclyOpenAPIDocs/RedoclyOpenAPIDocs.js
var RedoclyOpenAPIDocsComponent = compose(withRouter, withStore, memo58)(({ licenseKey: e2, onLoaded: o, children: i2, options: t, layout: n2, collapsedSidebar: r, parser: s, withCommonStyles: l }) => {
  var a, d, c, m, u;
  const p = useRef10(null), { isValid: v, licenseInfo: f } = e(e2);
  useUppercase2LowercaseRedirect(), useMount(() => {
    null == o || o();
  });
  const { hideSidebar: h, scrollYOffset: y } = t || {}, { contentItems: S } = useContentItems({ parser: s, options: t }), x = null === (d = null === (a = s.definition) || void 0 === a ? void 0 : a.info) || void 0 === d ? void 0 : d["x-logo"];
  return _jsxs81(_Fragment36, { children: [l && _jsx112(GlobalStyle, {}), _jsxs81(RedocWrap, { className: "redoc-wrap", ref: p, children: [!v && _jsx112(Overlay, { licenseInfo: f }), !h && _jsxs81(StickyResponsiveSidebar, { scrollYOffset: y, className: "menu-content", collapsedSidebar: !r, children: [_jsx112(SidebarLogo, { imageUrl: null == x ? void 0 : x.url, href: (null == x ? void 0 : x.href) || (null === (u = null === (m = null === (c = s.definition) || void 0 === c ? void 0 : c.info) || void 0 === m ? void 0 : m.contact) || void 0 === u ? void 0 : u.url), altText: null == x ? void 0 : x.altText, backgroundColor: null == x ? void 0 : x.backgroundColor }), _jsx112(SideMenu, { items: v ? S : [] })] }), _jsxs81(ThreePanelLayout, { className: "api-content", id: "api-content", layout: n2 === LayoutVariant.THREE_PANEL ? LayoutVariant.THREE_PANEL : LayoutVariant.STACKED, collapsedSidebar: r, children: [_jsx112(Content, { items: v ? S : [], routingBasePath: t.routingBasePath }), i2] })] })] });
});
function RedoclyOpenAPIDocs({ onLoaded: e2, children: o, store: i2, withCommonStyles: t }) {
  var n2, r, s;
  return (null == i2 ? void 0 : i2.definition) ? _jsx112(StoreProvider, Object.assign({}, i2, { children: _jsx112(RedoclyOpenAPIDocsComponent, { onLoaded: e2, basePath: null === (n2 = i2.options) || void 0 === n2 ? void 0 : n2.routingBasePath, licenseKey: null === (r = i2.options) || void 0 === r ? void 0 : r.licenseKey, disableRouter: null === (s = i2.options) || void 0 === s ? void 0 : s.disableRouter, withCommonStyles: t, children: o }) })) : null;
}

// node_modules/@redocly/openapi-docs/lib-esm/components/pluggable/RedocSchema.js
import { jsx as _jsx113 } from "react/jsx-runtime";

// node_modules/@redocly/openapi-docs/lib-esm/components/pluggable/styled.components.js
init_styled_components_esm();
var SamplesWrap = styled_components_esm_default.div.withConfig({
  displayName: "styledcomponents__SamplesWrap",
  componentId: "sc-1it5p8i-0"
})(["padding:calc(var(--spacing-unit) * 4);border-radius:var(--panel-border-radius);border:var(--panel-samples-border);background-color:var(--panel-samples-bg-color);"]);
var ExamplesWrap = styled_components_esm_default(SamplesWrap).withConfig({
  displayName: "styledcomponents__ExamplesWrap",
  componentId: "sc-1it5p8i-1"
})(["width:100%;"]);
var FullWidthPanel = styled_components_esm_default(SamplesMiddlePanel).withConfig({
  displayName: "styledcomponents__FullWidthPanel",
  componentId: "sc-1it5p8i-2"
})(["padding-left:var(--spacing-horizontal);padding-right:var(--spacing-horizontal);width:100%;"]);

// node_modules/@redocly/openapi-docs/lib-esm/components/pluggable/RedocSchema.js
var RedocSchema = ({ pointer: e2, schema: o }) => {
  const { options: r, parser: t } = useAtomValue(globalStoreAtom), m = getSchema({ parser: t, schemaOrRef: o || { $ref: e2 }, pointer: e2 || "", options: r, deps: { operation: { pointer: "RedocSchema" } } });
  return _jsx113(Row, { children: _jsx113(FullWidthPanel, { children: _jsx113(Schema, { schema: m, level: 1, disableDeepLinks: true }) }) });
};

// node_modules/@redocly/openapi-docs/lib-esm/components/pluggable/RedocExample.js
import { jsx as _jsx114 } from "react/jsx-runtime";
var RedocExample = ({ pointer: o, mimeType: m, encoding: e2 }) => {
  const r = useAtomValue(globalParserAtom), t = useAtomValue(layoutAtom), a = getExamples({ parser: r, infoOrRef: { $ref: o }, mime: m, encoding: e2 });
  return _jsx114(Row, { layout: t, children: _jsx114(ExamplesWrap, { children: _jsx114(Example, { example: a, mimeType: m }) }) });
};

// node_modules/@redocly/openapi-docs/lib-esm/index.js
function useOpenapiDocsOptions() {
  return useAtomValue(globalOptionsAtom);
}

// node_modules/@redocly/realm/dist/server/plugins/openapi-docs/template/mock-server-config.js
function i(o, e2) {
  return o?.off !== true ? { url: `/_mock${e2}`, position: "first", description: "Mock server", ...o } : o;
}

export {
  JsonPointer,
  normalizeOptions,
  OpenAPIParser,
  getServerEnvName,
  getTagOrGroup,
  isOperationName,
  getOperation,
  EmbeddedReplay,
  RequestSamples,
  RedocSchema,
  RedocExample,
  StoreProvider,
  RedoclyOpenAPIDocs,
  useOpenapiDocsOptions,
  i
};
/*! Bundled license information:

stickyfill/index.js:
  (*!
   * Stickyfill -- `position: sticky` polyfill
   * v. 1.1.1 | https://github.com/wilddeer/stickyfill
   * Copyright Oleg Korsunsky | http://wd.dizaina.net/
   *
   * MIT License
   *)

dompurify/dist/purify.es.js:
  (*! @license DOMPurify 2.5.4 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/2.5.4/LICENSE *)
*/
