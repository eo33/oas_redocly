import { createRequire as topLevelCreateRequire } from 'module';
 const require = topLevelCreateRequire(import.meta.url);
import {
  $e,
  Ne,
  ThemeDataContext,
  init_contexts,
  init_styled_components_esm,
  styled_components_esm_default
} from "./chunk-WNBJGIID.js";
import {
  __esm
} from "./chunk-35AYGKFE.js";

// node_modules/@redocly/theme/src/components/Link/Link.tsx
import * as React from "react";
import { useContext } from "react";
import { Link as ReactLink } from "react-router-dom";
function Link(props) {
  const context = useContext(ThemeDataContext);
  if (context?.components) {
    const { LinkComponent } = context.components;
    return /* @__PURE__ */ React.createElement(LinkComponent, { ...props });
  } else {
    const {
      active: _,
      httpVerb: _1,
      hasActiveSubItem: _2,
      routeSlug: _3,
      external: _4,
      ...filteredProps
    } = props;
    return /* @__PURE__ */ React.createElement(ReactLink, { ref: filteredProps.innerRef, ...filteredProps });
  }
}
var init_Link = __esm({
  "node_modules/@redocly/theme/src/components/Link/Link.tsx"() {
    init_contexts();
  }
});

// node_modules/@redocly/theme/src/components/Button/Button.tsx
import React2 from "react";
function generateClassName({
  variant = "secondary",
  tone = "default",
  size = "medium",
  extraClass = ""
}) {
  const classNames = [extraClass, `button-tone-${tone}`, `button-variant-${variant}`, `button-size-${size}`];
  return classNames.filter((className) => className).join(" ").trim();
}
var getBlink, StyledButtonLink, StyledButton, ButtonComponent, Button;
var init_Button = __esm({
  "node_modules/@redocly/theme/src/components/Button/Button.tsx"() {
    init_styled_components_esm();
    init_Link();
    getBlink = () => $e(["0%{color:var(--button-content-color);background-color:var(--button-bg-color-active);}50%{background-color:var(--button-bg-color);}100%{color:var(--button-content-color);background-color:var(--button-bg-color-active);}"]);
    StyledButtonLink = styled_components_esm_default(Link).withConfig({
      displayName: "Button__StyledButtonLink",
      componentId: "sc-1cnyvkw-0"
    })(["text-decoration:none;&:focus-visible{outline:1px solid var(--button-border-color-focused);}border-radius:var(--button-border-radius);"]);
    StyledButton = styled_components_esm_default.button.attrs((props) => ({
      className: generateClassName(props)
    })).withConfig({
      displayName: "Button__StyledButton",
      componentId: "sc-1cnyvkw-1"
    })(["width:", ";display:inline-flex;align-items:center;justify-content:center;gap:var(--button-gap);margin:var(--button-margin);cursor:pointer;text-wrap:var(--button-text-wrap);color:var(--button-color);background-color:var(--button-bg-color);border:var(--button-border-width) var(--button-border-style) var(--button-border-color);box-shadow:var(--button-box-shadow);font-weight:var(--button-font-weight);font-size:var(--button-font-size);line-height:var(--button-line-height);padding:", ";border-radius:var(--button-border-radius);svg{width:var(--button-icon-size);height:var(--button-icon-size);}&:hover{background-color:var(--button-bg-color-hover);color:var(--button-color-hover);border-color:var(--button-border-color-hover);}&:active,&.active{background-color:var(--button-bg-color-active);border-color:var(--button-border-color-active);color:var(--button-color-active);}&:focus-visible{outline:1px solid var(--button-border-color-focused);}&.button-tone-danger{color:var(--button-content-color-danger);border-color:var(--button-border-color-danger);background-color:var(--button-bg-color-danger);&:hover{color:var(--button-content-color-danger-hover);border-color:var(--button-border-color-danger-hover);background-color:var(--button-bg-color-danger-hover);}&:active{color:var(--button-content-color-danger-pressed);border-color:var(--button-border-color-danger-pressed);background-color:var(--button-bg-color-danger-pressed);}}&:disabled{pointer-events:none;background-color:var(--button-bg-color-disabled);color:var(--button-content-color-disabled);border-color:var(--button-border-color-disabled);border-width:var(--button-border-width-disabled);}", " ", ""], ({
      fullWidth
    }) => fullWidth ? "100%" : "auto", ({
      icon,
      iconPosition,
      iconOnly
    }) => icon ? `var(--button-icon-${iconOnly ? "" : `${iconPosition || "left"}-`}padding)` : "var(--button-padding)", ({
      variant,
      size
    }) => (variant === "link" || variant === "ghost") && size === "small" && Ne(["--button-font-size:var(--font-size-sm);--button-line-height:var(--line-height-sm);--button-icon-padding:var(--button-icon-padding-small) !important;"]), ({
      blinking
    }) => blinking && Ne(["pointer-events:none;animation:", " 1.2s infinite;"], getBlink()));
    ButtonComponent = (props) => {
      const button = /* @__PURE__ */ React2.createElement(StyledButton, { "data-component-name": "Button/Button", ...props, iconOnly: !props.children && props.icon !== null, tabIndex: props.to ? -1 : void 0 }, props.icon && props.iconPosition !== "right" && props.icon, props.children, props.icon && props.iconPosition === "right" && props.icon);
      if (props.to) {
        return /* @__PURE__ */ React2.createElement(StyledButtonLink, { to: props.to, onClick: props.onClick }, button);
      } else {
        return button;
      }
    };
    Button = styled_components_esm_default(ButtonComponent).withConfig({
      displayName: "Button",
      componentId: "sc-1cnyvkw-2"
    })([""]);
  }
});

export {
  Link,
  init_Link,
  generateClassName,
  Button,
  init_Button
};
