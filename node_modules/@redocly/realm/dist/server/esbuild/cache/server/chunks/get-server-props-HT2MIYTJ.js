import { createRequire as topLevelCreateRequire } from 'module';
 const require = topLevelCreateRequire(import.meta.url);
import "./chunk-2BYWYT7Z.js";
import {
  f,
  x
} from "./chunk-E25PHAH2.js";
import "./chunk-P5LFNF57.js";
import "./chunk-7WVTT2DN.js";
import "./chunk-R4PATEVC.js";
import "./chunk-35AYGKFE.js";

// node_modules/@redocly/realm/dist/server/plugins/catalog/get-server-props.js
async function a(f2, e, r) {
  if (!r.variables.idpAccessToken)
    return x.warnProd("Cannot fetch custom fields: access token not found"), e.props;
  if (!f)
    return x.warnProd("Cannot fetch custom fields: API URL not found in env"), e.props;
  const n = {};
  try {
    const s = await fetch(f + "?limit=2000", { headers: { Cookie: `accessToken=${r.variables.idpAccessToken}` } });
    if (s.status !== 200)
      return x.warnProd(`Failed to fetch custom fields. API response status: ${s.status}. Request URL: ${f}`), e.props;
    const c = await s.json();
    for (const i of c.items)
      n[i.contentPath] = i.customFields || {};
  } catch (s) {
    x.warnProd("Failed to fetch custom fields: " + s.message);
  }
  return { ...e.props, customFields: n };
}
export {
  a as default
};
