import*as l from"readline";import h,{LogLevel as o}from"./formatter.js";import{telemetry as m}from"../../../cli/telemetry/index.js";import{isProductionMode as d}from"../../../shared/env.js";import{gray as f}from"./colors.js";import{exit as a}from"../process.js";import{isDevelopMode as g}from"../is-develop-mode.js";const E=[{id:"sep",content:`
`},{id:"sep2",content:f("\u2500".repeat(Math.round(process.stdout.columns/2)))+`
`},{id:"sep3",content:`
`}],c=[];let p=0;class S{context;isProdMode;timers=new Map;timeouts=new Map;disableSticky=!1;constructor(t){this.context=t,this.isProdMode=d()}panic(t,...e){t instanceof Error&&(t=t.message+`
`+t.stack),this.error(t,...e),m.send("cli_error_caught",{message:t}),a(1)}panicOnContentError(t,...e){t instanceof Error&&(t=t.message+`
`+t.stack),this.contentError(t,...e),m.send("cli_error_caught",{message:t,scope:"content"}),a(1)}info(t,...e){this.log({level:o.INFO,message:t,args:e})}infoTime(t,e,...i){return this.logTiming(o.INFO,e,t,...i)}success(t,...e){this.log({level:o.SUCCESS,message:t,args:e})}logSticky(t,e,...i){const n=c.find(r=>r.id===t),s=h.interpolate(e,...i)+`
`;if(!this.isInteractive()){this.log({level:o.INFO,message:e,args:i});return}n?n.content=s:(c.length===0&&c.push(...E),c.push({id:t,content:s}));for(let r=0;r<p;r++)l.moveCursor(process.stdout,0,-1),l.clearLine(process.stdout,1);this.printSticky(),p=c.length}successTime(t,e,...i){return this.logTiming(o.SUCCESS,e,t,...i)}warn(t,...e){this.log({level:o.WARN,message:t,args:e})}warnProd(t,...e){this.isProdMode?this.warn(t,...e):this.verbose(t,...e)}error(t,...e){this.log({level:o.ERROR,message:t,args:e})}contentError(t,...e){this.log({level:o.ERROR,message:t,scope:"content",args:e})}verbose(t,...e){process.env.REPORTER_VERBOSE==="true"&&this.log({level:o.VERBOSE,message:t,args:e})}verboseTime(t,e,...i){if(process.env.REPORTER_VERBOSE==="true")return this.logTiming(o.VERBOSE,e,t,...i)}httpTime(t){return this.logTiming(o.HTTP,"",t)}startTiming(t){const e=t||Symbol();this.timers.set(e,performance.now());const i=setTimeout(()=>{this.timers.delete(e),this.timeouts.delete(e)},500*1e3);return this.timeouts.set(e,i),e}updateContext(t){this.context={...this.context,...t}}clearAllTimeouts(){for(const t of this.timeouts.values())clearTimeout(t);this.timeouts.clear()}logTiming(t,e,i,...n){const s=this.timers.get(i);if(!s)return;const r=Math.round(performance.now()-s);return this.timers.delete(i),this.log({level:t,message:e,duration:r,args:n}),{message:e,time_ms:r}}printSticky(){c.forEach(t=>{process.stderr.write(t.content)})}clearSticky(){if(this.isInteractive())for(let t=0;t<p;t++)l.moveCursor(process.stdout,0,-1),l.clearLine(process.stdout,1)}log({level:t,message:e,duration:i,scope:n,args:s}){!this.disableSticky&&this.isInteractive()&&this.clearSticky();let r=e&&h.interpolate(e,...s);r&&i!=null&&t!==o.VERBOSE&&m.send("timing_performed",{time_ms:i,message:r});const u={level:t,message:r,duration:i,scope:n,context:this.context};process.stderr.write(h.format(u)),!this.disableSticky&&this.isInteractive()&&this.printSticky()}isInteractive({stream:t=process.stdout}={}){return!!(t&&t.isTTY&&process.env.TERM!=="dumb"&&!("CI"in process.env)&&g())}patchConsole(){if(this.isInteractive())for(const t of T){const e=console[t];console[t]=(...i)=>{this.clearSticky(),e(...i),this.printSticky()}}}}const v=new S;var x=v;const T=["log","warn","error","info","debug","trace","dir","timeEnd","table"];export{S as Logger,x as default};
