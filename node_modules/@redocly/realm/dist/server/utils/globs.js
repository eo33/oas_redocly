import l from"picomatch";import{minimatch as f}from"minimatch";import c from"is-glob";import u from"path";import{removeLeadingSlash as a,removeTrailingSlash as m}from"../../shared/utils.js";const p=(e,n)=>{const r=e.tokens??[],o=n.tokens??[];if(e.isGlob!==n.isGlob)return e.isGlob?n:e;if(r.length!==o.length)return r.length>o.length?e:n;for(let t=0;t<r.length;t++){if(r[t].isGlob!==o[t].isGlob)return r[t].isGlob?n:e;if(r[t].value!==o[t].value)return r[t].value.length>o[t].value.length?e:n}return e};function h(e,n){if(c(n)){if(f(e,n))return!0}else{const r=m(a(u.posix.normalize(n))),o=e.startsWith(r+"/");if(e===r||o)return!0}return!1}function P(e,n){let r={},o={};if(!n)return r;for(const[t,i]of Object.entries(n))h(e,t)&&(o[t]=i);if(Object.keys(o).length){const t=Object.keys(o).map(i=>l.scan(i,{tokens:!0}));if(t.length){let i=t[0];for(const s of t)i=p(i,s);r=o[i.input]}}return r}export{p as getDeeperGlobPattern,h as pathMatchesGlobPattern,P as resolveMetadataGlobs};
