import*as f from"yaml-ast-parser";function l(r,t,a){const n=d(r),e=c(n,t,a);if(e)return u(r,e.startPosition,e.endPosition)}function c(r,t,a){if(r===void 0)return;let n=r;for(const e of t)if(n.kind===f.Kind.MAP){const i=n.mappings.find(s=>s.key.value===e);if(!i||(n=i,!i?.value))break;n=i.value}else if(n.kind===f.Kind.SEQ){const i=n.items[parseInt(e.toString(),10)];if(!i)break;n=i}if(a){const e=n.parent;return!e||e.kind===f.Kind.SEQ?n:e.kind===f.Kind.MAPPING?e.key:n}else return n}function d(r){const t=f.safeLoad(r)??void 0;return t&&t.kind===0&&t.value===""&&t.startPosition!==1&&(t.startPosition=1,t.endPosition=1),t}function u(r,t,a){let n=1,e=1,i={line:1,character:1};for(let o=0;o<a-1;o++){if(o===t-1&&(i={line:n,character:e+1}),r[o]===`
`){n++,e=1,o===t-1&&(i={line:n,character:e}),r[o+1]==="\r"&&o++;continue}e++}const s=t===a?{...i}:{line:n,character:e+1};return{start:i,end:s}}export{l as getYamlLocationByPointer};
