import A from"path";import{sanitizeRedirectPathname as D,withPathPrefix as _,withoutPathPrefix as z}from"../../../shared/urls.js";import{normalizeRouteSlug as W,isLocalLink as T,isPathInFolder as F,sanitizePath as G,removeTrailingSlash as C,addTrailingSlash as H}from"../../../shared/utils.js";import{renderPage as k,getServerProps as v}from"../../ssr/index.js";import{canAccessAsset as Y,canAccessResource as U}from"../../utils/rbac.js";import{handleErrorPageRender as P,handleUnauthorized as $,handleUnauthorizedApiRequest as j,handleUnauthorizedAsset as y}from"../utils.js";import{CACHE_CONTROL_NO_CACHE_HEADER_VALUE as I,DEFAULT_IMMUTABLE_CACHE_MAX_AGE as N}from"../../constants.js";import{findInIterable as b}from"../../../shared/jsUtils.js";import{DEFAULT_MAX_AGE_FOR_MIME_TYPE as X,MIME_TYPES as V}from"../mime-types.js";import{fileExistsAsync as Z}from"../../utils/index.js";import{handleApiRequest as J}from"../handle-api-request.js";import{REDOCLY_ROUTE_RBAC as S,REDOCLY_TEAMS_RBAC as q}from"../../../shared/constants.js";import{getRedirectRoute as K}from"../utils/legacy-openapi-redirects.js";function fe(e,w,O){return async n=>{const E=n.get("logger"),h=n.req,a=new URL(h.url),r=z(G(decodeURIComponent(a.pathname))),c=W(r),o=h.method==="GET"?e.getRouteBySlug(c,{followRedirect:!1})||b(e.routesBySlug?.values(),t=>t.hasClientRoutes&&(r===t.slug||r.startsWith(t.slug+"/"))):void 0;if(Object.keys(e.config.redirects||{}).length>0){const t=e.config.redirects[c],s=t?.to?C(t?.to):t?.to;if(s){const i=T(s)?_(s):s;return n.newResponse(null,t.type,{Location:encodeURI(i+a.search)})}const d=Object.keys(e.config.redirects).find(i=>{const u=i.match(/^(.+)\*$/);return u&&H(c).startsWith(u[1])});if(d){let i=e.config?.redirects[d]?.to;if(i){if(i.endsWith("*")){const B=c.replace(d.split("*")[0],"");i=i.replace(/\*$/,B)}let u=T(i)?_(i):i;return a?.search&&(u=C(u)),n.newResponse(null,301,{Location:encodeURI(u+a.search)})}}}if(o?.metadata?.type==="openapi"){const t=K(a.pathname);if(t)return E.info("Legacy OpenAPI docs redirect from "+a.pathname),n.newResponse(null,301,{Location:encodeURI(t)});if(a.pathname.match(/[A-Z]/))return E.warn("Redirect to lowercase route to avoid 404 error"),n.newResponse(null,301,{Location:encodeURI(a.pathname.toLowerCase())})}if(r.endsWith("/")&&r!=="/"){const t=D(new URL(c||"/",n.req.url).pathname);return n.newResponse(null,301,{Location:encodeURI((t==="/"?"/":C(t))+a.search)})}const{isAuthenticated:m,teams:p,claims:{email:g}}=n.get("auth");if(o){if(!U(o,{isAuthenticated:m,email:g,teams:p},e.config.rbac,e.config.requiresLogin))return m?P(n,e,{slug:o.slug,[q]:o[q],[S]:o[S]},"403"):$(n,e,o.slug);const t=await w(o),s=await v(o,n,t,e),{html:d,statusCode:i}=await k(o,s,n,e);return n.html(d,i,{"Cache-Control":I})}const f=e.apiRoutesBySlug.get(c)||b(e.apiRoutesBySlug.values(),t=>t.isWildcard&&r.startsWith(t.slug));if(f){if(!U(f,{isAuthenticated:m,email:g,teams:p},e.config.rbac,e.config.requiresLogin))return j(n);const t=await w(f);return J(f,n,t,e)}const l=A.resolve(e.outdir,"."+r);if(!F(l,e.outdir))return y(n);if(!Y(r,e.getGlobalConfig("rbac"),e.getGlobalConfig("requiresLogin"),e.getGlobalConfig("directoryPaths"),{isAuthenticated:m,email:g,teams:p}))return y(n);const L=V[A.extname(l)]||"text/plain",R=l.match(/assets\/.*\.[a-f0-9]{8,}\..+/)||l.match(/runtime\/chunks\/.*/)?N:X[L],M=R?{"Cache-Control":`public, max-age=${R}, immutable`,Expires:new Date(Date.now()+R*1e3).toUTCString()}:{"Cache-Control":I};if(await Z(l)){const t=h.query("download")!=null,s=await O(l);return n.newResponse(s,200,{"Content-Type":L,"Access-Control-Allow-Origin":"*",...M,...t&&{"Content-Disposition":`attachment; filename="${A.basename(l)}"`}})}else return P(n,e,{slug:c},"404")}}export{fe as dynamicRouteHandler};
