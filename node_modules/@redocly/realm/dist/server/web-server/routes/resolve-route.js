import{Source as g}from"@redocly/openapi-core";import h from"node:fs/promises";import m from"node:path";import{getRoutesByLines as w,getPointerPosition as S}from"../../plugins/openapi-docs/ast-utils.js";import{OPENAPI_SHARED_DATA_PREFIX as P}from"../../plugins/openapi-docs/constants.js";import{readSharedData as y}from"../../utils/index.js";import{getPathPrefix as j,normalizeRouteSlug as q,removeTrailingSlash as D}from"../../../shared/utils.js";import{combineUrls as F,withPathPrefix as R}from"../../../shared/urls.js";function M(n){return async t=>{const l=await t.req.json(),r=decodeURI(D(l.split("?")[0])),[s]=r.split("#"),e=j(),i=q(s.slice(e.length)),o=n.getRouteBySlug(i);if(o&&n.getRouteByFsPath(o.fsPath)?.metadata?.type==="openapi"){const u=await y(`${P}${o.fsPath}`,n.outdir),p=Object.keys(u.routesMapping).find(a=>F(o.baseSlug,u.routesMapping[a])===r);if(!u.sourcePath)return t.json({route:o},200);let f;if(p){const a=m.join(n.contentDir,o.fsPath),d=await h.readFile(a,"utf-8"),b=new g(a,d);f=S(p,b)}return t.json({route:{fsPath:o.fsPath,pointer:p,position:f}},200)}return t.json({route:o},200)}}function C(n){return async t=>{const l=await t.req.json(),[r,s]=l.split(":");let e=n.getRouteByFsPath(r);if(e?.metadata?.type==="openapi"){const c=await y(`${P}${r}`,n.outdir);if(c?.sourcePath){const u=m.join(n.contentDir,e.fsPath),p=await h.readFile(u,"utf-8"),f=new g(u,p),a=w([parseInt(s,10)],f,c.routesMapping,e.baseSlug);if(a.length){const d=j()?R(a[0]):a[0];return t.json({route:{slug:d}},200)}}}const i=e?.slug?j()?R(e?.slug):e?.slug:"",o={...e,pageName:e?await e?.getNavText?.():"",slug:i};return t.json({route:o},200)}}function E(n){return async t=>{const l=(t.req.query("lines")||"").split(",").map(i=>parseInt(i)),r=t.req.query("file");if(!r)return t.json("No data",400);const s=await y(`${P}${r}`,n.outdir),e=m.join(n.contentDir,r);try{const i=await h.readFile(e,"utf-8");if(!s)return t.json("No data",400);const o=new g(e,i),c=w(l,o,s.routesMapping,s.baseSlug);return t.json(c,200)}catch{return t.json("No data",400)}}}export{E as getRoutesByLineHandler,C as resolvePathHandler,M as resolveSlugHandler};
