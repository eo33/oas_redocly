/**
 * This module was copied from https://github.com/honojs/hono/blob/master/src/utils/jwt/types.ts
 */
export declare class JwtAlgorithmNotImplemented extends Error {
    constructor(token: string);
}
export declare class JwtTokenInvalid extends Error {
    constructor(token: string);
}
export declare class JwtTokenNotBefore extends Error {
    constructor(token: string);
}
export declare class JwtTokenExpired extends Error {
    constructor(token: string);
}
export declare class JwtTokenSignatureMismatched extends Error {
    constructor(token: string);
}
export declare enum AlgorithmTypes {
    HS256 = "HS256",
    HS384 = "HS384",
    HS512 = "HS512",
    RS256 = "RS256",
    ES256 = "ES256"
}
export interface AlgorithmParams {
    name: string;
    namedCurve?: string;
    hash?: {
        name: string;
    };
}
export declare enum CryptoKeyFormat {
    RAW = "raw",
    PKCS8 = "pkcs8",
    SPKI = "spki",
    JWK = "jwk"
}
export declare enum CryptoKeyUsage {
    Ecrypt = "encrypt",
    Decrypt = "decrypt",
    Sign = "sign",
    Verify = "verify",
    Deriverkey = "deriveKey",
    DeriveBits = "deriveBits",
    WrapKey = "wrapKey",
    UnwrapKey = "unwrapKey"
}
export interface MtlsEndpointAliases {
    token_endpoint?: string;
    userinfo_endpoint?: string;
    revocation_endpoint?: string;
    introspection_endpoint?: string;
    device_authorization_endpoint?: string;
}
//# sourceMappingURL=types.d.ts.map