import*as S from"node:http";import{AsyncLocalStorage as u}from"node:async_hooks";import{Readable as w,Stream as E}from"node:stream";import{pipeline as b}from"node:stream/promises";import{ReadableStream as k}from"node:stream/web";import{getPathPrefix as H}from"../../shared/utils.js";import{SERVER_EDITOR_APP_URL as A}from"../../shared/urls.js";import{logger as m}from"../utils/index.js";const y=new u;globalThis.redoclyCookieStorage=y;function _(n,c=4e3){return new Promise((h,i)=>{const l=S.createServer(async(t,r)=>{const R=t.headers.cookie||"";y.run(R,async()=>{let s;try{const e=new URL(t.url||"",`http://${t.headers.host}`),o=[],d=t.rawHeaders.length;for(let f=0;f<d;f+=2)o.push([t.rawHeaders[f],t.rawHeaders[f+1]]);const a={headers:o,method:t.method};t.method==="GET"||t.method==="HEAD"||(a.body=w.toWeb(t),a.duplex="half");const p=new Request(e.toString(),a);p.context={remoteAddr:{hostname:t.socket.remoteAddress,port:t.socket.remotePort},url:e},s=await n.fetch(p)}catch(e){s=new Response(null,{status:500}),e instanceof Error&&(e.name==="TimeoutError"||e.constructor.name==="TimeoutError"?s=new Response(null,{status:504}):e.code==="ERR_INVALID_URL"&&(s=new Response("Invalid URL",{status:404})),m.error(`Error while handling request: %s
%s`,e.message,e.stack))}r.setHeader("Access-Control-Allow-Origin",A),r.setHeader("Access-Control-Allow-Credentials","true");for(const[e,o]of s.headers||[])try{e==="set-cookie"?r.setHeader(e,s.headers.getSetCookie(e)):r.setHeader(e,o)}catch(d){m.error(`Error while setting header: ${d?.message}`)}if(r.setHeader("Vary","Cookie"),r.statusCode=s.status||500,s.body)try{if(L(s)){const e=new E.Transform({transform(o,d,a){if(r.closed||r.destroyed)return a();r.write(o,d)?process.nextTick(a):r.once("drain",a)},flush(o){if(r.closed||r.destroyed)return o();r.end(),o()}});await b(s.body instanceof k?w.fromWeb(s.body):s.body,e)}else{const e=await s.text();r.setHeader("Content-Length",Buffer.byteLength(e)),r.end(e)}}catch(e){console.error(e);const o=e instanceof Error?e:new Error("unknown error",{cause:e});r.destroy(o)}else r.end()})});l.listen(parseInt(String(c),10)).on("listening",()=>{m.logSticky("server",`  \u{1F310} Preview URL: http://127.0.0.1:${c}${H()}`),h(l)}).on("error",i)})}function L(n){const c=n.headers.get("content-type")||"",h=n.headers.get("x-accel-buffering")||"",i=n.headers.get("content-encoding"),l=n.headers.get("content-length"),t=n.headers.get("transfer-encoding");return i||t||l||/^no$/i.test(h)||!/^(text\/(?!event-stream\b))/i.test(c)}export{_ as startHttpServer};
