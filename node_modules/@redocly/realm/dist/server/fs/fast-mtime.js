import{spawn as h}from"child_process";import w from"path";async function v(a,l){if(!l)return new Map;let r,c;try{const t=await l.revparse(["--show-toplevel"]);r=new Set((await l.raw("ls-files",a)).split(`
`).map(s=>s.trim()));const e=t&&w.relative(t,a);c=e&&e.length&&e.length+1||0}catch(t){if(t.message.includes("not a git repository"))return new Map;throw t}return new Promise(t=>{const e=new Map;let s=0;const o=h("git",["whatchanged","--pretty=%at","--",a],{stdio:"pipe"});let p="";function u(f){p+=String(f);const m=p.split(`
`);p=m.pop()||"",m.forEach(i=>{if(i=i.trim(),!!i){if(i.startsWith(":")){const n=i.split("	").slice(-1)[0].slice(c);if(e.has(n))return;r.has(n)&&r.delete(n),e.set(n,new Date(s*1e3).toISOString())}else s=Number(i);r.size===0&&(o.kill(),t(e))}})}o.stdout.on("data",f=>{u(f)}),o.stdout.on("end",()=>{u(""),o.kill(),t(e)})})}export{v as fastMtime};
