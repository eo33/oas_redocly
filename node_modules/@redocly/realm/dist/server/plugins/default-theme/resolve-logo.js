import r from"node:path";import{isLocalLink as m,slash as c}from"../../../shared/utils.js";import{reporter as p}from"../../utils/reporter/reporter.js";import{copyStaticFile as s}from"../../utils/fs.js";import{resolveSrcSet as f}from"../../utils/resolve-src-set.js";const l=["png","svg","ico"];async function E(e={},i,n,t){const a={...e};if(m(e.image)){const o=e.image.startsWith("/")?t.cwd:i,v=c(r.relative(t.cwd,r.join(o,e.image)));await t.exists(v)?a.image=s(t.cwd,v,n):p.panicOnBuildContentError('Cannot resolve "logo.image": %rp',e.image)}if(e.srcSet&&(a.srcSet=await f(e.srcSet,"logo.srcSet",t,i,n)),m(e.favicon)){const o=c(r.relative(t.cwd,r.join(i,e.favicon)));await t.exists(o)?a.favicon=s(i,e.favicon,n):p.panicOnBuildContentError('Cannot resolve "logo.favicon": %rp',e.favicon)}return a.favicon||(a.favicon=await w(i,n,t)),a}async function w(e,i,n){for(let t of l){const a=`favicon.${t}`,o=c(r.relative(n.cwd,r.join(e,a)));if(await n.exists(o))return s(e,a,i)}}export{E as resolveLogoConfig};
