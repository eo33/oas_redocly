import{SitemapStream as f,streamToPromise as p}from"sitemap";import{Readable as u}from"stream";import{writeFileSync as g}from"fs";import l from"path";import{SITEMAP_FILE_NAME as y}from"../../constants.js";import{canAccessResource as b,logger as d}from"../../utils/index.js";import{ServerRoutes as h}from"../../../shared/constants.js";function R(e){const r=e.versions?.find(i=>i.active);return r?.default||!r?.5:.3}async function L(){return{id:"sitemap",async afterRoutesCreated(e){const{seo:r}=e.getConfig();if(!r?.siteUrl)return;const i=e.getGlobalConfig("rbac"),n=e.getGlobalConfig("requiresLogin"),s=e.getAllRoutes().filter(t=>b(t,{teams:["anonymous"]},i,n)&&!Object.keys(h).includes(t.slug));if(s.length)try{const t=l.join(e.outdir,y),a=new f({hostname:r.siteUrl}),m=s.map(o=>({url:o.slug,priority:R(o)})),c=await p(u.from(m).pipe(a)).then(o=>o.toString());g(t,c),e.hasSitemap=!0}catch(t){d.error(`Error creating sitemap: ${t.message}`)}}}}export{L as sitemapPlugin};
