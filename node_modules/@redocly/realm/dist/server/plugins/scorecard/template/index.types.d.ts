import type { ProblemSummary, ScorecardData } from '../types';
import type { CatalogItem } from '@redocly/theme';
export type SortDetails = {
    property: string;
    direction: 'asc' | 'desc';
};
export type Problem = {
    ruleId: string;
    problems: ProblemSummary[];
    problemsCount: number;
    status: {
        errorsCount: number;
        warningsCount: number;
    };
};
export type Levels = keyof ScorecardData['levels'];
export type RuleProblem = {
    apis: CatalogItem[];
    ruleId: string;
    count: number;
    status: number;
    apisCount: number;
    warningApisCount: number;
    errorApisCount: number;
    teams: Record<string, number>;
    levels: Record<string, {
        errors: number;
        warnings: number;
    }>;
};
export type ProblemsByRule = Record<string, RuleProblem>;
export type TeamStats = {
    team: string;
    below: number;
    minimum: number;
    highest: number;
    levels: Record<string, {
        errors: number;
        warnings: number;
        uniqueErrors: number;
        uniqueWarnings: number;
        apis: number;
    }>;
};
export type StatsByTeam = Record<string, TeamStats>;
export type Data = {
    api: CatalogItem;
    scorecard?: ScorecardData;
};
//# sourceMappingURL=index.types.d.ts.map