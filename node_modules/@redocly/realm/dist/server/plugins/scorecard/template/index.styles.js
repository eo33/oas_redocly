import r from"styled-components";import{Popup as e}from"reactjs-popup";import{Button as t}from"@redocly/theme/components/Button/Button";const c=r.div.attrs({"data-component-name":"Scorecard/Card"})`
  color: var(--text-color-primary);
  background-color: var(--bg-color-raised);
  border-radius: 4px;

  border: 1px solid var(--border-color-primary);
  box-shadow: 0 0 10px 0 rgba(35, 35, 35, 0.05);

  flex: 1;
  min-width: 300px;
  padding: 20px;
`,i=r.h3`
  font-size: 1.2rem;
  font-weight: bold;
  margin-bottom: 10px;
  margin-top: 0;
`,s=r.div`
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: middle;
  margin-bottom: 20px;
`,x=r.div`
  display: flex;
  flex-direction: column;
  gap: 5px;
`,b=r.div`
  display: flex;
  flex-direction: row;
  gap: 10px;

  align-items: center;

  > span:first-child {
    text-align: right;
    width: 100px;
  }
`,a=r.span`
  vertical-align: middle;
  display: inline-block;
`,g=r(a)`
  margin-right: 0;
  text-align: right;
  width: 65px;
`,f=r.div`
  display: flex;
  flex-wrap: wrap;
  gap: 20px;
  margin-bottom: 20px;
`,m=r.span`
  display: inline-block;
  width: 10px;
  height: 10px;
  border-radius: 50%;
  border: 1px solid var(--border-color-primary);
  background-color: var(${o=>o.colorVariable});
  margin-top: 1px;
`,v=r.table`
  width: 100%;
  border-spacing: 0;
  border: 1px solid var(--border-color-primary);
  border-radius: var(--border-radius);
  overflow: auto;

  table-layout: fixed;

  thead th {
    border-bottom: 1px solid var(--border-color-primary);
    padding: 10px 15px;
    background-color: var(--bg-color-raised);

    &:first-child {
      width: 25%;
    }
  }

  tr.toggle {
    cursor: pointer;
  }

  th,
  td {
    padding: 6px 16px;
    text-align: left;
  }

  th:has(${t}),
  td:has(${t}) {
    padding: 2px 4px;
  }

  th {
    font-weight: bold;
    color: var(--text-color-secondary);
    cursor: pointer;
    white-space: nowrap;
  }

  tr.nested-hide {
    display: none;
  }

  th.controls-col {
    width: 20px;
  }
`,u=r.p`
  margin: 16px 0 32px 0;
  font-size: 16px;
  color: var(--text-color-secondary);
`,n=r.div`
  --sidebar-width: var(--catalog-sidebar-width, 300px);

  display: flex;
  flex-direction: row;

  font-weight: var(--font-weight-regular);
  padding: 0;

  color: var(--text-color-secondary);
  font-size: var(--font-size-base);
  font-family: var(--font-family-base);
  line-height: var(--line-height-base);

  hr {
    border: 0;
    width: calc(100% + 48px);
    margin: auto -24px 0 -24px;
    border-top: 1px solid var(--border-color-primary);
  }

  a:not([role='button']) {
    text-decoration: none;
    color: var(--link-color-primary);
    font-weight: var(--link-font-weight);
  }

  @media screen and (max-width: 767px) {
    flex-direction: column;
  }
`,h=r.input`
  border: var(--filter-input-border);
  min-width: var(--filter-input-min-width);
  width: 100%;
  outline: none;
  padding: var(--filter-input-padding);
  border-radius: var(--filter-input-border-radius);
  background-color: var(--filter-input-bg-color);
  color: var(--filter-input-color);
  font-family: var(--filter-input-font-family);
  font-size: var(--filter-input-font-size);
  line-height: var(--filter-input-line-height);

  &::placeholder {
    opacity: var(--filter-input-placeholder-opacity);
    color: var(--filter-input-placeholder-color);
  }

  &:hover {
    color: var(--filter-input-color-hover);
    border: var(--filter-input-border-hover);
  }

  &:focus {
    color: var(--filter-input-color-focus);
    border: var(--filter-input-border-focus);
  }

  &:-webkit-autofill {
    background-color: var(--filter-input-bg-color);
  }
`,y=r.div`
  display: flex;
  flex-direction: row;
  margin-bottom: 10px;
  border-radius: 4px;
  justify-content: flex-start;
`,w=r.div`
  padding: 5px 10px;
  cursor: pointer;
  font-weight: bold;
  background-color: ${({isActive:o})=>o?"var(--bg-color-raised)":"transparent"};
  margin-left: 2px;
  border-bottom: ${({isActive:o})=>o?"1px solid var(--text-color-secondary);":"1px solid transparent"};
`,C=r.div`
  max-width: 100%;
  overflow: auto;
  display: ${({isActive:o})=>o?"block":"none"};
`,k=r(n)`
  padding: 20px 40px;
  display: block;
`,S=r(e)`
  &-content {
    border-radius: var(--border-radius);
    background-color: var(--button-bg-color-secondary-hover);
    padding: 8px;
    font-size: 14px;
  }

  &-arrow {
    path {
      fill: var(--button-bg-color-secondary);
    }
  }
`,j=r.span`
  font-family: monospace;
`,z=r.div`
  width: 100%;
  padding: 0 10px;
  border-left: 2px solid ${o=>o.borderColor||"var(--bg-color-raised)"};
  margin: 5px 0;
`,W=r.div``,T=r.div`
  padding: 5px 10px;
  background: var(--bg-color-raised);
  border-bottom: 1px solid var(--border-color-primary);
`,$=r.pre`
  font-size: 12px;
  margin: 0;
  padding: 10px;
`,I=r.div`
  border: 1px solid var(--border-color-primary);
  border-radius: 3px;
  margin-top: 10px;
  margin-left: 22px;
  cursor: text;
`,P=r.div`
  display: flex;
  flex-direction: row;
  cursor: pointer;
  align-items: center;

  &.expanded {
    align-items: flex-start;
  }

  ${t} {
    margin-right: 10px;
    align-items: flex-start;
  }
`,E=r.th`
  border-bottom: 0 !important;
  span {
    border-bottom: 1px solid var(--border-color-primary);
    text-align: center;
    display: block;
  }
`,B=r(i)`
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  gap: 10px;
`,M=r.div`
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 5px;
  white-space: nowrap;
`,D=r.span`
  font-family:
    'Twemoji Mozilla',
    Apple Color Emoji,
    'Segoe UI Emoji',
    'Noto Color Emoji',
    'EmojiOne Color';
  vertical-align: middle;
`;export{k as AppPageWrapper,b as CardRow,a as CardValue,f as CardsWrapper,u as CatalogDescription,n as CatalogPageWrapper,$ as Code,M as ContentWithDotWrap,m as Dot,D as EmojiWrap,I as FilePreview,g as GaugeNumber,E as GroupTh,P as InstanceControlsWrap,W as InstanceMessage,T as InstanceReference,z as InstanceWrap,B as LevelComplianceCardTitle,w as ModeSwitcherTab,y as ModeSwitcherTabs,x as ProblemsByStatusCardBody,s as ScoreCardStatusCardBody,c as ScorecardCard,i as ScorecardCardTitle,j as SortIcon,h as StyledInput,S as StyledPopup,v as StyledTable,C as TableWrap};
