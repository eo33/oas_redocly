import type { CatalogItem, CatalogConfig, ScorecardConfig } from '@redocly/theme';
import type { Data, TeamStats, RuleProblem } from './index.types';
export declare function useData(props: {
    pageProps: {
        catalogId: string;
        catalogConfig: CatalogConfig;
        scorecardConfig: ScorecardConfig;
        scorecardInfo: {
            levelNames: string[];
            rulesPerLevel: Record<string, string[]>;
            rules: string[];
        };
    };
}): {
    apis: Data[];
    summary: {
        total: number;
        levels: Record<string, number>;
    };
    problemsByStatus: {
        name: string;
        count: {
            errors: number;
            warnings: number;
        };
        uniqueCount: {
            errors: number;
            warnings: number;
        };
    }[];
    totalProblems: number;
    problemsByRule: RuleProblem[];
    sortedStatsByTeam: TeamStats[];
    handleSortRulesTeams: (property: string) => void;
    nonConformantByTeam: TeamStats[];
    filterTerm: string;
    setFilterTerm: (term: string) => void;
    groups: {
        title: string;
        items: CatalogItem[];
    }[];
    filters: import("@redocly/theme").ResolvedFilter[];
    scorecardInfo: {
        levelNames: string[];
        rulesPerLevel: Record<string, string[]>;
        rules: string[];
    };
    catalogConfig: {
        filters: {
            type?: "select" | "checkboxes" | "date-range" | undefined;
            options?: string[] | undefined;
            titleTranslationKey?: string | undefined;
            parentFilter?: string | undefined;
            valuesMapping?: {
                [x: string]: string;
            } | undefined;
            missingCategoryName?: string | undefined;
            missingCategoryNameTranslationKey?: string | undefined;
            title: string;
            property: string;
        }[];
        title?: string | undefined;
        description?: string | undefined;
        groupByFirstFilter?: boolean | undefined;
        filterValuesCasing?: "sentence" | "original" | "lowercase" | "uppercase" | undefined;
        requiredPermission?: string | undefined;
        separateVersions?: boolean | undefined;
        titleTranslationKey?: string | undefined;
        descriptionTranslationKey?: string | undefined;
        items: {
            [x: string]: unknown;
            items?: {
                [x: string]: unknown;
                items?: {
                    [x: string]: unknown;
                }[] | undefined;
                separatorLine?: boolean | undefined;
                linePosition?: "top" | "bottom" | undefined;
                href?: string | undefined;
                label?: string | undefined;
                page?: string | undefined;
                icon?: string | {
                    [x: string]: unknown;
                    srcSet: string;
                } | undefined;
                directory?: string | undefined;
                disconnect?: boolean | undefined;
                group?: string | undefined;
                external?: boolean | undefined;
                labelTranslationKey?: string | undefined;
                groupTranslationKey?: string | undefined;
                separator?: string | undefined;
                version?: string | undefined;
                menuStyle?: "drilldown" | undefined;
                expanded?: "always" | undefined;
                selectFirstItemOnExpand?: boolean | undefined;
                flatten?: boolean | undefined;
                linkedSidebars?: string[] | undefined;
            }[] | undefined;
            separatorLine?: boolean | undefined;
            linePosition?: "top" | "bottom" | undefined;
            href?: string | undefined;
            label?: string | undefined;
            page?: string | undefined;
            icon?: string | {
                [x: string]: unknown;
                srcSet: string;
            } | undefined;
            directory?: string | undefined;
            disconnect?: boolean | undefined;
            group?: string | undefined;
            external?: boolean | undefined;
            labelTranslationKey?: string | undefined;
            groupTranslationKey?: string | undefined;
            separator?: string | undefined;
            version?: string | undefined;
            menuStyle?: "drilldown" | undefined;
            expanded?: "always" | undefined;
            selectFirstItemOnExpand?: boolean | undefined;
            flatten?: boolean | undefined;
            linkedSidebars?: string[] | undefined;
        }[];
        slug: string;
    };
    hasTeam: boolean;
    hasPublishedAt: boolean;
    teamLabel: string;
    teamProperty: string;
};
//# sourceMappingURL=useData.d.ts.map