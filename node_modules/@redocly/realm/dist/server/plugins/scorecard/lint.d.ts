import type { NormalizedProblem, Config } from '@redocly/openapi-core';
import type { LifecycleContext } from '../types';
import type { ExternalResolver } from '../../fs/utils/external-ref-resolver.js';
export declare function lintDefinition(content: {
    relativePath: string;
    content: string;
    parsed: any;
}, config: Config, context: LifecycleContext, externalRefResolver: ExternalResolver): Promise<{
    uniqueErrors: number;
    uniqueWarnings: number;
    problems: ProblemWithCodeframe[];
    errors: number;
    warnings: number;
    ignored: number;
}>;
export declare function getAllRuleNames(configs: Record<string, Config>): {
    perLevel: Record<string, string[]>;
    all: string[];
};
export type ProblemWithCodeframe = Omit<NormalizedProblem, 'location'> & {
    codeframe: string;
    location: {
        source: {
            absoluteRef: string;
        };
        pointer?: string;
    };
};
//# sourceMappingURL=lint.d.ts.map