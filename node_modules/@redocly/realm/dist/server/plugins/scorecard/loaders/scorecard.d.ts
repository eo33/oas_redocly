import type { LifecycleContext } from '../../types.js';
import type { DetailedScorecardData } from '../types.js';
export type ScorecardLoaderResult = {
    levels: DetailedScorecardData['levels'];
    scorecardLevelIdx: number;
    scorecardLevel: string;
};
export declare function scorecardLoader(relativePath: string, context: LifecycleContext): Promise<ScorecardLoaderResult>;
export declare function getTarget<T extends object>(targets: Array<{
    where: {
        metadata: Record<string, string>;
    };
} & T> | undefined, metadata: Record<string, unknown>): ({
    where: {
        metadata: Record<string, string>;
    };
} & T) | undefined;
//# sourceMappingURL=scorecard.d.ts.map