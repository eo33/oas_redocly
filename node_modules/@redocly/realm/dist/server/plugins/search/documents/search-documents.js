import{extractTeamsForSearch as E,getRbacTeamsForSearch as x,logger as l}from"../../../utils/index.js";import{DEFAULT_LOCALE_PLACEHOLDER as _,REDOCLY_ROUTE_RBAC as g,REDOCLY_TEAMS_RBAC as m}from"../../../../shared/constants.js";import{getDocumentTopFacets as w}from"../utils.js";async function P(D,a,f){l.info("Preparing search documents and create indexes...");const F=l.startTiming(),h=a.getConfig().rbac,T=[_,...D.localeFolders.map(s=>s.toLowerCase())];for(const s of T){const v=a.getAllRoutesForLocale(s),i=new Map;for(const e of v){const{product:r}=e,C=await e.getStaticData?.(e,{...a,contentDir:a.contentDir,parseMarkdoc:(...c)=>a.parseMarkdoc(...c)})||{};let n=await e.getSearchDocuments?.(e,{...C,[m]:e[m],[g]:e[g]});const o=e.versions?.find(c=>c.active),L=a.getSearchFacets(),S=x(e,h??{});if(n&&n.length)for(const c in n){let t=n[c];const u=E(t?.[m]),d=u?.length?u:S,R=t.tags||[];t={...t,...o&&{version:o.version,isDefaultVersion:o.default,versionFolderId:o.folderId},...r&&{product:r},rbacTeams:d,tags:[...R,...d,...o?o.default?["v:default"]:[`v:${o.folderId}:${o.version}`]:["v:default"],...r?[`p:${r.name}`]:[]],url:t.url&&(t.path&&t.path.length>1?t.url:t.url.split("#")[0])};const b=w(L,t.facets);for(const p of b){const A=i.get(p)??[];i.set(p,[...A,t])}}}for(const[e,r]of i)await f.addDocuments(e,s,r)}f.cleanupFacetValues(a),l.infoTime(F,"Search indexes created")}export{P as prepareSearchDocuments};
