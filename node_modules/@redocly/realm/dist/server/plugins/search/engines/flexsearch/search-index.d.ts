import type { ExportHandler, IndexOptionsForDocumentSearch } from 'flexsearch';
import type { SearchDocument } from '@redocly/theme';
import type { FlexSearchData, SearchIndex, SearchParameters } from '../../types.js';
import type { SearchResponse } from '../../../../../shared/types';
export declare class FlexSearchIndex implements SearchIndex {
    private _index;
    private _documents;
    private _documentsCounter;
    id: string;
    constructor(id: string, indexConfig: IndexOptionsForDocumentSearch<string>);
    get documents(): MapIterator<[number, SearchDocument]>;
    get documentsCount(): number;
    export(handler: ExportHandler<string | SearchDocument>): Promise<void>;
    import(searchData: FlexSearchData): Promise<void>;
    add(documents: SearchDocument[]): void;
    search(params: SearchParameters): Promise<SearchResponse>;
    private prepareHighlight;
    private hightlight;
    private someMatchesPredicate;
    private innerJoinSearchResults;
    private skipDefaultVersion;
}
//# sourceMappingURL=search-index.d.ts.map