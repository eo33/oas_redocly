import type { SearchDocument, SearchFacet, SearchFacetCount } from '@redocly/theme';
import type { SearchEngine } from '../../types.js';
import type { SearchRequestParams, SearchResponse, FacetCountsRequestParams } from '../../../../../shared/types';
import type { AfterRoutesCreatedActions } from '../../../types.js';
export declare class FlexSearch implements SearchEngine {
    private indexes;
    private indexSchema;
    initIndexSchema(_facets: Map<string, SearchFacet>): Promise<void>;
    private getIndex;
    private createIndex;
    private getTopFacetField;
    addDocuments(group: string, locale: string, documents: SearchDocument[]): void;
    search(params: SearchRequestParams, facets?: Map<string, SearchFacet>): Promise<SearchResponse>;
    export(outDir: string): Promise<void>;
    import(sourceDir: string): Promise<void>;
    countFacets(_params: FacetCountsRequestParams, facets: Map<string, SearchFacet>): Record<string, SearchFacetCount[]>;
    cleanupFacetValues(_actions: AfterRoutesCreatedActions): void;
}
//# sourceMappingURL=index.d.ts.map