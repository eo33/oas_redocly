import x from"flexsearch";import{REDOCLY_TEAMS_RBAC as m}from"../../../../../shared/constants.js";import{HIGHLIGHTED_TEXT_MAX_LENGTH as p,SEARCH_LIMIT as _}from"../../constants.js";class I{_index;_documents=new Map;_documentsCounter=1;id;constructor(t,e){this.id=t,this._index=new x.Document(e)}get documents(){return this._documents.entries()}get documentsCount(){return this._documentsCounter}async export(t){await this._index.export(t)}async import(t){const{documents:e,index:n}=t;this._documents.clear();for(const[s,i]of e)this._documents.set(s,i);for(const[s,i]of Object.entries(n))await this._index.import(s,i)}add(t){t.forEach(e=>{e.tags||(e.tags=[]),this._documents.set(this._documentsCounter,e[m]?e:{...e,[m]:void 0}),this._index.add(this._documentsCounter,e),this._documentsCounter++})}async search(t){const{query:e,offset:n,auth:s,product:i,versions:r}=t,o=[],h=s.teams,a={limit:_,offset:n};let d=new Map,f=await this._index.searchAsync(e,{...a,tag:h});if(i){const c=await this._index.searchAsync(e,{...a,tag:i});f=this.innerJoinSearchResults(f,c)}if(r&&r.length){const c=await this._index.searchAsync(e,{...a,tag:r});f=this.innerJoinSearchResults(f,c)}for(const c of f)for(const u of c.result){const l=d.get(u)?.fields||[];d.set(u,{fields:c.field?[...l,c.field]:[...l]})}let g=0;for(const[c,u]of d.entries()){if(g>=_)break;const l=this._documents.get(c);l&&!this.skipDefaultVersion(l,r)&&(o.push({document:l,highlight:this.prepareHighlight(l,e,u.fields)}),g++)}return{documents:{[this.id]:o},facets:{}}}prepareHighlight(t,e,n){const s={};let i=!1;for(const r of n)if(r==="path")s.path=t.path?t.path.map(o=>this.hightlight(e,o)):[];else if(r.includes("parameters")){const o=r.split(":")[1];if(!i){const h=t.parameters?.find(a=>this.someMatchesPredicate(e,a[o]));h&&(s.parameters=[{name:this.hightlight(e,h.name),description:this.hightlight(e,h.description),place:this.hightlight(e,h.place),path:h.path?h.path.map(a=>this.hightlight(e,a)):[]}]),i=!0}}else s[r]=this.hightlight(e,t[r]);return s}hightlight(t,e){const s=t.split(/\s+/g).reduce((i,r)=>r?i?.replace?.(new RegExp(`(^|\\s)${r}`,"i"),o=>`<mark>${o}</mark>`):i,e);if(!s)return e||"";if(s.length<p)return s;{const i=s.indexOf("<mark>"),r=s.indexOf("</mark>")+7,o=p/2+t.length/2,h=i<o,a=r+o<s.length,d=s.substring(h?0:i-o,a?r+o:s.length);return`${h?"":"..."}${d}${a?"...":""}`}}someMatchesPredicate=(t,e)=>{if(e){const n=t.split(/\s+/g);return Array.isArray(e)?e.some(s=>n.some(i=>s.toLowerCase().includes(i.toLowerCase()))):n.some(s=>e.toLowerCase().includes(s.toLowerCase()))}else return!1};innerJoinSearchResults(t,e){const n=[];for(const s of t){const i=[];for(const r of e)for(const o of s.result){const h=r.result.find(a=>a===o);h&&i.push(h)}i.length&&n.push({result:i,field:s.field})}return n}skipDefaultVersion(t,e){return!!(e&&e.length&&t.isDefaultVersion&&t.versionFolderId&&t.version&&e.some(n=>n.includes(t.versionFolderId??""))&&!e.some(n=>n.includes(t.version??"")))}}export{I as FlexSearchIndex};
