import{writeFile as T,rm as R}from"node:fs/promises";import P from"fs";import d from"node:path";import{Client as I}from"typesense";import{isBuildMode as v}from"../../../../utils/is-build-mode.js";import{isDevelopMode as l}from"../../../../utils/is-develop-mode.js";import{ensureDir as E,logger as y}from"../../../../utils/index.js";import{BASE_SEARCH_DOCUMENT as D,DEFAULT_ORGANIZATION_ID as C,DEFAULT_PROJECT_ID as b,DEFAULT_TYPESENSE_API_KEY as O,DEFAULT_TYPESENSE_API_URL as $,HIGHLIGHTED_TEXT_MAX_LENGTH as F,SEARCH_DATA_EXPORT_FOLDER as u,SEARCH_GROUP_LIMIT as N,SEARCH_MAX_FACET_VALUES as S,SEARCH_PRODUCT_FIELD as A,SEARCH_RBAC_FIELD as m,SEARCH_VERSION_FIELD as L}from"../../constants.js";class K{client=null;collectionAliasPrefix="";schemaFields=[{name:"title",type:"string",facet:!1,optional:!0},{name:"text",type:"string",facet:!1,optional:!0},{name:"path",type:"string[]",facet:!1,optional:!0},{name:"parameters",type:"object[]",facet:!1,optional:!0},{name:A,type:"string",facet:!0,optional:!0},{name:m,type:"string[]",facet:!0}];documents=new Map;envs={ORGANIZATION_ID:process.env.ORGANIZATION_ID||(l()?C:""),PROJECT_ID:process.env.PROJECT_ID||(l()?b:""),TYPESENSE_API_URL:process.env.TYPESENSE_API_URL||(l()?$:""),TYPESENSE_API_KEY:process.env.TYPESENSE_API_KEY||(l()?O:"")};constructor(){if(!v()){for(const[e,t]of Object.entries(this.envs))t||y.panic(`Cannot initialize search index. ${e} is not set`);this.collectionAliasPrefix=`${this.envs.ORGANIZATION_ID}_${this.envs.PROJECT_ID}_`,this.client=new I({nodes:[{url:this.envs.TYPESENSE_API_URL}],apiKey:this.envs.TYPESENSE_API_KEY,connectionTimeoutSeconds:5})}}async initIndexSchema(e){this.transformFacetsToSchemaFields(e),l()&&await this.dropAllCollections()}async addDocuments(e,t,r){if(r.push(D),l()){if(r.length){await this.createCollection(t);try{const i=r.map(s=>({url:s.url,title:s.title,text:s.text,path:s.path,httpMethod:s.httpMethod,httpPath:s.httpPath,parameters:s.parameters,[A]:s.product?s.product.name:"",[m]:s.rbacTeams??[],...s.facets}));await this.client?.collections(t).documents().import(i)}catch(i){if(i.importResults)for(const s of i.importResults)s.success===!1&&y.error(`Error adding document to collection: ${t}: ${s.error}`)}}}else{const i=this.documents.get(t)??[];this.documents.set(t,[...i,...r])}}async search(e){const{query:t,locale:r,filter:i,loadMore:s,auth:a}=e,o=l()?r:this.getCollectionAlias(r),n={collection:o,q:t||"*",query_by:this.getQueryFields(),max_facet_values:S};if(this.client)if(s){const{groupKey:h,offset:c}=s,f={offset:c,filter_by:this.getFilterString(a,i),facet_by:"*"};return this.prepareSingleSearchResult(await this.client.collections(o).documents().search({...n,...f}),h)}else{const c=[{group_by:this.getTopFields(),group_limit:N,filter_by:this.getFilterString(a,i)},...this.getSearchesByFacets(a,i)];return this.prepareMultiSearchResult(await this.client?.multiSearch.perform({searches:c},n),i)}else return{facets:{},documents:{}}}prepareSingleSearchResult(e,t){const r={facets:{},documents:{[t]:[]}};if(e.hits&&e.hits.length)for(const i of e.hits)r.documents[t].push({document:i.document,highlight:this.prepareHighlight(i)});return r}prepareMultiSearchResult(e,t){const r={facets:{},documents:{}};for(const i of this.getTopFacetsFilterValues(t))r.documents[i]=[];for(const i of e.results){if(i.facet_counts&&i.facet_counts.length)for(const s of i.facet_counts)r.facets[s.field_name]=s.counts.map(a=>({value:a.value,count:a.count}));if(i.grouped_hits&&i.grouped_hits.length)for(const s of i.grouped_hits){const a=s.group_key[0],o=[];for(const n of s.hits)o.push({document:n.document,highlight:this.prepareHighlight(n)});r.documents[a]=o}}return r}prepareHighlight(e){const t={},r=[];for(const[i,s]of Object.entries(e.highlight??{}))if(Array.isArray(s)){if(i==="path"){const a=s,o=[];for(const n of a)o.push(n.snippet);t.path=o}else if(i==="parameters"){const a=s;for(const o of a){let n=!1;for(const[h,c]of Object.entries(o))if(Array.isArray(c))for(const f of c)f.matched_tokens?.length&&(n=!0);else c.matched_tokens?.length&&(n=!0);if(n){const h={name:o.name?.snippet||"",description:o.description?.snippet||"",place:o.place?.snippet||"",path:o.path?.map(c=>c?.snippet)||[]};t.parameters=[h];break}}}}else t[i]=s.snippet,r.push(i);for(const[i,s]of Object.entries(e.document))!r.includes(i)&&typeof s=="string"&&(t[i]=s.length>F?`${s.substring(0,F)}...`:s);return t.parameters||(t.parameters=[]),t}async export(e){P.existsSync(`${e}/${u}`)&&await R(`${e}/${u}`,{recursive:!0});const t=E(d.join(e,u));for(const[r,i]of this.documents){const s=E(d.join(t,`${r}.json`)),a={documents:i,schemaFields:this.schemaFields};await T(s,JSON.stringify(a),"utf-8")}}async import(e){}async countFacets(e,t){const{locale:r,query:i,facetQuery:s,filter:a,field:o,auth:n}=e,h=l()?r:this.getCollectionAlias(r),c={q:i||"*",query_by:this.getQueryFields(),facet_by:"*",facet_query:this.getFacetQueryString(s,o),filter_by:this.getFilterString(n,a,o),max_facet_values:S};if(this.client){const f={},p=await this.client.collections(h).documents().search(c);if(p.facet_counts&&p.facet_counts.length)for(const g of p.facet_counts)f[g.field_name]=g.counts.map(_=>({value:_.value,count:_.count,isCounterVisible:!!i||(a?.length||0)>0}));return f}else return{}}getCollectionAlias(e){return`${this.collectionAliasPrefix}${e}`}async createCollection(e){const t=await this.client?.collections().retrieve();t&&t.length&&t.find(r=>r.name===e)||await this.client?.collections().create({name:e,fields:this.schemaFields,enable_nested_fields:!0})}async dropAllCollections(){const e=await this.client?.collections().retrieve();for(const t of e??[])await this.client?.collections(t.name).delete()}transformFacetsToSchemaFields(e){for(const[t,r]of e)this.schemaFields.find(i=>i.name===t)||this.schemaFields.push({name:t,type:"string",facet:!0,optional:!0,isTop:r.isTop})}getQueryFields(){return this.schemaFields.filter(e=>!e.facet).map(e=>e.name).join(",")}getTopFields(){return this.schemaFields.filter(e=>e.facet&&e.isTop).map(e=>e.name).join(",")}getFilterString(e,t,r){const i=`${m}:[${e.teams.map(s=>`'${s}'`).join(", ")}]`;if(t&&t.length){const s=t.filter(a=>a.field!==r&&a.field!==L).map(a=>{const o=a.values.map(n=>`'${n}'`);return o.length?`${a.field}:[${o.join(", ")}]`:""}).join(" && ");return s?`${i} && ${s}`:i}else return i}getFacetQueryString(e,t){return e&&t?`${t}:${e}`:""}getTopFacetsFilterValues(e){const t=[];if(e&&e.length)for(const r of e)r.isTop&&t.push(...r.values);return t}getSearchesByFacets(e,t){const r=[],i=this.schemaFields.filter(s=>s.facet);for(const s of i){const a={facet_by:s.name,filter_by:this.getFilterString(e,t,s.name)};r.push(a)}return r}cleanupFacetValues(e){const t=e.getSearchFacets();t.forEach(r=>{r.values=[]}),e.setSearchFacets(t)}}export{K as Typesense};
