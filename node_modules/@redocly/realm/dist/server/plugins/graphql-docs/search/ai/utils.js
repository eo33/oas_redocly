import{GraphQLEnumType as y,GraphQLInputObjectType as g,GraphQLInterfaceType as $,GraphQLList as T,GraphQLNonNull as b,GraphQLObjectType as h,GraphQLScalarType as L,GraphQLUnionType as G}from"graphql";function F(i,r,s){const e=s.toLowerCase(),{label:n}=i;switch(e){case"queries":const t=r.getQueryField(n);return{name:t?.name,group:e,description:t?.description||void 0,response:t?a(t.type):void 0,args:u(t?.args)};case"mutations":const p=r.getMutationField(n);return{name:p?.name,group:e,description:p?.description||void 0,response:p?a(p.type):void 0,args:u(p?.args)};case"subscriptions":const c=r.getSubscriptionField(n);return{name:c?.name,group:e,description:c?.description||void 0,response:c?a(c.type):void 0,args:u(c?.args)};case"directives":const o=r.getDirective(n);return{name:o?.name,group:e,description:o?.description||void 0,locations:o?.locations.map(d=>d.toString()),isRepeatable:!!o?.isRepeatable,args:u(o?.args)};case"objects":case"interfaces":case"unions":case"enums":case"inputs":case"scalars":return}}function a(i,r=1,s=[]){const{type:e,list:n,notNull:t}=l(i),p=e.toString();if(s.includes(p)||s.length>=r)return p;if(e instanceof h)return{name:e.name,description:e.description||void 0,fields:f(e.getFields(),r,[...s,p])};if(e instanceof $)return{name:e.name,description:e.description||void 0,list:n,notNull:t,fields:f(e.getFields(),r,[...s,p])};if(e instanceof G)return{name:e.name,description:e.description||void 0,list:n,notNull:t,types:e.getTypes().map(c=>c.name)};if(e instanceof y){const c=e.getValues().map(o=>({name:o.name,description:o.description||void 0,value:o.value}));return{name:e.name,description:e.description||void 0,list:n,notNull:t,values:c}}else{if(e instanceof L)return p;if(e instanceof g)return{name:e.name,description:e.description||void 0,list:n,notNull:t,fields:f(e.getFields(),r,[...s,p])}}}function u(i,r=3){if(!i)return;const s={};return i.forEach(e=>{s[e.name]={type:a(e.type,r),description:e.description}}),s}function f(i,r,s){if(!i)return;const e={};return Object.entries(i).forEach(([n,t])=>{e[n]={type:a(t.type,r,s),description:t.description,defaultValue:t.defaultValue}}),e}function l(i){return i instanceof b?{type:l(i.ofType).type,notNull:!0}:i instanceof T?{type:l(i.ofType).type,list:!0}:{type:i}}function j(i){const{name:r,group:s,description:e,args:n,response:t,locations:p,isRepeatable:c}=i;let o=`# ${r}

**Type:** GraphQL ${s}

**Description:**
${e}

`;return o+=n?`## Arguments
${m(n)}

`:"",t&&(typeof t=="string"?o+=`## Response
**Type:** ${t}
`:(o+=`## Response
**Type:** ${t.name}
**Description:**
${t.description}

`,o+=t.fields?`### Fields
${m(t.fields)}
`:"")),o+=c?`## Repeatable
`:"",o+=p?`##Locations
${p.map(d=>`- ${d}`).join(`
`)}
`:"",o}function m(i,r=0){const s="  ".repeat(r);return i?Object.entries(i).map(([e,n])=>typeof n.type=="string"?`${s}- ${e} (${n.type}): ${n.description}`:`${s}- ${e} (${n.type.name}${n.type.notNull?", Not Null":""}): ${n.description}
${m(n.type.fields,r+1)}`).join(`
`):""}export{j as convertDocumentToMarkdown,F as getSearchDocument};
