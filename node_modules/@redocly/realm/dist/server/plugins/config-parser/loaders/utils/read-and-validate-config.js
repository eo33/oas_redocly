import w from"path";import{lintConfig as R,loadConfig as T}from"@redocly/openapi-core";import{createConfigTypes as x}from"@redocly/openapi-core/lib/types/redocly-yaml.js";import{safeParsePartial as E}from"../../safe-parse.js";import{formatConfigProblem as M}from"../../format-error.js";import{logger as c,readEnvVariable as j}from"../../../../utils/index.js";import{deepMerge as $}from"../../../../../shared/jsUtils.js";import{ExternalResolver as k}from"../../../../fs/utils/external-ref-resolver.js";import{resolveMutuallyExclusiveProps as A}from"../../resolve-mutual-exclusion.js";async function F(e,t,o,s){const y=(await t.getFileInfo(e))?.realRelativePath||e;async function C(){const a=new k(t);let r,u,i={};const b=w.join(t.cwd,y),h=await T({configPath:b,externalRefResolver:a,processRawConfig:l=>{i=l.parsed,r=l.document,u=l.resolvedRefMap}}),g=await s(i);if(g===void 0)return i;const v=[...r?.source?await R({config:h,document:{parsed:i,source:r.source},resolvedRefMap:u,externalConfigTypes:x(g,h)}):[],...r?.source?A(i,r?.source):[]];if(v.length>0)for(const l of v)o(new Error(M(l,t.cwd)));return i}const m=await t.exists(e)?await C():{},P=D(m),f=await s(m);let p=f?E(f,m):m;const{env:d}=p;if(d){const a=j("REDOCLY_ENV")||"development",r=d[a]||{};p=$(p,r)}const n=I(p,P);if(n.imports&&n.imports.length>0){c.warn("The 'imports' property is deprecated. Please use 'plugins' property instead.");const a=new Set([...n.plugins||[],...n.imports.map(r=>w.posix.join(r,"plugin.js"))]);n.plugins=Array.from(a),delete n.imports}return n}function D(e){if(!e.theme)return[];c.warn("The 'theme' property in redocly.yaml is deprecated. Please move all of the properties from 'theme' to the root of the config.");const t=[];for(const o of Object.keys(e.theme))e[o]==null?t.push(o):c.warn(`Detected both '${o}' and 'theme.${o}' properties in redocly.yaml. The 'theme.${o}' property will be ignored and needs to be removed or merged into the '${o}'.`);return t}function I(e,t){if(!e.theme||t.length===0)return e;const o={...e};for(const s of t)o[s]=e.theme[s];return delete o.theme,o}export{F as readAndValidateConfig};
