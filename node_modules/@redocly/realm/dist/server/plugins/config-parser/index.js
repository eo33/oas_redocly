import b from"path";import{REDOCLY_ROUTE_RBAC as f,REDOCLY_TEAMS_RBAC as C}from"../../../shared/constants.js";import{deepMerge as y}from"../../../shared/jsUtils.js";import{formatCustomScripts as l,formatCustomLinks as v}from"./format-custom-tags.js";import{isDevelopMode as D}from"../../utils/is-develop-mode.js";import{applyL10nToRbacConfig as R,resolveDirectoryHashes as P}from"../../utils/rbac.js";import{copySeoAssets as S}from"./copy-seo-assets.js";import{resolveRbacConfig as A}from"./resolve-rbac-config.js";import{normalizeRedirectSources as L}from"./normalize-redirect-sources.js";import{DEFAULT_LOADERS as O}from"./loaders/index.js";import{initializeSearchFacets as E}from"./search-facets.js";async function z(){return{id:"Config Parser",loaders:O,async processContent(e,{getConfig:c,fs:s}){const{contentDir:r,setGlobalConfig:t,setGlobalData:i,setSearchFacets:m,getSearchFacets:a}=e,o=await c(),n={outdir:e.outdir,contentDir:r},d=l(o.scripts?.head,n),g=v(o.links,n),p=l(o.scripts?.body,n),u=y(o,{headScriptTags:d,linkTags:g,postBodyScriptTags:p});t({...u,requiresLogin:!!o.requiresLogin,rbac:R(s,A(o.rbac||{})),directoryPaths:await P(s,o.rbac),seo:o.seo&&S(o.seo,n.contentDir,n.outdir),redirects:o.redirects&&L(o.redirects)}),e.loadEnvConfig(D());const h=E(o.search?.facets||[],a);m(h),i({removeAttribution:!!o.removeAttribution,hasDeveloperOnboarding:!!o.developerOnboarding})},async afterRoutesCreated(e){const c=e.getGlobalConfig("rbac"),s=e.getGlobalConfig("directoryPaths");if(!(!c||Object.keys(c).length===0))for(const r of e.getAllRoutes()){if(r.versions&&s)for(const t of r.versions){const i=s[t.folderId],a=i==="."||i==="/"?"":i;t[f]={slug:t.link,fsPath:b.posix.join(a,"@"+t.version,"index.md")}}r[f]||r[C]||(r[f]={slug:r.slug,fsPath:r.fsPath})}}}}export{z as configParserPlugin};
