import L from"path";import{defaultTranslations as h}from"../../../shared/l10n/default-translations.js";import{DEFAULT_LOCALE_PLACEHOLDER as f}from"../../../shared/constants.js";import{Feature as w}from"../../entitlements/entitlements.types.js";import{EntitlementsProvider as A}from"../../entitlements/entitlements-provider.js";import{logger as d,reporter as g}from"../../utils/index.js";import{I18N_DIR_NAME as y,L10N_DIR_NAME as E,TRANSLATIONS_FILE_NAME as F}from"../../constants.js";import{isL10nPath as I}from"../../fs/utils/is-l10n-path.js";import{isOpenapiDoc as P}from"../openapi-docs/is-openapi-doc.js";async function k(){return{id:"l10n",async processContent(n,a){const{fs:i,cache:t,getConfig:l}=a,e={},r=A.instance(),c=await l(),s=c.l10n?.defaultLocale||f;if(r.canAccessFeature(w.L10n)){await _(a);for(const{relativePath:o}of await i.scan(/(^|.*[\/\\])translations\.yaml$/)){const p=await t.load(o,"yaml"),u=O(o)||s;e[u]={translation:p.data}}}e[s]={translation:{...h,...e[s]?.translation}};const m=c.l10n?.locales||[f,...i.localeFolders].map(o=>({code:o.toLowerCase(),name:o}));n.setGlobalData({l10n:{translations:e,defaultLocale:s,locales:m.map(o=>({code:o.code,name:o.name||o.code}))}})}}}function O(n){return n.indexOf("/")>0?n.split("/")[1]:void 0}async function _(n){const a=await n.fs.scan();for(const{isVirtual:i,realRelativePath:t}of a){if(i)continue;if(I(t)&&t.endsWith(".page.tsx")&&g.panicOnBuild(`The file %rp is not allowed in ${E} or ${y} folders`,t),L.posix.basename(t)===F){const e=/^(?:@(i18n|l10n)[\/\\][^\/\\]+[\/\\])?translations\.yaml$/.test(t),r=await P(t,n);!e&&!r&&d.warn("The file %rp is in the wrong location. Make sure it is located in the root directory or in the locale root directory.",t),e&&r&&d.warn("It looks like the file %rp might be an OpenAPI definition and is located in a location reserved for translation files. Please rename it or move to another directory if it is not a translations file",t)}}}export{k as l10nPlugin};
