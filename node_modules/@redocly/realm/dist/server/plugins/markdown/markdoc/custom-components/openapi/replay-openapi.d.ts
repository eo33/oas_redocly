import React from 'react';
import type { OpenAPIParameterLocation } from '@redocly/openapi-docs';
export type ServerOverrideValue = string | {
    default: string;
    enum: string[];
};
export type ServerOverrides = Record<string, ServerOverrideValue>;
export type RequestAndResponseType = {
    request: Record<string, unknown>;
};
export type OperationParameters = Partial<Record<OpenAPIParameterLocation, object>>;
export interface OperationIdentifier {
    operationId?: string;
    pointer?: string;
}
export interface ReplayOpenApiProps extends OperationIdentifier {
    descriptionFile?: string;
    operationId?: string;
    pointer?: string;
    operation?: {
        path: string;
        method: string;
    };
    exampleKey?: string;
    mimeType?: string;
    parameters?: Record<OpenAPIParameterLocation, object>;
    requestBody?: any;
    options?: any;
    environment?: string;
    environments?: Record<string, Record<string, string>>;
}
export declare const ReplayOpenApi: (props: ReplayOpenApiProps) => React.JSX.Element;
//# sourceMappingURL=replay-openapi.d.ts.map