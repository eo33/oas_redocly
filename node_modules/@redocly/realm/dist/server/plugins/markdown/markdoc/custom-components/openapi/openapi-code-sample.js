import*as o from"react";import{StoreProvider as y,RequestSamples as E}from"@redocly/openapi-docs";import{ErrorMessage as M,OpenApiComponentWrap as O}from"../styled.elements";import{useStore as b}from"../../hooks/use-store";import{getOperation as C}from"./get-operation/index";import{getMockServerDocsConfig as k}from"../../../../openapi-docs/template/mock-server-config.js";function P(d){const{descriptionFile:f,operationId:a,pointer:m,exampleKey:s,mimeType:l,language:r,requestBody:g,parameters:S,options:u,environment:t,environments:n}=d,{store:e,error:v,baseSlug:c}=b(f),i=o.useMemo(()=>({...e?.options,...u,...(r||null)&&{codeSamples:{languages:[{lang:r}]},mockServer:k(e?.options?.mockServer,c||"")}}),[r,u,e?.options,c]),p=o.useMemo(()=>{if(e)return C(e,{operationId:a,pointer:m},i,{exampleKey:s,mimeType:l,environments:n,environment:t})},[s,i,l,a,m,e,n,t]);return e?p?o.createElement(O,null,o.createElement(y,{options:i,definition:e.definition,withState:{environments:n,environment:t,operation:{pointer:p.pointer,state:{requestValues:{body:g,...S}}}}},o.createElement(E,{operation:p,disableFooter:!0}))):o.createElement("pre",{style:{color:"red"}},"Can not find OpeAPI operation by operationId or pointer"):o.createElement(M,null,v)}export{P as OpenApiCodeSample};
