import c from"node:path";import{reporter as m}from"../../../utils/index.js";import{formatMarkdocError as v}from"../errors.js";import{isPartial as R}from"../is-partial.js";import{slash as _}from"../../../../shared/utils.js";const $=/\{\% ?raw-partial file="([^"]+)" ?\/?\%\}/gm,E=async(a,o,p=[],t,s=[o])=>{const i=[],f=a.replace($,(l,e)=>(i.push(u(l,e)),"_$redocly$"+(i.length-1)+"$")),w=await Promise.all(i);return f.replace(/_\$redocly\$(\d+)\$/g,(l,e)=>w[+e]);async function u(l,e){const r=e.startsWith("/")?e.slice(1):_(c.relative(t.fs.cwd,c.resolve(t.fs.cwd,c.dirname(o),e)));if(s.includes(r)){const n=[...s,r];return m.panicOnBuildContentError(`Circular reference chain detected when processing raw partials: ${n.map(()=>"%rp").join(" -> ")}`,...n),""}const d=!await t.fs.exists(r),g=!r.endsWith(".md")||await t.isPathIgnored(r)||!R(r,p);if(d||g){const k={type:"resolve_link",lines:[1,a.split(`
`).length],meta:{rawLink:e,link:r},error:{id:"error",level:"error",message:d?"Raw partial file does not exist":"Could not resolve raw partial. Starting with 0.73.0 version all partials should be placed in partials folders"}};return m.reportMarkdocProblem(v(k,o,a)),""}const h=await t.cache.load(r,"markdown-frontmatter");return await E(h.data.content,r,p,t,[...s,r])}};export{E as resolveRawPartials};
