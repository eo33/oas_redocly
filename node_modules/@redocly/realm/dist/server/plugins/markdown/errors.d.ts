import type { NormalizedProblem } from '@redocly/openapi-core';
import type { ValidateError, LocationEdge } from '@markdoc/markdoc';
import type { MarkdocError, BrokenLinkType } from '../../../shared/types';
export type ValidateErrorWithMeta = ValidateError & {
    meta?: {
        rawLink: string;
        link?: string;
        title?: string;
        brokenLinkType?: BrokenLinkType;
    };
};
export type NormalizedLocation = {
    start: Required<LocationEdge>;
    end: Required<LocationEdge>;
    lines: string[];
};
export declare function formatMarkdocError(error: ValidateErrorWithMeta, relativePath: string, sourceContent: string): MarkdocError;
/**
 * Normalizes markdoc error:
 * - fixes location indexes to be 1-based instead of 0 based
 * - for some errors, tries to infer specific character as characters are not supplid for every markdown it node.
 */
export declare function normalizeErrorLocation(error: ValidateErrorWithMeta, source: string): NormalizedLocation;
export declare function formatBundleFromMarkdocError(error: NormalizedProblem, relativePath: string, contentDir: string): string;
export declare function isMarkdocError(error: Error | MarkdocError): error is MarkdocError;
//# sourceMappingURL=errors.d.ts.map