import u from"path";import{reporter as S}from"../../utils/reporter/reporter.js";import{extractMdFirstHeading as y,getAst as b}from"./compiler.js";import{getTemplatePath as g}from"./get-template-path.js";import{prepareMarkdocPartials as F}from"./markdoc/partials.js";import{searchResolver as R}from"./search/search-resolver.js";import{markdownStaticDataLoader as D}from"./markdown-static-data-loader.js";import{makeErrorRoute as C}from"../error-route.js";import{REDOCLY_TEAMS_RBAC as E}from"../../../shared/constants.js";import{validateRbacConfig as M}from"../validate-rbac-config.js";import{resolveSidebarId as T}from"../sidebars/index.js";import{resolveFrontmatterSlugs as I}from"../utils.js";import{Feature as A}from"../../entitlements/entitlements.types.js";import{isPartial as j}from"./is-partial.js";import{markdownFrontmatterLoader as G}from"./markdown-frontmatter-loader.js";import{resolveRawPartials as L}from"./markdoc/resolve-raw-partials.js";import{getAiSearchDocuments as O}from"./search/get-ai-search-documents.js";async function ee(w){return{id:"markdoc",requiredEntitlements:[A.Markdown],loaders:{"markdown-frontmatter":G,"markdown-ast":async(t,r)=>{const m=await r.fs.read(t),d=await r.getConfig(),n=await L(m,t,d?.markdown?.partialsFolders,r);return b(t,n)}},processContent:async(t,r)=>{const{markdown:m}=await r.getConfig(),d=m?.partialsFolders??[],n=t.createTemplate("markdown","@redocly/theme/core/templates/Markdown"),h=t.registerServerPropsGetter("markdown",g("./get-server-props.js"));t.createTemplate("error",g("../../../client/app/Error/ErrorDetails.js"));for(const o of await r.fs.scan(/\.md$/))if(!await r.isPathIgnored(o.relativePath)&&!j(o.relativePath,d))try{await k(o)}catch(a){t.addRoute(C(o.relativePath,a)),S.panicOnBuild("Failed to create route for markdown file: %s",a.message)}async function k(o){const{relativePath:a,realRelativePath:v}=o,{data:{frontmatter:e}}=await r.cache.load(a,"markdown-frontmatter"),P=e?.metadata||{},p=I(e?.slug,a);let l=null;e?.sidebar&&typeof e?.sidebar!="object"&&(l=await T(a,e.sidebar,r.fs));let f=n;if(e?.template){const c=e.template.startsWith("./")||e.template.startsWith("../");let i=e.template;if(c){const s=u.posix.dirname(v);i=u.resolve(w.contentDir,s,e.template)}f=t.createTemplate(e.template,i)}e?.rbac&&M({content:{[a]:e.rbac}}),(p.length?p.reverse():[void 0]).forEach(c=>{t.addRoute({slug:c,fsPath:a,templateId:f,sharedData:l?[{id:l,key:"sidebar"}]:void 0,redirectFrom:Object.entries(e.redirects||{}).map(([i,{type:s}])=>({type:s||301,from:i})),[E]:e?.rbac,getNavText:async()=>(e?.seo?.title||await y(a,r)||"").toString(),metadata:{type:"markdown",...P},async getStaticData(i,s){return D(o,i,r,e,s)},getSearchDocuments:R(e,a,t.getSearchFacets,t.setSearchFacets),getAiSearchDocuments:O(t.getSearchFacets),serverPropsGetterIds:[h]})})}},afterRoutesCreated:async(t,r)=>{await F(r,t)}}}export{ee as markdownPlugin};
