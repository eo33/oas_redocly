import type { Store } from '../store';
import type { LifecyclePluginInstance, PluginOptions, LifecycleContext, LifecyclePluginCreator } from './types';
import { Cache } from '../fs/cache.js';
import { ContentFs } from '../fs/content-fs.js';
export declare const INTERNAL_PLUGINS: LifecyclePluginCreator[];
export declare function initPlugins(options: PluginOptions, internalPlugins?: LifecyclePluginCreator[]): Promise<{
    pluginInstances: LifecyclePluginInstance[];
    lifecycleContext: LifecycleContext;
}>;
export declare function writeClientEntries(store: Store): void;
export declare function runPlugins(pluginInstances: LifecyclePluginInstance[], store: Store, context: LifecycleContext, options?: {
    failFast?: boolean;
}): Promise<void>;
export declare function createLifecycleContext(fs: ContentFs, cache: Cache): LifecycleContext;
//# sourceMappingURL=lifecycle.d.ts.map