import type { IMenuItem } from '@redocly/openapi-docs';
import type { ItemBadge } from '@redocly/config';
import type { NavItem, ResolvedNavItem } from '../../../shared/types';
export interface IMenuItemExtended extends IMenuItem {
    httpVerb?: string;
    isWebhook?: boolean;
    badges?: ItemBadge[];
}
export declare function convertOpenAPIDocs2Sidebar(data: {
    contentItems: IMenuItemExtended[];
    sidebarItems: ResolvedNavItem[];
    routeSlug: string;
    navItem?: NavItem;
}): void;
export declare function shouldAddRoute({ item }: {
    item: IMenuItem;
}): boolean;
export declare const removeMarkdownLinks: (text: string | Record<string, any>) => any;
export declare function normalizeFeedbackOptions(feedbackOptions: Record<string, any> | null | undefined): Record<string, any> | undefined;
//# sourceMappingURL=utils.d.ts.map