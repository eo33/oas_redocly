import * as yamlAst from 'yaml-ast-parser';
import type { Source } from '@redocly/openapi-core';
type YAMLMapping = yamlAst.YAMLMapping & {
    kind: yamlAst.Kind.MAPPING;
};
type YAMLMap = yamlAst.YamlMap & {
    kind: yamlAst.Kind.MAP;
};
type YAMLAnchorReference = yamlAst.YAMLAnchorReference & {
    kind: yamlAst.Kind.ANCHOR_REF;
};
type YAMLSequence = yamlAst.YAMLSequence & {
    kind: yamlAst.Kind.SEQ;
};
type YAMLScalar = yamlAst.YAMLScalar & {
    kind: yamlAst.Kind.SCALAR;
};
type YAMLNode = YAMLMapping | YAMLMap | YAMLAnchorReference | YAMLSequence | YAMLScalar;
export declare const getRoutesByLines: (lines: Array<number>, source: Source, routesMapping: Record<string, string>, baseSlug: string) => string[];
export declare const getRoutesByLine: (line: number, source: Source, routesMapping: Record<string, string>) => string[];
export declare const getPointerUsed: (pointer: string, source: Source, filter: (pointer: string) => string | null, walked?: Set<string>, trace?: Array<string>) => Array<{
    pointer: string;
    trace: string[];
}>;
export declare const getRoutesWhereUsed: (pointers: Array<{
    pointer: string;
    trace: string[];
}>, routesMapping: Record<string, string>) => string[];
export declare const getStartPositionByLine: (line: number, source: Source) => number;
export declare const getPointerByLine: (line: number, source: Source, deep?: number) => string;
export declare const getPointerByStartPosition: (startPosition: number, source: Source, deep?: number) => string;
export declare const getAstNodeByStartPosition: (node: YAMLNode, startPosition: number, deep: number, nodePath?: Array<string | number>) => {
    node: YAMLNode;
    nodePath: Array<string | number>;
};
export declare function getChildNodes(node?: yamlAst.YAMLNode | null): yamlAst.YAMLNode[];
export declare function getPointerPosition(pointer: string, source: Source): {
    start: {
        lineNumber: number;
        column: number;
    };
    end: {
        lineNumber: number;
        column: number;
    } | undefined;
};
export {};
//# sourceMappingURL=ast-utils.d.ts.map