import type { SearchFacet } from '@redocly/theme';
import type { ContentItemModel, OpenAPIParser, Options } from '@redocly/openapi-docs';
import type { PageRouteDetails } from '../../types';
export declare function searchResolver(parser: OpenAPIParser, options: Options, flatItems: ContentItemModel[], getSearchFacets: () => Map<string, SearchFacet>, setSearchFacets: (searchFacets: Map<string, SearchFacet>) => void, excludeFromSearch?: boolean): (route: PageRouteDetails) => Promise<{
    "redocly::teams-rbac": {
        [x: string]: string;
    } | undefined;
    "redocly::route-rbac": {
        slug?: string;
        fsPath?: string;
    };
    facets: {
        [key: string]: string;
    };
    id: string;
    url: string;
    title: string | string[];
    text: string | string[];
    path?: string[];
    httpMethod?: string;
    httpPath?: string | string[];
    deprecated?: boolean;
    parameters?: import("@redocly/theme").OperationParameter[];
    metadata?: Record<string, any>;
    version?: string;
    versionFolderId?: string;
    isDefaultVersion?: boolean;
    product?: import("@redocly/config").ProductConfig;
    badges?: import("@redocly/config").ItemBadge[];
    tags?: string[];
    rbacTeams?: string[];
}[]>;
//# sourceMappingURL=search-resolver.d.ts.map