import{writeFileSync as m}from"node:fs";import d from"path";import{EntitlementsProvider as g}from"../../entitlements/entitlements-provider.js";import{Feature as s}from"../../entitlements/entitlements.types.js";import{getBilledPagesCount as u,isPathIgnored as h,readEnvVariable as w}from"../../utils/index.js";import t from"../../utils/reporter/logger.js";import{isGraphqlDoc as P}from"../graphql-docs/is-graphql-doc.js";import{isMarkdownPage as F}from"../markdown/is-markdown-page.js";import{isOpenapiDoc as A}from"../openapi-docs/is-openapi-doc.js";import{isReactPage as T}from"../pages/is-react-page.js";import{PAGE_COUNT_OUTPUT_FILE_NAME as O}from"../../constants.js";async function C(){return{id:"entitlements",async afterRoutesCreated(c,p){const r=g.instance(),o=[],i=[],n=[],a=[];for(const{relativePath:e}of await p.fs.scan())h(e)||(F(e)?o.push(e):P(e)?n.push(e):T(e)?a.push(e):await A(e,p)&&i.push(e));o.length>0&&!r.canAccessFeature(s.Markdown)&&t.warn(`Markdown files were detected in the project but are not supported. The following files are ignored: ${o.map(()=>"%rp").join(", ")}`,...o),i.length>0&&!r.canAccessFeature(s.Openapi)&&t.warn(`OpenAPI definitions were detected in the project but are not supported. The following files are ignored: ${i.map(()=>"%rp").join(", ")}`,...i),n.length>0&&!r.canAccessFeature(s.Graphql)&&t.warn(`GraphQL definitions were detected in the project but are not supported. The following files are ignored: ${n.map(()=>"%rp").join(", ")}`,...n),a.length>0&&!r.canAccessFeature(s.ReactPages)&&t.warn(`React pages were detected in the project but are not supported. The following files are ignored: ${a.map(()=>"%rp").join(", ")}`,...a);const f=u(c.getAllRoutes()),l=w("REDOCLY_METADATA_OUTPUT_FOLDER");l&&(t.info("Save total pages..."),m(d.join(l,O),JSON.stringify({totalPages:f},null)))}}}export{C as entitlementsPlugin};
