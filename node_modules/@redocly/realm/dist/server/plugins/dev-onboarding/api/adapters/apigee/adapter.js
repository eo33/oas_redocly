import{ApigeeDevOnboardingIntegrationAuthType as w,APIGEE_VERSION as m}from"./types.js";import{AlgorithmTypes as S}from"../../../../../web-server/jwt/types.js";import*as T from"../../../../../web-server/jwt/jwt.js";import{getFirstNameFromClaims as b,getLastNameFromClaims as U}from"../../../utils.js";import{HttpError as $}from"../../../../../utils/errors.js";import{logger as n}from"../../../../../utils/index.js";const f="developer.service.DeveloperDoesNotExist",E=60*60*24*365*1;function k(s){return s.replace(/\+/g,"%2B")}function y(s){return{id:s.consumerKey,clientId:s.consumerKey,clientSecret:s.consumerSecret,scopes:s.scopes,issuedAt:s.issuedAt,expiresAt:s.expiresAt,attributes:x(s.attributes),status:s.status,apiProductsStatus:s.apiProducts?.map(e=>({id:e.apiproduct,status:e.status,name:e.apiproduct}))||[],canBeRolled:!1,canBeRevoked:!0,valueToUseInHeader:"clientId"}}function A(s){const e=Object.fromEntries((s.attributes||[]).map(t=>[t.name,t.value]));return{id:s.name,name:e.DisplayName||s.name,description:e.Notes||"",attributes:e,createdAt:s.createdAt,lastModifiedAt:s.lastModifiedAt,scopes:s.scopes,credentials:s.credentials?.map(y)||[],supportsLogs:!1,canCreateKey:!0}}function O(s){const e=Object.fromEntries((s.attributes||[]).map(t=>[t.name,t.value]));return{id:s.name,name:e.DisplayName||s.name,description:s.description,attributes:e,createdAt:s.createdAt,lastModifiedAt:s.lastModifiedAt,approvalType:s.approvalType,scopes:s.scopes}}function v(s){return Object.entries(s||{}).map(([e,t])=>({name:e,value:t}))}function x(s){return Object.fromEntries((s||[]).map(e=>[e.name,e.value]))}let h=null;async function N(s){h?(await h).expiresAt<Date.now()/1e3&&(n.info("Token expired, requesting new apigee access token"),h=P(s)):(n.info("Requesting apigee access token"),h=P(s));try{return(await h).token}catch(e){throw h=null,e}}async function P({auth:s}){switch(s.type){case w.OAUTH2:return I(s);case w.SERVICE_ACCOUNT:return _(s)}}async function I(s){const e={grant_type:"client_credentials",client_id:s.clientId,client_secret:s.clientSecret};let t=await fetch(s.tokenEndpoint,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams(e).toString()});if(!t.ok)throw new Error(`Failed to get access token: ${t.statusText}
${await t.text()}`);const i=await t.json(),{access_token:a,expires_in:r}=i;return n.info("Apigee access token received"),{token:a,expiresAt:Math.floor(Date.now()/1e3)+r}}async function _(s){n.verbose(`Using service account to sign JWT token: Email: "%s" Private key: 
%s
`,s.serviceAccountEmail,s.serviceAccountPrivateKey.slice(0,30)+"***"+s.serviceAccountPrivateKey.slice(-30));const t={grant_type:"urn:ietf:params:oauth:grant-type:jwt-bearer",assertion:await T.sign({sub:s.serviceAccountEmail,iss:s.serviceAccountEmail,aud:"https://www.googleapis.com/oauth2/v4/token",iat:Math.floor(Date.now()/1e3),exp:Math.floor(Date.now()/1e3)+60*60,scope:"https://www.googleapis.com/auth/cloud-platform"},s.serviceAccountPrivateKey,S.RS256)};n.verbose("Exchanging JWT for access token",s.serviceAccountEmail,s.serviceAccountPrivateKey.slice(0,30)+"***"+s.serviceAccountPrivateKey.slice(-30));let i=await fetch("https://oauth2.googleapis.com/token",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams(t).toString()});if(!i.ok)throw new Error(`Failed to get access token: ${i.statusText}
${await i.text()}`);const a=await i.json(),{access_token:r,expires_in:o}=a;return n.info("Apigee access token received"),{token:r,expiresAt:Math.floor(Date.now()/1e3)+o}}class L{apiUrl;developerUrl;accessToken=null;organizationName;email;organizationUrl;version;userClaims;config;ignoreApiProducts;catalogApiProducts;allowApiProductsOutsideCatalog;adapterId;stage;constructor(e,t,i){const a=e;this.apiUrl=a.apiUrl||"https://apigee.googleapis.com/v1",this.organizationName=a.organizationName,this.email=t.email,this.organizationUrl=`${this.apiUrl}/organizations/${this.organizationName}`,this.developerUrl=`${this.organizationUrl}/developers/${k(this.email)}`,this.version=e.type==="APIGEE_X"?m.x:m.edge,this.userClaims=t,this.adapterId=a.organizationName,this.ignoreApiProducts=new Set(a.ignoreApiProducts||[]),this.catalogApiProducts=new Set(i),this.allowApiProductsOutsideCatalog=a.allowApiProductsOutsideCatalog??!1,this.config=a,this.stage=a.stage||"non-production"}async setAuthHeader(e){return e=e||{},e.headers={...e.headers,"Accept-Encoding":"identity",accept:"application/json",Authorization:"Bearer "+await N(this.config),"X-Api-Key":this.config.auth.type===w.OAUTH2?this.config.auth.clientId:void 0},e}getErrorMessage(e){if(!e)return"Fetch error";try{const t=JSON.parse(e);return t.code===f?t.code:t.error.details[0]?.["@type"]==="type.googleapis.com/google.rpc.PreconditionFailure"&&t.error.details[0]?.violations[0]?.type===f?f:t?.message||t.error.message}catch{return e}}async fetchData(e,t){const i=await this.setAuthHeader(t),a=typeof e=="string"?e:e.url,r=typeof e=="string"?"GET":e.method;n.verbose(`${r.toUpperCase()} request to "${a}"`);const o=await fetch(e,i);if(!o.ok){const u=await o.text(),c=this.getErrorMessage(u);if(c===f){const p=this.userClaims,g=b(p),l=U(p),d=this.email;return await this.createDeveloper(this.email,g,l,d),await this.fetchData(e,t)}throw o.status!==404&&n.warn(`${r.toUpperCase()} request to "${a}" failed with ${o.status} code`),new $(o.status,c)}return o.headers.get("x-redocly-apigee-version")===m.x&&(this.version=m.x),n.verbose(`${r.toUpperCase()} request to "${a}" OK`),o.json()}async getApps(){const e=`${this.developerUrl}/apps?expand=true`,{app:t}=await this.fetchData(e),i=(t||[]).map(A);return{data:i,total:i.length}}async getApiProducts(){const e=`${this.organizationUrl}/apiproducts?expand=true`,{apiProduct:t}=await this.fetchData(e),i=(t||[]).filter(a=>(this.allowApiProductsOutsideCatalog||this.catalogApiProducts.has(a.name))&&!this.ignoreApiProducts.has(a.name)).map(O);return{data:i,total:i.length}}async getApp(e){const t=`${this.developerUrl}/apps/${e}${this.version===m.edge?"?expand=true":""}`,i=await this.fetchData(t);return A(i)}createDeveloper(e,t,i,a){const r=`${this.organizationUrl}/developers`;return this.fetchData(r,{headers:{"Content-type":"application/json"},body:JSON.stringify({email:e,firstName:t,lastName:i,userName:a}),method:"POST"})}async createApp(e){const t=`${this.developerUrl}/apps`;n.verbose(`Creating app ${e.id} ${e.apiProductIds}`);const i=await this.fetchData(t,{headers:{"Content-type":"application/json"},body:JSON.stringify({name:e.id,apiProducts:e.apiProductIds||[],keyExpiresIn:1*365*24*60*60*1e3,attributes:v({...e.attributes,DisplayName:e.name,Notes:e.description||""})}),method:"POST"});if(e.credentials){const a=e.credentials[0];await this.fetchData(`${this.developerUrl}/apps/${e.id}/keys/create`,{headers:{"Content-type":"application/json"},body:JSON.stringify({consumerKey:a.clientId,consumerSecret:a.clientSecret,expiresInSeconds:C(a.expiresAt,E)}),method:"POST"}),n.info("Imported previously provided key");const r=i.credentials[0].consumerKey;await this.fetchData(`${this.developerUrl}/apps/${e.id}/keys/${r}`,{method:"DELETE"}),n.info("Deleted autogenerated key");const o=await this.fetchData(`${this.developerUrl}/apps/${e.id}/keys/${a.clientId}`,{headers:{"Content-type":"application/json"},body:JSON.stringify({apiProducts:e.apiProductIds||[]}),method:"POST"});i.credentials=[o]}return A(i)}async updateApp(e,t){const i=`${this.developerUrl}/apps/${e}`;try{const a=await this.getApp(e),r={...t.attributes};t.name&&(r.DisplayName=t.name),t.description&&(r.Notes=t.description);const o=await this.fetchData(i,{headers:{"Content-type":"application/json"},body:JSON.stringify({attributes:v({...a.attributes,...r})}),method:"PUT"});return A(o)}catch(a){if(a.message.includes("does not exist"))return;throw a}}async deleteApp(e){const t=`${this.developerUrl}/apps/${e}`;try{return await this.fetchData(t,{headers:{"Content-type":"application/json"},method:"DELETE"})}catch(i){if(i.message.includes("does not exist"))return;throw i}}async createCredential(e,t){const i=`${this.developerUrl}/apps/${e}`;let a;if(t.clientId&&t.clientSecret)await this.fetchData(`${this.developerUrl}/apps/${e}/keys/create`,{headers:{"Content-type":"application/json"},body:JSON.stringify({consumerKey:t.clientId,consumerSecret:t.clientSecret,expiresInSeconds:C(t.expiresAt,E)}),method:"POST"}),a=await this.fetchData(`${this.developerUrl}/apps/${e}/keys/${t.clientId}`,{headers:{"Content-type":"application/json"},body:JSON.stringify({apiProducts:t.apiProductIds||[]}),method:"POST"}),n.info("Imported previously provided key");else{const r=await this.getApp(e);a=(await this.fetchData(i,{headers:{"Content-type":"application/json"},method:"PUT",body:JSON.stringify({apiProducts:t.apiProductIds,attributes:v({...r.attributes,...t.attributes})})})).credentials[0]}return y(a)}async updateCredential(e,t,i){let a;try{a=await this.fetchData(`${this.developerUrl}/apps/${e}/keys/${t}`)}catch{a=void 0}if(!a)throw new $(404,"Cannot update credential that does not exist");const r=`${this.developerUrl}/apps/${e}/keys/${t}`,o=await this.fetchData(r,{headers:{"Content-type":"application/json"},method:"PUT",body:JSON.stringify({apiProducts:i.apiProductIds})}),u=o.apiProducts.filter(c=>!i.apiProductIds.includes(c.apiproduct)).map(c=>c.apiproduct);return await Promise.all(u.map(c=>this.fetchData(`${this.developerUrl}/apps/${e}/keys/${t}/apiproducts/${c}`,{method:"DELETE"}))),y(o)}async deleteCredential(e,t){const i=`${this.developerUrl}/apps/${e}/keys/${t}`;return y(await this.fetchData(i,{headers:{"Content-type":"application/octet-stream"},method:"DELETE"}))}async getAppLogDetails(e,t){throw new Error("Not implemented")}async getAppLogs(e,t){return{total:0,data:[]}}async getApiAccessStatus(e,t){const{data:i}=await this.getApps(),a=(i||[]).filter(p=>(p.credentials||[]).find(l=>l.apiProductsStatus.find(d=>d.id===e))),r=p=>a.find(g=>g.credentials?.find(d=>d.status===p&&d.apiProductsStatus.find(D=>D.id===e))),o=t?a.map(p=>{if(p.credentials?.find(l=>l.status==="approved"&&l.apiProductsStatus.find(d=>d.id===e)))return{id:p.id,title:p.name}}).filter(Boolean):void 0,u=r("approved");if(u)return{status:"ACCEPTED",appId:u.id,apps:o};const c=r("pending");return c?{status:"PENDING",appId:c.id,apps:o}:{status:"NONE"}}}function C(s,e){if(!(!s&&!e))return s=s||(Date.now()+e*1e3).toString(),Math.floor((parseInt(s,10)-Date.now())/1e3).toString()}export{L as ApigeeAdapter};
