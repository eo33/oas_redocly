import D from"@redocly/portal-plugin-mock-server";import x from"path";import{REDOCLY_ROUTE_RBAC as B}from"@redocly/config";import{isTruthy as O}from"@redocly/openapi-core";import{reporter as S}from"../utils/reporter/reporter.js";import{customPagesPlugin as A}from"../../server/plugins/pages/index.js";import{openAPIDocsPlugin as N}from"../../server/plugins/openapi-docs/index.js";import{sidebarsPlugin as k}from"../../server/plugins/sidebars/index.js";import{configParserPlugin as L}from"./config-parser/index.js";import{markdownPlugin as V}from"./markdown/index.js";import{generateBrowserPluginsModule as I,generateClientRoutes as _,generateTemplatesModule as j}from"../esbuild/generate.js";import{graphqlDocsPlugin as M}from"./graphql-docs/index.js";import{searchPlugin as $}from"./search/index.js";import{defaultThemePlugin as z}from"./default-theme/index.js";import{apiKeyMgmtPlugin as U}from"./dev-onboarding/index.js";import{catalogPlugin as q}from"./catalog/index.js";import{scorecardPlugin as G}from"./scorecard/index.js";import{resolvePlugins as K}from"../config/external-plugins.js";import{l10nPlugin as H}from"./l10n/index.js";import{analyticsPlugins as W}from"./analytics/index.js";import{sitemapPlugin as Y}from"./sitemap/index.js";import{entitlementsPlugin as J}from"./entitlements/index.js";import{logger as u,shaDirPathShort as Q,slug as X}from"../utils/index.js";import{telemetry as Z}from"../../cli/telemetry/index.js";import{EntitlementsProvider as ee}from"../entitlements/entitlements-provider.js";import{ssoPlugin as te}from"./sso/index.js";import{Cache as oe}from"../fs/cache.js";import{ContentFs as re}from"../fs/content-fs.js";import{normalizeRouteSlug as T,removeTrailingSlash as F,slash as ne}from"../../shared/utils.js";import{combineUrls as w,withPathPrefix as ie}from"../../shared/urls.js";import{VERSION_SEPARATOR as se}from"../constants.js";import{parsePathVersions as ae}from"./config-parser/loaders/versions-config-loader.js";import{findProductBySlug as le}from"../utils/product.js";import{isDevelopMode as ce}from"../utils/is-develop-mode.js";import{parseBaseName as ue}from"./utils.js";const fe=[L,te,z,H,V,N,G,A,M,U,q,k,Y,J,$,D,...W];async function Je(e,t=fe){const n=[],R=ee.instance(),f={};for(const C of t){const o=await C(e);for(const[i,m]of Object.entries(o.loaders||{}))f[i]&&S.panicOnBuild(`Duplicate loader with name ${i}`),f[i]=m;(!o.requiredEntitlements||o.requiredEntitlements?.every(i=>R.canAccessFeature(i)))&&n.push(o)}const s=new re(e.contentDir),y=new oe(s);return y.setLoaders(f),u.verbose("All plugins instantiated"),{pluginInstances:n,lifecycleContext:de(s,y)}}function E(e){u.verbose("Generating templates"),j(e),I(e),_(e)}function me(e){e.getAllRoutes().length||S.panicOnBuild("No routes created by plugins. Please check your project configuration.")}async function Qe(e,t,n,R={}){try{t.startPluginsRun();for(const o of e){const i=u.startTiming();await o.processContent?.(t,n),u.verboseTime(i,`processContent for ${o.id}`)}const s=(await K(t.contentDir,t.config.plugins)).map(o=>o.lifecyclePlugin).filter(O);n.cache.setLoaders(Object.fromEntries(s.flatMap(o=>Object.entries(o.loaders||{}))));for(const o of s){const i=u.startTiming();await o.processContent?.(t,n),u.verboseTime(i,`processContent for ${o.id}`)}const y=await ge(t,n),C=[...e,...s];E(t),ce()?await t.userCodeReady:t.buildRevision++;for(const o of C){const i=u.startTiming();await o.afterRoutesCreated?.(t,y),u.verboseTime(i,`afterRoutesCreated for ${o.id}`)}me(t),E(t)}catch(f){const s="Unhandled error in plugin. "+f.message+`
`+f.stack;Z.send("cli_error_caught",{message:s}),R.failFast?u.panic(s):S.panicOnBuild(s)}finally{t.finishPluginsRun()}}async function ge(e,t){const{cache:n,fs:R}=t,f=await t.getConfig(),s=Object.values(f.products||{}),y=(await n.load("versions-config","versions-config")).data,C=(await n.load("content-slugs","content-slugs")).data;for(const{duplicateInAllLocales:m,slugSuffix:d,sharedData:p=[],redirectFrom:P=[],...l}of e.newRoutes){const a=T(l.slug?l.slug:o(l.fsPath)),h=F(d?w(a,d):a),r={...l,[B]:{slug:h,fsPath:l.fsPath},slug:h,baseSlug:a,versions:i(l.fsPath,d),product:le(s,h,o)};e.routesByFsPath.set(r.fsPath,r.slug),e.routesBySlug.set(r.slug,r);for(const{key:g,id:c}of p)e.addRouteSharedData(r.slug,g,c);for(const g of P)e.addRedirect(g.from,{type:g.type,to:r.slug});if(m)for(const g of R.localeFolders){const c={...r,slug:"/"+g.toLowerCase()+r.slug};e.routesByFsPath.set(c.fsPath,c.slug),e.routesBySlug.set(c.slug,c);for(const{key:v,id:b}of p)e.addRouteSharedData(c.slug,v,b);for(const v of P){const b=w(R.localizationFolder,g,v.from);e.addRedirect(b,{type:v.type,to:c.slug})}}}return e.newRoutes=[],{...t,slugify:o};function o(m){const d=ne(m).replace(new RegExp("^(@i18n|@l10n)\\/"),""),p=C.fileSlugs.get(d)||C.dirSlugs.get(F(d));if(p)return p;const{baseName:P,isIndexFile:l}=ue(m);let a=x.dirname(m.replace(new RegExp("^(@i18n|@l10n)\\/"),""));return a=a==="."?"/":a,w("/",X(l?a:w(a,P)),"/")}function i(m,d=""){const p=ae(m);if(!p?.versionName)return;const{versionFolderPath:P,filePathInVersion:l,versionName:a}=p,h=y.get(P);if(h)return h.versions.map(r=>{const g=h.defaultVersion===r.version,c=w(P,se+r.version,l),v=o(c);return{version:r.version,label:r.name||r.version,link:T(w(v,d)),default:g,active:a===r.version,folderId:Q(`${P}`)}})}}function de(e,t){return{fs:e,cache:t,getConfig:async(n=".")=>(await t.load(n,"nearest-redocly-config",e.localeFolders)).data,isPathIgnored:async n=>(await t.load(n,"is-ignored")).data,withPathPrefix:ie,logger:u}}export{fe as INTERNAL_PLUGINS,de as createLifecycleContext,Je as initPlugins,Qe as runPlugins,E as writeClientEntries};
