import type { Node, RenderableTreeNode, Tag, Variable } from '@markdoc/markdoc';
/**
 * concatenates text content from multiple nodes.
 * For example given this argument:
 * [
 *   'Example of ',
 *   {
 *     name: 'code',
 *     attributes: {},
 *     children: [ 'h1' ]
 *   },
 *   ' heading'
 * ]
 *
 * the function will return `Example of h1 heading` string
 */
export declare function getInnerText(children: (RenderableTreeNode | Node | Variable)[], { isTrim }?: {
    isTrim?: boolean;
}): string;
export declare function getNodeAttribute<T = any>(node: Node | Tag, name: string): T | null;
export declare function getVariableEnv(node: Variable): string;
export declare function setNodeAttributeValue(node: Node | Tag, name: string, value: unknown): void;
//# sourceMappingURL=markdoc.d.ts.map