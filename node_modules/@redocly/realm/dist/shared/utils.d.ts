import type { Tag, Node, Variable } from '@markdoc/markdoc';
export declare const isLocalLink: (path: string | null | undefined) => path is string;
export declare const isAssetsLink: (path: string | null | undefined) => path is string;
/**
 *
 * @returns url with leading and without trailing slash or empty string, e.g. '/prefix'
 */
export declare function getPathPrefix(): string;
export declare function normalizePathPrefix(prefix: string): string;
export declare function addLeadingSlash(url: string): string;
export declare function addTrailingSlash(url: string): string;
export declare function removeTrailingSlash(url: string): string;
export declare function removeLeadingSlash(url: string): string;
export declare function isTag(value?: any): value is Tag;
export declare function isNode(value?: any): value is Node;
export declare function isTextNode(value?: any): value is Node & {
    type: 'text';
};
export declare function isCodeNode(value?: any): value is Node & {
    type: 'code';
};
export declare function isEnvVariable(value?: any): value is Variable | Node;
export declare const getCssPropertyValue: (name: string) => string;
export declare function normalizeRouteSlug(route: string): string;
export declare function sanitizePath(path: string): string;
export declare function isPrimitive(arg: any): arg is string | boolean | number;
export declare function pluralize(count: number, singular: string, plural: string): string;
export declare function isPathInFolder(child: string, parent: string): boolean;
/**
 * Convert Windows backslash paths to slash paths: foo\\bar âž” foo/bar
 *
 * @param  path
 * @return  slashed path
 */
export declare function slash(path: string): string;
//# sourceMappingURL=utils.d.ts.map