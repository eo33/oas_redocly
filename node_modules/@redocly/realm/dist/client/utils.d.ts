import type { ResolvedPageData } from '../shared/types';
import type { ResolvedNavItem, ResolvedNavItemWithLink } from '@redocly/config';
export declare function getNavbarElement(): HTMLElement;
export declare function replaceHashInColor(color: string): string;
export declare function normalizeRedocBadge(label: string): string;
export declare function flattenNestedItems<T extends Record<string, unknown>>(items: T[], res?: T[]): T[];
/**
 * @param sidebar
 * @param currentPathname
 */
export declare function getSiblingPages(items: ResolvedNavItem[] | undefined, currentPathname: string): {
    prevPage: ResolvedNavItemWithLink | undefined;
    nextPage: ResolvedNavItemWithLink | undefined;
} | {
    prevPage?: undefined;
    nextPage?: undefined;
};
export declare function getRouteBasePath({ templateId, sharedData }: ResolvedPageData): string;
export declare function isInIframe(): boolean;
export declare function isForcedNavigationLinkClick(event: MouseEvent | React.MouseEvent, target?: string): boolean;
//# sourceMappingURL=utils.d.ts.map