import{useMemo as g}from"react";import{useLocation as k}from"react-router-dom";import{useThemeConfig as I}from"@redocly/theme";import{usePageVersions as v,useTranslate as x}from"@portal/hooks";import{usePageSharedData as d}from"../hooks";import{useSidebarItems as T}from"./useSidebarItems";function P(){const r=d("sidebar")?.relatedNavbarItem,i=d("current-catalog-info"),e=I(),{translate:n}=x(),{versions:s=[]}=v()||{},o=s.find(t=>t?.active),{allSidebarItems:u}=T(o),b=k(),a=i?.catalog,l=i?.item,c=e.breadcrumbs?.prefixItems,f=e.breadcrumbs?.hide;return g(()=>{if(f===!0)return[];const t=p(u,b.pathname);if(t.length===0)return[];if(l&&t.unshift({label:l.label,link:l.link}),r&&r.label!==t[0].label&&t.unshift(r),a&&t.unshift({label:n(a.labelTranslationKey,a.label),link:a.link}),c?.length){const h=c.map(m=>({label:n(m.labelTranslationKey,m.label),link:m.link}));t.unshift(...h)}return t},[b.pathname,r,u,a,l,c,f,n])}const p=(r,i)=>{const e=r.find(({active:s,hasActiveSubItem:o})=>s||o);if(!e?.label)return[];const n={label:e.label,link:e.link};return e.type==="group"&&e.selectFirstItemOnExpand&&e.items?.[0]?.link&&(n.link=e.items[0].link),e.items?.length||(n.link=void 0),[n,...p(e.items||[],i)]};export{P as useBreadcrumbs};
