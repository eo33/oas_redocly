import { InstrumentationBase, InstrumentationConfig } from '@opentelemetry/instrumentation';
import { ErrorEvent } from './types';
export declare class ErrorInstrumentation extends InstrumentationBase {
    private readonly sendErrorEvent;
    private originalConsoleError;
    constructor(config: InstrumentationConfig | undefined, sendErrorEvent: SendErrorEventFn);
    static toErrorEvent(error: unknown, handler: string): ErrorEvent;
    enable(): void;
    disable(): void;
    protected init(): void;
    private static getErrorMessage;
    private static getErrorStack;
    private static getErrorType;
    private static combineConsoleErrorArgs;
    private onError;
    private onUnhandledRejection;
    private wrapConsoleError;
    private unwrapConsoleError;
    private sendError;
}
type SendErrorEventFn = (data: ErrorEvent) => void;
export {};
//# sourceMappingURL=error-instrumentation.d.ts.map