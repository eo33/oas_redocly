import*as L from"react";import{isFunction as v,mapObject as I,mapObjectAsync as O}from"../../shared/jsUtils.js";import{getClientPageDataUrl as T,getSharedDataUrl as j,GLOBAL_DATA_URL as z,withPathPrefix as b}from"../../shared/urls.js";import{normalizeRouteSlug as l}from"../../shared/utils.js";import{templates as h}from"./generated/templates.js";import{AsyncCache as S}from"./cache.js";import{fetch as y}from"./fetch.js";import{updateTranslations as x}from"../app/l10n";const d=new S,i=new S;let D=null,m,A;const p=new Set;async function E(){const o=await(await y(b(z))).json();return m=o,o}async function g(o){const t=b(j(o)),a=process.env.NODE_ENV==="development"?t:encodeURI(t);return await(await y(a)).json()}async function G(o){return i.has(o)||i.set(o,g(o)),i.get(o)}function H(){const[,o]=L.useReducer(t=>t+1,0);typeof window>"u"||process.env.NODE_ENV!=="production"&&(window.__redoclyRefresh=o)}class R{static markdocComponents={};static async updateTemplate(t,a,e){const s=l(t);h[e]=()=>a;const n=l(window.location.pathname);s===n&&(await this.load(t,!0),window.__redoclyRefresh())}static async update(t){const a=l(t),e=l(window.location.pathname);if(a!==e){d.delete(a);return}await this.load(t,!0),window.__redoclyRefresh()}static async updateSharedData(t){await i.set(t,g(t)),window.__redoclyRefresh()}static addGlobalDataListener(t){p.add(t)}static removeGlobalDataListener(t){p.delete(t)}static updateGlobalData(t){p.forEach(a=>a(t)),m=t,x(m.l10n)}static async tryLoad(t,a){try{return await this.load(t,a)}catch{return null}}static async loadDynamicMarkdocComponents(t){const a=this.markdocComponents?.[t];a&&v(a)&&Object.assign(this.markdocComponents,await a())}static async load(t,a){const e=l(t),s=await d.get(e);if(!m&&!D&&(D=E()),s&&!a)return s;{const[r]=await Promise.all([d.set(e,n()),D]);return r}async function n(){const r=await y(T(e)),{templateId:c,sharedDataIds:u,props:_,userData:C,versions:P,redirectTo:k}=await r.json(),[f]=await Promise.all([(await h[c]()).default,Promise.all((_.dynamicMarkdocComponents||[]).map(w=>R.loadDynamicMarkdocComponents(w))),u?O(u,w=>G(w)):Promise.resolve({})]);return{templateId:c,slug:e,sharedDataIds:u,redirectTo:k,props:_,Template:typeof f=="function"?f:f?.default,userData:C,versions:P}}}static loadSync(t){const a=l(t),e=d.tryGetSync(a);if(!e)return;const s=I(e.sharedDataIds,n=>i.getSync(n,"Data dependency not cached ahead of time: "+n));return{...e,sharedData:s}}static async prepare(t,a,e,s){const n=t.templateId;if(await Promise.all((t.props.dynamicMarkdocComponents||[]).map(c=>this.loadDynamicMarkdocComponents(c))),a)for(const c of Object.keys(a))i.setSync(c,a[c]);const r=(await h[n]()).default;d.setSync(t.slug,{templateId:n,slug:t.slug,props:t.props,sharedDataIds:t.sharedDataIds||{},Template:typeof r=="function"?r:r?.default,userData:t.userInfo,versions:t.versions}),m=e,A=s}static clear(){p.clear(),i.clear(),d.clear()}}(typeof window<"u"?window:global).__LOADER=R;export{R as Loader,G as getSharedData,m as globalData,A as initLocale,H as useRefresh};
