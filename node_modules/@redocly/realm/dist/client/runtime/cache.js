class i{inflightCache=new Map;resolvedCache=new Map;clear(){this.inflightCache.clear(),this.resolvedCache.clear()}has(e){return this.inflightCache.has(e)||this.resolvedCache.has(e)}async get(e){const t=this.resolvedCache.get(e);return t||this.inflightCache.get(e)}tryGetSync(e){return this.resolvedCache.get(e)}getSync(e,t){if(!this.resolvedCache.has(e))throw new Error(t??"Cache key not found: "+e);return this.resolvedCache.get(e)}set(e,t){return this.inflightCache.set(e,t),t.then(h=>{if(this.inflightCache.get(e)===t)return this.inflightCache.delete(e),this.resolvedCache.set(e,h),h})}setSync(e,t){this.inflightCache.delete(e),this.resolvedCache.set(e,t)}delete(e){this.inflightCache.delete(e),this.resolvedCache.delete(e)}}export{i as AsyncCache};
