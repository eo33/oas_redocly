import type { ExtendedOpenAPIOperation, Unstable_ExternalCodeSample, OpenAPIParser, Options } from '../services';
import type { OpenAPIServer, OpenAPIXCodeSample } from '../types';
import type { MediaContentModel, OperationModel, GroupModel } from './types';
export interface Sample {
    lang: string;
    label?: string;
}
export interface XPayloadSample extends Sample {
    lang: 'payload';
    requestBodyContent: MediaContentModel;
    source: string;
}
export interface Callback {
    isCallback: boolean;
    id?: string;
}
export declare function isPayloadSample(sample: XPayloadSample | OpenAPIXCodeSample | Unstable_ExternalCodeSample): sample is XPayloadSample;
export declare function getOperation(parser: OpenAPIParser, operationDefinition: ExtendedOpenAPIOperation, parent: GroupModel | undefined, options: Options, href: string, callback?: Callback, isVisible?: boolean): OperationModel;
export declare function mergeInMockServer(servers: OpenAPIServer[], mockServerOptions: Options['mockServer']): OpenAPIServer[];
