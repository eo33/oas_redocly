"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.info=void 0;const stringify_object_1=__importDefault(require("stringify-object")),code_builder_1=require("../../helpers/code-builder"),__1=require("../.."),constants_1=require("../../helpers/constants"),code_helpers_1=require("../../helpers/code-helpers"),utils_1=require("../../../../utils"),constants_2=require("../../../../../constants"),indent=1;function hasMimeType(e={},t){return(0,utils_1.normalizeMimeType)(e.mimeType)===t}const handler=function(e,t,{target:s,client:a}){var r,i,n,o,l;const u=e.method.toUpperCase(),p=null===(r=e.securityOAuth2ExtraCalls)||void 0===r?void 0:r[0],c=Object.assign({capitalize:!0,showBoilerplate:!0,indent:"  "},t),d=new code_builder_1.CodeBuilder({indentation:c.indent,variablesPrefix:c.variablesPrefix,capitalize:c.capitalize,lang:constants_1.Lang.RUBY});c.showBoilerplate&&(d.push("require 'uri'").push("require 'net/http'"),"https:"===e.uriObj.protocol&&d.push("require 'openssl'"),(hasMimeType(e.postData,constants_2.MediaTypes.JSON)||p)&&d.unshift("require 'json'"),d.blank()),Object.keys(e.allHeaders).length&&Object.keys(e.allHeaders).forEach((t=>{e.allHeaders[t]=`'${e.allHeaders[t]}'`}));const h=u.charAt(0)+u.substring(1).toLowerCase();if(["GET","POST","HEAD","DELETE","PATCH","PUT","OPTIONS","COPY","LOCK","UNLOCK","MOVE","TRACE"].indexOf(u)<0&&d.push("class Net::HTTP::%s < Net::HTTPRequest",h).push("  METHOD = '%s'",u.toUpperCase()).push("  REQUEST_HAS_BODY = '%s'",(null===(i=e.postData)||void 0===i?void 0:i.text)?"true":"false").push("  RESPONSE_HAS_BODY = true").push("end").blank(),p){const t="oAuth2",r=new __1.HTTPSnippet(p).convert(s,a,Object.assign(Object.assign({},c),{variablesPrefix:t,showBoilerplate:!1})),i=`${t}${c.capitalize?"Response":"response"}`;d.push(r).push(`access_token = JSON.parse(${i}.body)['access_token']`).blank(),e.allHeaders.Authorization='"Bearer " + access_token'}(0,code_helpers_1.printUrlVariablesDeclarations)(e,d),d.push(`${d.var("url")} = URI(${(0,code_helpers_1.buildUrlExpression)(e,d)})`);if(Object.getOwnPropertyNames(e.queryObj).length&&(d.push(`${d.var("params")} = ${(0,stringify_object_1.default)(e.queryObj,{indent:c.indent,inlineCharacterLimit:25})}`),d.push(`${d.var("url")}.query = URI.encode_www_form(${d.var("params")})`)),d.blank().push(`${d.var("http")} = Net::HTTP.new(${d.var("url")}.host, ${d.var("url")}.port)`),"https:"===e.uriObj.protocol&&d.push(`${d.var("http")}.use_ssl = true`),d.blank().push(`${d.var("request")} = Net::HTTP::%s.new(${d.var("url")})`,h),Object.keys(e.allHeaders).length&&Object.keys(e.allHeaders).forEach((t=>{e.allHeaders[t]!==`'${constants_2.MediaTypes.MULTIPART}'`&&d.push(`${d.var("request")}['%s'] = %s`,t,e.allHeaders[t])})),null==e?void 0:e.postData){const t={};switch((0,utils_1.normalizeMimeType)(null===(n=null==e?void 0:e.postData)||void 0===n?void 0:n.mimeType)){case constants_2.MediaTypes.URL_ENCODED:e.postData.params.forEach((e=>{t[e.name]=e.value})),d.push(`${d.var("request")}.body = URI.encode_www_form(${(0,stringify_object_1.default)(t,{indent:c.indent,inlineCharacterLimit:25})})`);break;case constants_2.MediaTypes.JSON:d.push(`${d.var("request")}.body = ${(0,stringify_object_1.default)(e.postData.jsonObj,{indent:c.indent,inlineCharacterLimit:25}).replace(/null/g,"nil")}.to_json`);break;case constants_2.MediaTypes.MULTIPART:e.postData.params&&(d.push(`${d.var("form_data")} = [`),e.postData.params.forEach((e=>{d.push(1,`['${e.name}', '${e.value}'],`)})),d.push("]")),d.push(`${d.var("request")}.set_form(${d.var("form_data")}, '${constants_2.MediaTypes.MULTIPART}')`);break;default:(null===(o=e.postData)||void 0===o?void 0:o.text)&&d.push(`${d.var("request")}.body = ${JSON.stringify(null===(l=e.postData)||void 0===l?void 0:l.text)}`)}}if(e.basicAuth){const{username:t,password:s}=e.basicAuth;d.push(`${d.var("request")}.basic_auth('${t}', '${s}')`)}return d.blank().push(`${d.var("response")} = ${d.var("http")}.request(${d.var("request")})`).push(`puts ${d.var("response")}.read_body`).blank(),d.join()};exports.info={key:"native",title:"net::http",link:"http://ruby-doc.org/stdlib-2.2.1/libdoc/net/http/rdoc/Net/HTTP.html",description:"Ruby HTTP client"},exports.default=handler;
//# sourceMappingURL=native.js.map