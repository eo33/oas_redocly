import{tryDecodeURIComponent}from"./string";class QueryString{parse(o){const t={};if(!o)return t;const n=o.startsWith("?")?o.substring(1).split("&"):o.split("&");for(const o of n){const[n,e]=o.split("=");if(n&&e){const o=tryDecodeURIComponent(n),r=tryDecodeURIComponent(e);if(o in t)Array.isArray(t[o])?t[o].push(r):t[o]=[t[o],r];else{const n=[",","|"].find((o=>r.includes(o)));t[o]=n?r.split(n):r}}}return t}stringify(o,t={encode:!0,sort:!0}){const n=[];for(const[e,r]of Object.entries(o))if(Object.prototype.hasOwnProperty.call(o,e)){const o=t.encode?encodeURIComponent(e):e;if(Array.isArray(r)){for(const e of r)if(e){const r=t.encode?encodeURIComponent(e):e;n.push(`${o}=${r}`)}}else if(r){const e=t.encode?encodeURIComponent(r):r;n.push(`${o}=${e}`)}}return t.sort&&n.sort(),n.join("&")}}const queryString=new QueryString;export{queryString};
//# sourceMappingURL=queryString.js.map