import{getValueFromMdParsedExtension}from"../utils";export function getSecurity(e=[],t){return e.map((e=>getSecurityRequirement({requirement:e,parser:t}))).filter((({schemes:e})=>e.length>0))}function getSecurityRequirement({requirement:e,parser:t}){const r=t.definition.components&&t.definition.components.securitySchemes||{};return{schemes:Object.keys(e||{}).map((n=>{const i=t.deref(r[n]).resolved,o=e[n]||[];if(i)return Object.assign(Object.assign({},i),{id:n,sectionId:n,scopes:o})})).filter(Boolean)}}export function getSecurityScheme(e,t,r){if(!(null==e?void 0:e.deref))return{};const{resolved:n}=e.deref(r),i=t,o=n.type,s=getValueFromMdParsedExtension(n,"description")||"";let c,a,u,m={};switch(n.type){case"apiKey":c={name:n.name,in:n.in};break;case"http":a={scheme:n.scheme,bearerFormat:n.bearerFormat};break;case"openIdConnect":u={connectUrl:n.openIdConnectUrl};break;case"oauth2":m=n.flows}return{id:t,sectionId:i,type:o,description:s,apiKey:c,http:a,flows:m,openId:u}}export function getSecuritySchemes({parser:e}){var t,r;if(!e)return[];const n=(null===(r=null===(t=e.definition)||void 0===t?void 0:t.components)||void 0===r?void 0:r.securitySchemes)||{};return Object.keys(n).map((t=>getSecurityScheme(e,t,n[t])))}
//# sourceMappingURL=security.js.map