import*as Sampler from"openapi-sampler";import{getSchema}from"./schema";import{isFormUrlEncoded,isJsonLike,isXmlLike,isMultipartFormData,JsonPointer,mapValues}from"../utils";import{getExamples}from"./example";function generateExamples({parser:e,info:{encoding:a,schema:i},schema:s,mime:o,options:{isRequestType:n,onlyRequiredInSamples:r,generatedSamplesMaxDepth:m,format:t="json"}}){const p={skipReadOnly:n,skipWriteOnly:!n,skipNonRequired:n&&r,maxSampleDepth:m,quiet:!0,format:t};let l={};if(s&&s.oneOf)for(const i of s.oneOf){const n=Sampler.sample(i.rawSchema,p,e.definition);s.discriminatorProp&&"object"==typeof n&&n&&n[s.discriminatorProp]&&(n[s.discriminatorProp]=i.title),l[i.title]=getExamples({parser:e,infoOrRef:{value:n},mime:o,encoding:a})}else l=s?{default:getExamples({parser:e,infoOrRef:{value:Sampler.sample(i,p,e.definition)},mime:o,encoding:a})}:{default:{value:null,rawValue:"null"}};return l}export function getMediaType(e,a,i,s,o,{operation:n,type:r,response:m,absolutePointer:t=""}){let p,l;const d=s.schema&&getSchema({parser:e,schemaOrRef:s.schema,pointer:"",absolutePointer:JsonPointer.join(t,["content",a,"schema"]),options:o,deps:{operation:n,type:r,response:m}}),{onlyRequiredInSamples:f,generatedSamplesMaxDepth:u}=o,{encoding:c,examples:g,example:x}=s;return o.unstable_skipSamples||(void 0!==g?p=mapValues(g,(i=>getExamples({parser:e,infoOrRef:i,mime:a,encoding:c}))):void 0!==x?p={default:getExamples({parser:e,infoOrRef:{value:e.deref(x).resolved},mime:a,encoding:c})}:isJsonLike(a)||isXmlLike(a)?p=generateExamples({parser:e,info:s,schema:d,mime:a,options:{isRequestType:i,onlyRequiredInSamples:f,generatedSamplesMaxDepth:u,format:isXmlLike(a)?"xml":"json"}}):(isFormUrlEncoded(a)||isMultipartFormData(a))&&(l=generateExamples({parser:e,info:s,schema:d,mime:a,options:{isRequestType:i,onlyRequiredInSamples:f,generatedSamplesMaxDepth:u}}))),{examples:p,schema:d,name:a,isRequestType:i,formExamples:l,onlyRequiredInSamples:f,operation:n}}
//# sourceMappingURL=mediaType.js.map