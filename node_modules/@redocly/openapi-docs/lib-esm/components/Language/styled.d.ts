import { DropdownMenuItem } from '@redocly/theme';
export declare const Container: import("styled-components").StyledComponent<"span", any, {}, never>;
export declare const LanguageTitle: import("styled-components").StyledComponent<"span", any, {
    active?: boolean;
}, never>;
export declare const LanguageTitleContainer: import("styled-components").StyledComponent<"span", any, {}, never>;
export declare const LanguageIcon: import("styled-components").StyledComponent<"span", any, {}, never>;
export declare const LanguageListContainer: import("styled-components").StyledComponent<"div", any, {
    $justifyContent?: string;
}, never>;
export declare const LanguageListItem: import("styled-components").StyledComponent<"button", any, {
    active: boolean;
}, never>;
export declare const StyledDropdownMenuItem: import("styled-components").StyledComponent<typeof DropdownMenuItem, any, Partial<Pick<import("@redocly/theme").LinkProps, "target" | "to" | "external">> & {
    prefix?: import("react").ReactNode;
    suffix?: import("react").ReactNode;
    content?: import("react").ReactNode;
    separatorLine?: boolean;
    dataAttributes?: Record<string, string>;
    className?: string;
    style?: import("react").CSSProperties;
    role?: string;
    separator?: boolean;
    disabled?: boolean;
    dangerous?: boolean;
    onAction?: () => void;
    active?: boolean;
} & {
    $width?: number;
}, never>;
export declare const DropdownTriggerButton: import("styled-components").StyledComponent<import("react").FC<import("@redocly/theme").ButtonProps>, any, import("@redocly/theme").ButtonProps, never>;
