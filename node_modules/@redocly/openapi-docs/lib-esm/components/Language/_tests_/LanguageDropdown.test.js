import{jsx as _jsx}from"react/jsx-runtime";import{render,fireEvent,screen}from"@testing-library/react";import{LanguageDropdown}from"../LanguageDropdown";const mockSamples=[{key:"js",title:"JS",lang:"js"},{key:"node.js",title:"Node.JS",lang:"nodejs"}],mockActiveTab=mockSamples[0].key,mockOnChange=jest.fn();describe("LanguageDropdown",(()=>{test("LanguageDropdown renders correctly",(()=>{const{getAllByText:e}=render(_jsx(LanguageDropdown,{samples:mockSamples,activeTab:mockActiveTab,onChange:mockOnChange}));expect(e(mockSamples[0].title)[0]).toBeInTheDocument()})),test("LanguageDropdown handles onChange correctly",(()=>{const{getAllByText:e}=render(_jsx(LanguageDropdown,{samples:mockSamples,activeTab:mockActiveTab,onChange:mockOnChange}));fireEvent.click(screen.getAllByText(mockSamples[0].title)[0]);const n=mockSamples[1];fireEvent.click(e(n.title)[0]),expect(mockOnChange).toHaveBeenCalledWith(n.key)}))}));
//# sourceMappingURL=LanguageDropdown.test.js.map