export declare const FieldLabel: import("styled-components").StyledComponent<"span", any, {}, never>;
export declare const TypePrefix: import("styled-components").StyledComponent<"span", any, {}, never>;
export declare const TypeName: import("styled-components").StyledComponent<"span", any, {}, never>;
export declare const TypeTitle: import("styled-components").StyledComponent<"span", any, {}, never>;
export declare const PropertyLabel: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const RequiredLabel: import("styled-components").StyledComponent<"span", any, {}, never>;
export declare const AdditionalPropertiesLabel: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const Tag: import("styled-components").StyledComponent<"span", any, {
    className: "tag-grey";
}, "className">;
export declare const AccessLabel: import("styled-components").StyledComponent<"span", any, {
    className: "tag-grey";
}, "className">;
export declare const FieldValueLabel: import("styled-components").StyledComponent<"span", any, {
    className: "tag-grey";
}, "className">;
export declare const RecursiveLabel: import("styled-components").StyledComponent<"span", any, {
    className: "tag-grey";
}, "className">;
export declare const EnumValue: import("styled-components").StyledComponent<"span", any, {
    className: "tag-grey";
}, "className">;
export declare const DefaultValue: import("styled-components").StyledComponent<"span", any, {
    className: "tag-grey";
}, "className">;
export declare const ExampleValue: import("styled-components").StyledComponent<"span", any, {
    className: "tag-grey";
}, "className">;
export declare const ExtensionValue: import("styled-components").StyledComponent<"span", any, {
    className: "tag-grey";
}, "className">;
export declare const ConstraintItem: import("styled-components").StyledComponent<"span", any, {
    className: "tag-grey";
}, "className">;
export declare const ToggleButton: import("styled-components").StyledComponent<import("react").FC<import("@redocly/theme").ButtonProps>, any, import("@redocly/theme").ButtonProps & {
    variant: "link";
    size: "small";
}, "size" | "variant">;
