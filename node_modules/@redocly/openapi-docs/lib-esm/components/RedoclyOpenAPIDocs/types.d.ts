import type { LayoutVariant } from '@redocly/theme';
import type { CodeSampleConfig } from '../../services';
import type { RedocConfig } from '@redocly/config';
import type { OpenAPIDefinition } from '../../types';
import type { RoutingProps, StoreProps } from '../../hoc/types';
import type { OperationStore } from '../../jotai/operation';
export interface RedoclyOpenAPIDocsProps extends RoutingProps, StoreProps {
    onLoaded?: () => void;
    store?: StoreProviderProps;
    licenseKey?: string;
    withCommonStyles?: boolean;
}
export interface StoreProviderProps {
    options?: RedocConfig;
    definition: OpenAPIDefinition;
    definitionUrl?: string;
    withState?: {
        environment?: string;
        activeMimeName?: string;
        environments?: Record<string, Record<string, string>>;
        layout?: LayoutVariant;
        operation?: {
            pointer: string;
            state: Partial<OperationStore>;
        };
    };
}
export interface AppProviderProps {
    definitionUrl?: string;
    definition?: GenericObject;
    options?: RedocConfig;
    activeItemId?: string;
    activeSampleLanguage?: CodeSampleConfig['lang'] | string;
    activeDeepLink?: string;
    portalOptions?: {
        defaultMimeType?: string;
    };
}
export interface RedoclyOpenAPIDocsStandaloneProps {
    definition?: GenericObject;
    definitionUrl?: string;
    options?: RedocConfig;
    activeItemId?: string;
    activeSampleLanguage?: CodeSampleConfig['lang'];
    activeDeepLink?: string;
}
