import{getTagGroupsItems,getTagsItems,getTagsWithOperations}from"./tags";import{addMarkdownItems}from"./markdown";import{flattenByProp,getValueFromMdParsedExtension}from"../../utils";import{DEFAULT_WEBHOOKS_TAG_NAME}from"../../constants";export function buildMenuStructure(t,e){var o,n,i;const{definition:s}=t,{schemaDefinitionsTagName:r}=e,a=[{id:"",name:(null===(n=null===(o=null==s?void 0:s.info)||void 0===o?void 0:o["x-seo"])||void 0===n?void 0:n.title)||(null===(i=null==s?void 0:s.info)||void 0===i?void 0:i.title)||"Overview",href:"/",depth:1,level:1,type:"section",infoDefinition:s.info,items:[]}],d=[...s.tags||[]];d.some((t=>t.name===DEFAULT_WEBHOOKS_TAG_NAME))||d.push({name:DEFAULT_WEBHOOKS_TAG_NAME});!d.find((t=>(null==t?void 0:t.name)===r))&&r&&d.push({name:r});const m=getTagsWithOperations(t,d),u=s["x-tagGroups"];return a.push(...addMarkdownItems(getValueFromMdParsedExtension(s.info,"description")||"",void 0,1)),u&&u.length>0?a.push(...getTagGroupsItems(t,void 0,u,m,e)):a.push(...getTagsItems(t,m,void 0,void 0,e)),a}export function buildContentItems(t,e){const o=buildMenuStructure(t,e);return{contentItems:o,flatItems:flattenByProp(o||[],"items")}}
//# sourceMappingURL=builder.js.map