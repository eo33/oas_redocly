import type { OpenAPIParser } from '../OpenAPIParser';
import type { ContentItemModel, GroupModel } from '../../models';
import type { TagGroup, TagsInfoMap } from '../types';
import type { Options } from '../config-options';
import type { OpenAPITag } from '../../types';
/**
 * Returns array of OperationsGroup items for the tags of the group or for all tags
 * @param parser
 * @param tagsMap tags info returned from `getTagsWithOperations`
 * @param parent parent item
 * @param group group which this tag belongs to. if not provided gets all tags
 * @param options - normalized options
 */
export declare function getTagsItems(parser: OpenAPIParser, tagsMap: TagsInfoMap, parent: GroupModel | undefined, group: TagGroup | undefined, options: Options): ContentItemModel[];
/**
 * Returns array of OperationsGroup items for the tag groups (x-tagGroups vendor extension)
 * @param parser
 * @param parent
 * @param groups
 * @param tags value of `x-tagGroups` vendor extension
 * @param options - normalized options
 */
export declare function getTagGroupsItems(parser: OpenAPIParser, parent: GroupModel | undefined, groups: TagGroup[], tags: TagsInfoMap, options: Options): GroupModel[];
/**
 * collects tags and maps each tag to list of operations belonging to this tag
 */
export declare function getTagsWithOperations(parser: OpenAPIParser, explicitTags: OpenAPITag[]): TagsInfoMap;
