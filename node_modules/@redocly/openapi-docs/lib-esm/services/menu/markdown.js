import{parse,Ast}from"@markdoc/markdoc";import{isString}from"@redocly/theme";import{getTagOrGroup}from"../../models";import{safeSlugify,unescapeHTMLChars}from"../../utils";export function addMarkdownItems(t,e,i){const n=isString(t)?parse(t):Ast.fromJSON(JSON.stringify(null==t?void 0:t.result)),o=[];let r;const s=(t,e,i=o,n,r)=>{let s;t=unescapeHTMLChars(t),n.attributes.id?s=n.attributes.id:(s=r?`${r}/${safeSlugify(t)}`:`section/${safeSlugify(t)}`,n.attributes.id=s);const l={id:s.toLowerCase(),name:t,level:e,items:[],ast:[n]};return i.push(l),l},l=(t,e)=>{var i,n;null===(n=null===(i=t[t.length-1])||void 0===i?void 0:i.ast)||void 0===n||n.push(e)},a=t=>{var e;for(const i of t.children){const t=getMarkdownContent(i)||"";"heading"===i.type&&1===i.attributes.level?r=s(t,i.attributes.level,void 0,i):i.attributes.level?s(t,i.attributes.level,null==r?void 0:r.items,i,null==r?void 0:r.id):(null===(e=null==r?void 0:r.items)||void 0===e?void 0:e.length)?l(null==r?void 0:r.items,i):(null==o?void 0:o.length)&&l(o,i)}};if(Array.isArray(n))for(const t of n)a(t);else a(n);return mapHeadingsDeep(e,o,i)}function mapHeadingsDeep(t,e,i=1){return e.map((e=>{const n=getTagOrGroup("section",e,t);return n.depth=i,e.items&&(n.items=mapHeadingsDeep(n,e.items,i+1)),n}))}function getMarkdownContent(t){var e,i;return"string"==typeof(null===(e=null==t?void 0:t.attributes)||void 0===e?void 0:e.content)?null===(i=t.attributes)||void 0===i?void 0:i.content:(null==t?void 0:t.children)?getMarkdownContent(t.children[0]):void 0}
//# sourceMappingURL=markdown.js.map