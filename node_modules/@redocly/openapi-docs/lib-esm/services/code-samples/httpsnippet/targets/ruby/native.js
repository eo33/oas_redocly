import stringifyObject from"stringify-object";import{CodeBuilder}from"../../helpers/code-builder";import{HTTPSnippet}from"../..";import{Lang}from"../../helpers/constants";import{buildUrlExpression,printUrlVariablesDeclarations}from"../../helpers/code-helpers";import{normalizeMimeType}from"../../../../utils";import{MediaTypes}from"../../../../../constants";const indent=1;function hasMimeType(e={},t){return normalizeMimeType(e.mimeType)===t}const handler=function(e,t,{target:a,client:s}){var r,i,n,o,p;const l=e.method.toUpperCase(),u=null===(r=e.securityOAuth2ExtraCalls)||void 0===r?void 0:r[0],d=Object.assign({capitalize:!0,showBoilerplate:!0,indent:"  "},t),h=new CodeBuilder({indentation:d.indent,variablesPrefix:d.variablesPrefix,capitalize:d.capitalize,lang:Lang.RUBY});d.showBoilerplate&&(h.push("require 'uri'").push("require 'net/http'"),"https:"===e.uriObj.protocol&&h.push("require 'openssl'"),(hasMimeType(e.postData,MediaTypes.JSON)||u)&&h.unshift("require 'json'"),h.blank()),Object.keys(e.allHeaders).length&&Object.keys(e.allHeaders).forEach((t=>{e.allHeaders[t]=`'${e.allHeaders[t]}'`}));const c=l.charAt(0)+l.substring(1).toLowerCase();if(["GET","POST","HEAD","DELETE","PATCH","PUT","OPTIONS","COPY","LOCK","UNLOCK","MOVE","TRACE"].indexOf(l)<0&&h.push("class Net::HTTP::%s < Net::HTTPRequest",c).push("  METHOD = '%s'",l.toUpperCase()).push("  REQUEST_HAS_BODY = '%s'",(null===(i=e.postData)||void 0===i?void 0:i.text)?"true":"false").push("  RESPONSE_HAS_BODY = true").push("end").blank(),u){const t="oAuth2",r=new HTTPSnippet(u).convert(a,s,Object.assign(Object.assign({},d),{variablesPrefix:t,showBoilerplate:!1})),i=`${t}${d.capitalize?"Response":"response"}`;h.push(r).push(`access_token = JSON.parse(${i}.body)['access_token']`).blank(),e.allHeaders.Authorization='"Bearer " + access_token'}printUrlVariablesDeclarations(e,h),h.push(`${h.var("url")} = URI(${buildUrlExpression(e,h)})`);if(Object.getOwnPropertyNames(e.queryObj).length&&(h.push(`${h.var("params")} = ${stringifyObject(e.queryObj,{indent:d.indent,inlineCharacterLimit:25})}`),h.push(`${h.var("url")}.query = URI.encode_www_form(${h.var("params")})`)),h.blank().push(`${h.var("http")} = Net::HTTP.new(${h.var("url")}.host, ${h.var("url")}.port)`),"https:"===e.uriObj.protocol&&h.push(`${h.var("http")}.use_ssl = true`),h.blank().push(`${h.var("request")} = Net::HTTP::%s.new(${h.var("url")})`,c),Object.keys(e.allHeaders).length&&Object.keys(e.allHeaders).forEach((t=>{e.allHeaders[t]!==`'${MediaTypes.MULTIPART}'`&&h.push(`${h.var("request")}['%s'] = %s`,t,e.allHeaders[t])})),null==e?void 0:e.postData){const t={};switch(normalizeMimeType(null===(n=null==e?void 0:e.postData)||void 0===n?void 0:n.mimeType)){case MediaTypes.URL_ENCODED:e.postData.params.forEach((e=>{t[e.name]=e.value})),h.push(`${h.var("request")}.body = URI.encode_www_form(${stringifyObject(t,{indent:d.indent,inlineCharacterLimit:25})})`);break;case MediaTypes.JSON:h.push(`${h.var("request")}.body = ${stringifyObject(e.postData.jsonObj,{indent:d.indent,inlineCharacterLimit:25}).replace(/null/g,"nil")}.to_json`);break;case MediaTypes.MULTIPART:e.postData.params&&(h.push(`${h.var("form_data")} = [`),e.postData.params.forEach((e=>{h.push(1,`['${e.name}', '${e.value}'],`)})),h.push("]")),h.push(`${h.var("request")}.set_form(${h.var("form_data")}, '${MediaTypes.MULTIPART}')`);break;default:(null===(o=e.postData)||void 0===o?void 0:o.text)&&h.push(`${h.var("request")}.body = ${JSON.stringify(null===(p=e.postData)||void 0===p?void 0:p.text)}`)}}if(e.basicAuth){const{username:t,password:a}=e.basicAuth;h.push(`${h.var("request")}.basic_auth('${t}', '${a}')`)}return h.blank().push(`${h.var("response")} = ${h.var("http")}.request(${h.var("request")})`).push(`puts ${h.var("response")}.read_body`).blank(),h.join()};export const info={key:"native",title:"net::http",link:"http://ruby-doc.org/stdlib-2.2.1/libdoc/net/http/rdoc/Net/HTTP.html",description:"Ruby HTTP client"};export default handler;
//# sourceMappingURL=native.js.map